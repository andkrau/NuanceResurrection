; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	c:\NuanceExperimental\NuonEnvironment.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?audioStream@@3PAUFSOUND_STREAM@@A		; audioStream
PUBLIC	?line@@3PADA					; line
PUBLIC	?audioCallbacks@@3VAudioCallbacks@@A		; audioCallbacks
PUBLIC	?dvdWriteBase@@3PADA				; dvdWriteBase
PUBLIC	?dvdReadWriteBase@@3PADA			; dvdReadWriteBase
PUBLIC	?dvdReadBase@@3PADA				; dvdReadBase
PUBLIC	?bFMODInitialized@@3_NA				; bFMODInitialized
PUBLIC	?audioChannel@@3HA				; audioChannel
PUBLIC	?lastLinearVolumeSetting@@3IA			; lastLinearVolumeSetting
_BSS	SEGMENT
?audioStream@@3PAUFSOUND_STREAM@@A DD 01H DUP (?)	; audioStream
?line@@3PADA DB	0400H DUP (?)				; line
?audioCallbacks@@3VAudioCallbacks@@A DB 010H DUP (?)	; audioCallbacks
?dvdWriteBase@@3PADA DD 01H DUP (?)			; dvdWriteBase
?dvdReadWriteBase@@3PADA DD 01H DUP (?)			; dvdReadWriteBase
?dvdReadBase@@3PADA DD 01H DUP (?)			; dvdReadBase
?bFMODInitialized@@3_NA DB 01H DUP (?)			; bFMODInitialized
	ALIGN	4

?audioChannel@@3HA DD 01H DUP (?)			; audioChannel
?lastLinearVolumeSetting@@3IA DD 01H DUP (?)		; lastLinearVolumeSetting
_BSS	ENDS
_DATA	SEGMENT
__bad_alloc_Message DD FLAT:$SG74753
_DATA	ENDS
CONST	SEGMENT
$SG74753 DB	'bad allocation', 00H
	ORG $+1
$SG78684 DB	'MPE%d Illegal Memory Address Operand %8.8X', 0aH, 'MPE0 '
	DB	'pcexec: %8.8X', 0aH, 'MPE1 pcexec: %8.8X', 0aH, 'MPE2 pcexec:'
	DB	' %8.8X', 0aH, 'MPE3 pcexec: %8.8X', 0aH, 00H
$SG78685 DB	'GetPointerToMemory error', 00H
	ORG $+7
$SG78692 DB	'MPE%d Illegal Memory Address Operand %8.8X', 0aH, 'MPE0 '
	DB	'pcexec: %8.8X', 0aH, 'MPE1 pcexec: %8.8X', 0aH, 'MPE2 pcexec:'
	DB	' %8.8X', 0aH, 'MPE3 pcexec: %8.8X', 0aH, 00H
$SG78693 DB	'GetPointerToMemory error', 00H
	ORG $+7
$SG78698 DB	'MPE%d Illegal Memory Address Operand %8.8X', 0aH, 'MPE0 '
	DB	'pcexec: %8.8X', 0aH, 'MPE1 pcexec: %8.8X', 0aH, 'MPE2 pcexec:'
	DB	' %8.8X', 0aH, 'MPE3 pcexec: %8.8X', 0aH, 00H
$SG78699 DB	'GetPointerToMemory error', 00H
	ORG $+3
$SG78741 DB	'nuance.cfg', 00H
	ORG $+1
$SG78812 DB	'%s', 00H
	ORG $+1
$SG78832 DB	'r', 00H
	ORG $+2
$SG78844 DB	'DVDBase]', 00H
	ORG $+3
$SG78850 DB	'AudioInterrupts]', 00H
	ORG $+3
$SG78851 DB	'Enabled', 00H
$SG78854 DB	'DynamicCompiler]', 00H
	ORG $+3
$SG78855 DB	'Enabled', 00H
$SG78858 DB	'DumpCompiledBlocks]', 00H
$SG78859 DB	'Enabled', 00H
$SG78862 DB	'CompilerDeadCodeElimination]', 00H
	ORG $+3
$SG78863 DB	'Enabled', 00H
$SG78866 DB	'CompilerConstantPropagation]', 00H
	ORG $+3
$SG78867 DB	'Enabled', 00H
$SG78870 DB	'T3KCompilerHack]', 00H
	ORG $+3
$SG78871 DB	'Enabled', 00H
$SG78874 DB	'AlwaysUpdateVideo]', 00H
	ORG $+1
$SG78875 DB	'Enabled', 00H
$SG78878 DB	'PixelShaders]', 00H
	ORG $+2
$SG78879 DB	'Enabled', 00H
$SG78882 DB	'CycleBasedTiming]', 00H
	ORG $+2
$SG78883 DB	'Enabled', 00H
$SG78886 DB	'FieldsPerSecond]', 00H
	ORG $+3
$SG78887 DB	'%lu', 00H
CONST	ENDS
PUBLIC	?TriggerInterrupt@MPE@@QAEXI@Z			; MPE::TriggerInterrupt
PUBLIC	?TriggerAudioInterrupt@NuonEnvironment@@QAEXXZ	; NuonEnvironment::TriggerAudioInterrupt
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\nuanceexperimental\nuonenvironment.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?TriggerAudioInterrupt@NuonEnvironment@@QAEXXZ PROC	; NuonEnvironment::TriggerAudioInterrupt
; _this$ = ecx

; 31   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 32   :   if(bAudioInterruptsEnabled)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+128]
	test	ecx, ecx
	je	SHORT $LN2@TriggerAud

; 33   :   {
; 34   :     mpe[0]->TriggerInterrupt(INT_AUDIO);

	push	134217728				; 08000000H
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?TriggerInterrupt@MPE@@QAEXI@Z		; MPE::TriggerInterrupt

; 35   :     mpe[1]->TriggerInterrupt(INT_AUDIO);

	push	134217728				; 08000000H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?TriggerInterrupt@MPE@@QAEXI@Z		; MPE::TriggerInterrupt

; 36   :     mpe[2]->TriggerInterrupt(INT_AUDIO);

	push	134217728				; 08000000H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?TriggerInterrupt@MPE@@QAEXI@Z		; MPE::TriggerInterrupt

; 37   :     mpe[3]->TriggerInterrupt(INT_AUDIO);

	push	134217728				; 08000000H
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	call	?TriggerInterrupt@MPE@@QAEXI@Z		; MPE::TriggerInterrupt
$LN2@TriggerAud:

; 38   :   }
; 39   : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?TriggerAudioInterrupt@NuonEnvironment@@QAEXXZ ENDP	; NuonEnvironment::TriggerAudioInterrupt
_TEXT	ENDS
EXTRN	?Syscall_InterruptTriggered@@YAXPAVMPE@@@Z:PROC	; Syscall_InterruptTriggered
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\mpe.h
;	COMDAT ?TriggerInterrupt@MPE@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_which$ = 8						; size = 4
?TriggerInterrupt@MPE@@QAEXI@Z PROC			; MPE::TriggerInterrupt, COMDAT
; _this$ = ecx

; 481  :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 482  :     intsrc |= which;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+420]
	or	ecx, DWORD PTR _which$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+420], ecx

; 483  :     Syscall_InterruptTriggered(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?Syscall_InterruptTriggered@@YAXPAVMPE@@@Z ; Syscall_InterruptTriggered
	add	esp, 4

; 484  :   }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?TriggerInterrupt@MPE@@QAEXI@Z ENDP			; MPE::TriggerInterrupt
_TEXT	ENDS
PUBLIC	?TriggerVideoInterrupt@NuonEnvironment@@QAEXXZ	; NuonEnvironment::TriggerVideoInterrupt
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\nuonenvironment.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?TriggerVideoInterrupt@NuonEnvironment@@QAEXXZ PROC	; NuonEnvironment::TriggerVideoInterrupt
; _this$ = ecx

; 42   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 43   :   mpe[0]->TriggerInterrupt(INT_VIDTIMER);

	push	-2147483648				; 80000000H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?TriggerInterrupt@MPE@@QAEXI@Z		; MPE::TriggerInterrupt

; 44   :   mpe[1]->TriggerInterrupt(INT_VIDTIMER);

	push	-2147483648				; 80000000H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?TriggerInterrupt@MPE@@QAEXI@Z		; MPE::TriggerInterrupt

; 45   :   mpe[2]->TriggerInterrupt(INT_VIDTIMER);

	push	-2147483648				; 80000000H
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?TriggerInterrupt@MPE@@QAEXI@Z		; MPE::TriggerInterrupt

; 46   :   mpe[3]->TriggerInterrupt(INT_VIDTIMER);

	push	-2147483648				; 80000000H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	call	?TriggerInterrupt@MPE@@QAEXI@Z		; MPE::TriggerInterrupt

; 47   : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?TriggerVideoInterrupt@NuonEnvironment@@QAEXXZ ENDP	; NuonEnvironment::TriggerVideoInterrupt
_TEXT	ENDS
PUBLIC	?StreamCallback@AudioCallbacks@@SGCPAUFSOUND_STREAM@@PAXHH@Z ; AudioCallbacks::StreamCallback
PUBLIC	?InitAudio@NuonEnvironment@@QAEXXZ		; NuonEnvironment::InitAudio
EXTRN	_FSOUND_Stream_Play@8:PROC
EXTRN	_FSOUND_Stream_Create@20:PROC
EXTRN	_FSOUND_Stream_Close@4:PROC
EXTRN	_FSOUND_Init@12:PROC
EXTRN	_FSOUND_SetDriver@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bEnumerateSuccess$ = -5				; size = 1
_this$ = -4						; size = 4
?InitAudio@NuonEnvironment@@QAEXXZ PROC			; NuonEnvironment::InitAudio
; _this$ = ecx

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 128  :   bool bEnumerateSuccess = false;

	mov	BYTE PTR _bEnumerateSuccess$[ebp], 0

; 129  :   
; 130  :   if(!bFMODInitialized)

	movzx	eax, BYTE PTR ?bFMODInitialized@@3_NA	; bFMODInitialized
	test	eax, eax
	jne	SHORT $LN5@InitAudio

; 131  :   {
; 132  :     //Select default sound driver
; 133  :     FSOUND_SetDriver(0);

	push	0
	call	_FSOUND_SetDriver@4

; 134  :     //FSOUND_SetMixer(FSOUND_MIXER_QUALITY_FPU);
; 135  :     //FSOUND_SetMixer(FSOUND_MIXER_QUALITY_MMXP5);
; 136  :     //FSOUND_SetMixer(FSOUND_MIXER_QUALITY_MMXP6);
; 137  :     //Initialize FMOD
; 138  :     if(FSOUND_Init(MIX_RATE, MAX_SOFTWARE_CHANNELS, INIT_FLAGS))

	push	2
	push	6
	push	44100					; 0000ac44H
	call	_FSOUND_Init@12
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@InitAudio

; 139  :     {
; 140  :       bFMODInitialized = true;

	mov	BYTE PTR ?bFMODInitialized@@3_NA, 1	; bFMODInitialized

; 141  :     }
; 142  :     else

	jmp	SHORT $LN5@InitAudio
$LN4@InitAudio:

; 143  :     {
; 144  :       return;

	jmp	SHORT $LN6@InitAudio
$LN5@InitAudio:

; 145  :     }
; 146  :   }
; 147  : 
; 148  :   if(audioStream)

	cmp	DWORD PTR ?audioStream@@3PAUFSOUND_STREAM@@A, 0 ; audioStream
	je	SHORT $LN2@InitAudio

; 149  :   {
; 150  :     FSOUND_Stream_Close(audioStream);

	mov	edx, DWORD PTR ?audioStream@@3PAUFSOUND_STREAM@@A ; audioStream
	push	edx
	call	_FSOUND_Stream_Close@4
$LN2@InitAudio:

; 151  :   }
; 152  :   //Create stream
; 153  :   audioStream = FSOUND_Stream_Create(AudioCallbacks::StreamCallback, nuonAudioBufferSize,
; 154  :     (DEFAULT_SAMPLE_FORMAT | FSOUND_LOOP_NORMAL | FSOUND_NONBLOCKING), nuonAudioPlaybackRate, USER_PARAM);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	push	16777554				; 01000152H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	push	eax
	push	OFFSET ?StreamCallback@AudioCallbacks@@SGCPAUFSOUND_STREAM@@PAXHH@Z ; AudioCallbacks::StreamCallback
	call	_FSOUND_Stream_Create@20
	mov	DWORD PTR ?audioStream@@3PAUFSOUND_STREAM@@A, eax ; audioStream

; 155  :     
; 156  :   if(audioStream)

	cmp	DWORD PTR ?audioStream@@3PAUFSOUND_STREAM@@A, 0 ; audioStream
	je	SHORT $LN6@InitAudio

; 157  :   {
; 158  :     audioChannel = FSOUND_Stream_Play(FSOUND_FREE,audioStream);

	mov	ecx, DWORD PTR ?audioStream@@3PAUFSOUND_STREAM@@A ; audioStream
	push	ecx
	push	-1
	call	_FSOUND_Stream_Play@8
	mov	DWORD PTR ?audioChannel@@3HA, eax	; audioChannel
$LN6@InitAudio:

; 159  :   }
; 160  : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InitAudio@NuonEnvironment@@QAEXXZ ENDP			; NuonEnvironment::InitAudio
_TEXT	ENDS
PUBLIC	?ConvertNuonAudioData@AudioCallbacks@@SAXPAE0I@Z ; AudioCallbacks::ConvertNuonAudioData
PUBLIC	?position@?1??StreamCallback@AudioCallbacks@@SGCPAUFSOUND_STREAM@@PAXHH@Z@4IA ; `AudioCallbacks::StreamCallback'::`2'::position
EXTRN	?nuonEnv@@3PAVNuonEnvironment@@A:DWORD		; nuonEnv
;	COMDAT ?position@?1??StreamCallback@AudioCallbacks@@SGCPAUFSOUND_STREAM@@PAXHH@Z@4IA
_BSS	SEGMENT
?position@?1??StreamCallback@AudioCallbacks@@SGCPAUFSOUND_STREAM@@PAXHH@Z@4IA DD 01H DUP (?) ; `AudioCallbacks::StreamCallback'::`2'::position
; Function compile flags: /Odtp /RTCsu
_BSS	ENDS
;	COMDAT ?StreamCallback@AudioCallbacks@@SGCPAUFSOUND_STREAM@@PAXHH@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_stream$ = 8						; size = 4
_buff$ = 12						; size = 4
_len$ = 16						; size = 4
_param$ = 20						; size = 4
?StreamCallback@AudioCallbacks@@SGCPAUFSOUND_STREAM@@PAXHH@Z PROC ; AudioCallbacks::StreamCallback, COMDAT

; 75   :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 76   :     static uint32 position = 0;
; 77   : 
; 78   :     if(!buff) 

	cmp	DWORD PTR _buff$[ebp], 0
	jne	SHORT $LN9@StreamCall

; 79   :     {
; 80   :       return FALSE;

	xor	al, al
	jmp	$LN10@StreamCall
$LN9@StreamCall:

; 81   :     }
; 82   : 
; 83   :     switch(position)

	mov	eax, DWORD PTR ?position@?1??StreamCallback@AudioCallbacks@@SGCPAUFSOUND_STREAM@@PAXHH@Z@4IA ; `AudioCallbacks::StreamCallback'::`2'::position
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 0
	je	SHORT $LN6@StreamCall
	cmp	DWORD PTR tv65[ebp], 1
	je	$LN3@StreamCall
	jmp	$LN7@StreamCall
$LN6@StreamCall:

; 84   :     {
; 85   :       case 0:
; 86   :         if(nuonEnv->pNuonAudioBuffer && (nuonEnv->nuonAudioBufferSize >= 1024))

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	cmp	DWORD PTR [ecx+72], 0
	je	SHORT $LN5@StreamCall
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	cmp	DWORD PTR [edx+68], 1024		; 00000400H
	jb	SHORT $LN5@StreamCall

; 87   :         {
; 88   :           ConvertNuonAudioData((uint8 *)&nuonEnv->pNuonAudioBuffer[nuonEnv->nuonAudioBufferSize >> 1], (uint8 *)buff, nuonEnv->nuonAudioBufferSize >> 1);

	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+68]
	shr	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _buff$[ebp]
	push	edx
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+68]
	shr	ecx, 1
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	add	ecx, DWORD PTR [edx+72]
	push	ecx
	call	?ConvertNuonAudioData@AudioCallbacks@@SAXPAE0I@Z ; AudioCallbacks::ConvertNuonAudioData
	add	esp, 12					; 0000000cH

; 89   :           if((nuonEnv->nuonAudioChannelMode & ENABLE_WRAP_INT) && !nuonEnv->bUseCycleBasedTiming)

	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 256				; 00000100H
	je	SHORT $LN5@StreamCall
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	movzx	eax, BYTE PTR [edx+89]
	test	eax, eax
	jne	SHORT $LN5@StreamCall

; 90   :           {
; 91   :             nuonEnv->TriggerAudioInterrupt();

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	call	?TriggerAudioInterrupt@NuonEnvironment@@QAEXXZ ; NuonEnvironment::TriggerAudioInterrupt
$LN5@StreamCall:

; 92   :           }
; 93   :         }
; 94   :         position = 1 - position;

	mov	ecx, 1
	sub	ecx, DWORD PTR ?position@?1??StreamCallback@AudioCallbacks@@SGCPAUFSOUND_STREAM@@PAXHH@Z@4IA ; `AudioCallbacks::StreamCallback'::`2'::position
	mov	DWORD PTR ?position@?1??StreamCallback@AudioCallbacks@@SGCPAUFSOUND_STREAM@@PAXHH@Z@4IA, ecx ; `AudioCallbacks::StreamCallback'::`2'::position

; 95   :         break;

	jmp	SHORT $LN7@StreamCall
$LN3@StreamCall:

; 96   :       case 1:
; 97   :         if(nuonEnv->pNuonAudioBuffer && (nuonEnv->nuonAudioBufferSize >= 1024))

	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	cmp	DWORD PTR [edx+72], 0
	je	SHORT $LN2@StreamCall
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	cmp	DWORD PTR [eax+68], 1024		; 00000400H
	jb	SHORT $LN2@StreamCall

; 98   :         {
; 99   :           ConvertNuonAudioData((uint8 *)nuonEnv->pNuonAudioBuffer,(uint8 *)buff,nuonEnv->nuonAudioBufferSize >> 1);

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+68]
	shr	edx, 1
	push	edx
	mov	eax, DWORD PTR _buff$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+72]
	push	edx
	call	?ConvertNuonAudioData@AudioCallbacks@@SAXPAE0I@Z ; AudioCallbacks::ConvertNuonAudioData
	add	esp, 12					; 0000000cH

; 100  :           if((nuonEnv->nuonAudioChannelMode & ENABLE_HALF_INT) && !nuonEnv->bUseCycleBasedTiming)

	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 512				; 00000200H
	je	SHORT $LN2@StreamCall
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	movzx	eax, BYTE PTR [edx+89]
	test	eax, eax
	jne	SHORT $LN2@StreamCall

; 101  :           {
; 102  :             nuonEnv->TriggerAudioInterrupt();

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	call	?TriggerAudioInterrupt@NuonEnvironment@@QAEXXZ ; NuonEnvironment::TriggerAudioInterrupt
$LN2@StreamCall:

; 103  :           }
; 104  :         }
; 105  :         position = 1 - position;

	mov	ecx, 1
	sub	ecx, DWORD PTR ?position@?1??StreamCallback@AudioCallbacks@@SGCPAUFSOUND_STREAM@@PAXHH@Z@4IA ; `AudioCallbacks::StreamCallback'::`2'::position
	mov	DWORD PTR ?position@?1??StreamCallback@AudioCallbacks@@SGCPAUFSOUND_STREAM@@PAXHH@Z@4IA, ecx ; `AudioCallbacks::StreamCallback'::`2'::position
$LN7@StreamCall:

; 106  :         break;
; 107  :     }
; 108  : 
; 109  :     return TRUE;

	mov	al, 1
$LN10@StreamCall:

; 110  :   };

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?StreamCallback@AudioCallbacks@@SGCPAUFSOUND_STREAM@@PAXHH@Z ENDP ; AudioCallbacks::StreamCallback
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ConvertNuonAudioData@AudioCallbacks@@SAXPAE0I@Z
_TEXT	SEGMENT
_byteCount$ = -4					; size = 4
_pNuonAudioBuffer$ = 8					; size = 4
_pPCAudioBuffer$ = 12					; size = 4
_numBytes$ = 16						; size = 4
?ConvertNuonAudioData@AudioCallbacks@@SAXPAE0I@Z PROC	; AudioCallbacks::ConvertNuonAudioData, COMDAT

; 59   :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 60   :     uint32 byteCount = 0;

	mov	DWORD PTR _byteCount$[ebp], 0
$LN2@ConvertNuo:

; 61   : 
; 62   :     while(byteCount < numBytes)

	mov	eax, DWORD PTR _byteCount$[ebp]
	cmp	eax, DWORD PTR _numBytes$[ebp]
	jae	SHORT $LN3@ConvertNuo

; 63   :     {
; 64   :       pPCAudioBuffer[0] = pNuonAudioBuffer[1];

	mov	ecx, DWORD PTR _pPCAudioBuffer$[ebp]
	mov	edx, DWORD PTR _pNuonAudioBuffer$[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR [ecx], al

; 65   :       pPCAudioBuffer[1] = pNuonAudioBuffer[0];

	mov	ecx, DWORD PTR _pPCAudioBuffer$[ebp]
	mov	edx, DWORD PTR _pNuonAudioBuffer$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx+1], al

; 66   :       pPCAudioBuffer[2] = pNuonAudioBuffer[3];

	mov	ecx, DWORD PTR _pPCAudioBuffer$[ebp]
	mov	edx, DWORD PTR _pNuonAudioBuffer$[ebp]
	mov	al, BYTE PTR [edx+3]
	mov	BYTE PTR [ecx+2], al

; 67   :       pPCAudioBuffer[3] = pNuonAudioBuffer[2];

	mov	ecx, DWORD PTR _pPCAudioBuffer$[ebp]
	mov	edx, DWORD PTR _pNuonAudioBuffer$[ebp]
	mov	al, BYTE PTR [edx+2]
	mov	BYTE PTR [ecx+3], al

; 68   :       byteCount += 4;

	mov	ecx, DWORD PTR _byteCount$[ebp]
	add	ecx, 4
	mov	DWORD PTR _byteCount$[ebp], ecx

; 69   :       pNuonAudioBuffer += 4;

	mov	edx, DWORD PTR _pNuonAudioBuffer$[ebp]
	add	edx, 4
	mov	DWORD PTR _pNuonAudioBuffer$[ebp], edx

; 70   :       pPCAudioBuffer += 4;

	mov	eax, DWORD PTR _pPCAudioBuffer$[ebp]
	add	eax, 4
	mov	DWORD PTR _pPCAudioBuffer$[ebp], eax

; 71   :     }

	jmp	SHORT $LN2@ConvertNuo
$LN3@ConvertNuo:

; 72   :   }

	mov	esp, ebp
	pop	ebp
	ret	0
?ConvertNuonAudioData@AudioCallbacks@@SAXPAE0I@Z ENDP	; AudioCallbacks::ConvertNuonAudioData
_TEXT	ENDS
PUBLIC	?StopAudio@NuonEnvironment@@QAEXXZ		; NuonEnvironment::StopAudio
PUBLIC	?MuteAudio@NuonEnvironment@@QAEXI@Z		; NuonEnvironment::MuteAudio
PUBLIC	?CloseAudio@NuonEnvironment@@QAEXXZ		; NuonEnvironment::CloseAudio
EXTRN	_FSOUND_Close@0:PROC
EXTRN	_FSOUND_Stream_Stop@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CloseAudio@NuonEnvironment@@QAEXXZ PROC		; NuonEnvironment::CloseAudio
; _this$ = ecx

; 163  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 164  :   if(bFMODInitialized)

	movzx	eax, BYTE PTR ?bFMODInitialized@@3_NA	; bFMODInitialized
	test	eax, eax
	je	SHORT $LN3@CloseAudio

; 165  :   {
; 166  :     MuteAudio(0xFFFFFFFFUL);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MuteAudio@NuonEnvironment@@QAEXI@Z	; NuonEnvironment::MuteAudio

; 167  :     StopAudio();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?StopAudio@NuonEnvironment@@QAEXXZ	; NuonEnvironment::StopAudio

; 168  :     if(audioStream)

	cmp	DWORD PTR ?audioStream@@3PAUFSOUND_STREAM@@A, 0 ; audioStream
	je	SHORT $LN1@CloseAudio

; 169  :     {
; 170  :       FSOUND_Stream_Stop(audioStream);

	mov	ecx, DWORD PTR ?audioStream@@3PAUFSOUND_STREAM@@A ; audioStream
	push	ecx
	call	_FSOUND_Stream_Stop@4

; 171  :       FSOUND_Stream_Close(audioStream);

	mov	edx, DWORD PTR ?audioStream@@3PAUFSOUND_STREAM@@A ; audioStream
	push	edx
	call	_FSOUND_Stream_Close@4

; 172  :       audioStream = 0;

	mov	DWORD PTR ?audioStream@@3PAUFSOUND_STREAM@@A, 0 ; audioStream
$LN1@CloseAudio:

; 173  :     }
; 174  :     FSOUND_Close();

	call	_FSOUND_Close@0

; 175  :     bFMODInitialized = false;

	mov	BYTE PTR ?bFMODInitialized@@3_NA, 0	; bFMODInitialized
$LN3@CloseAudio:

; 176  :   }
; 177  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CloseAudio@NuonEnvironment@@QAEXXZ ENDP		; NuonEnvironment::CloseAudio
_TEXT	ENDS
EXTRN	_FSOUND_SetMute@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_param$ = 8						; size = 4
?MuteAudio@NuonEnvironment@@QAEXI@Z PROC		; NuonEnvironment::MuteAudio
; _this$ = ecx

; 180  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 181  :   if(bFMODInitialized)

	movzx	eax, BYTE PTR ?bFMODInitialized@@3_NA	; bFMODInitialized
	test	eax, eax
	je	SHORT $LN4@MuteAudio

; 182  :   {
; 183  :     if(param)

	cmp	DWORD PTR _param$[ebp], 0
	je	SHORT $LN2@MuteAudio

; 184  :     {
; 185  :       FSOUND_SetMute(FSOUND_ALL,TRUE);

	push	1
	push	-3					; fffffffdH
	call	_FSOUND_SetMute@8

; 186  :     }
; 187  :     else

	jmp	SHORT $LN4@MuteAudio
$LN2@MuteAudio:

; 188  :     {
; 189  :       FSOUND_SetMute(FSOUND_ALL,FALSE);

	push	0
	push	-3					; fffffffdH
	call	_FSOUND_SetMute@8
$LN4@MuteAudio:

; 190  :     }
; 191  :   }
; 192  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?MuteAudio@NuonEnvironment@@QAEXI@Z ENDP		; NuonEnvironment::MuteAudio
_TEXT	ENDS
PUBLIC	?SetAudioPlaybackRate@NuonEnvironment@@QAEXI@Z	; NuonEnvironment::SetAudioPlaybackRate
EXTRN	_FSOUND_SetFrequency@8:PROC
EXTRN	_FSOUND_IsPlaying@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rate$ = 8						; size = 4
?SetAudioPlaybackRate@NuonEnvironment@@QAEXI@Z PROC	; NuonEnvironment::SetAudioPlaybackRate
; _this$ = ecx

; 195  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 196  :   if(rate > 96000)

	cmp	DWORD PTR _rate$[ebp], 96000		; 00017700H
	jbe	SHORT $LN5@SetAudioPl

; 197  :   {
; 198  :     rate = 96000;

	mov	DWORD PTR _rate$[ebp], 96000		; 00017700H
	jmp	SHORT $LN4@SetAudioPl
$LN5@SetAudioPl:

; 199  :   }
; 200  :   else if(rate < 16000)

	cmp	DWORD PTR _rate$[ebp], 16000		; 00003e80H
	jae	SHORT $LN4@SetAudioPl

; 201  :   {
; 202  :     rate = 16000;

	mov	DWORD PTR _rate$[ebp], 16000		; 00003e80H
$LN4@SetAudioPl:

; 203  :   }
; 204  : 
; 205  :   if(bFMODInitialized && audioStream)

	movzx	eax, BYTE PTR ?bFMODInitialized@@3_NA	; bFMODInitialized
	test	eax, eax
	je	SHORT $LN6@SetAudioPl
	cmp	DWORD PTR ?audioStream@@3PAUFSOUND_STREAM@@A, 0 ; audioStream
	je	SHORT $LN6@SetAudioPl

; 206  :   {
; 207  :     if(FSOUND_IsPlaying(audioChannel))

	mov	ecx, DWORD PTR ?audioChannel@@3HA	; audioChannel
	push	ecx
	call	_FSOUND_IsPlaying@4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@SetAudioPl

; 208  :     {
; 209  :       FSOUND_SetFrequency(audioChannel,rate);

	mov	eax, DWORD PTR _rate$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?audioChannel@@3HA	; audioChannel
	push	ecx
	call	_FSOUND_SetFrequency@8
$LN6@SetAudioPl:

; 210  :     }
; 211  :   }
; 212  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetAudioPlaybackRate@NuonEnvironment@@QAEXI@Z ENDP	; NuonEnvironment::SetAudioPlaybackRate
_TEXT	ENDS
PUBLIC	?RestartAudio@NuonEnvironment@@QAEXXZ		; NuonEnvironment::RestartAudio
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RestartAudio@NuonEnvironment@@QAEXXZ PROC		; NuonEnvironment::RestartAudio
; _this$ = ecx

; 215  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 216  :   //Stop audio and restart it
; 217  :   CloseAudio();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CloseAudio@NuonEnvironment@@QAEXXZ	; NuonEnvironment::CloseAudio

; 218  :   InitAudio();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?InitAudio@NuonEnvironment@@QAEXXZ	; NuonEnvironment::InitAudio

; 219  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RestartAudio@NuonEnvironment@@QAEXXZ ENDP		; NuonEnvironment::RestartAudio
; Function compile flags: /Odtp /RTCsu
_this$ = -4						; size = 4
?StopAudio@NuonEnvironment@@QAEXXZ PROC			; NuonEnvironment::StopAudio
; _this$ = ecx

; 222  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 223  :   if(bFMODInitialized && audioStream)

	movzx	eax, BYTE PTR ?bFMODInitialized@@3_NA	; bFMODInitialized
	test	eax, eax
	je	SHORT $LN2@StopAudio
	cmp	DWORD PTR ?audioStream@@3PAUFSOUND_STREAM@@A, 0 ; audioStream
	je	SHORT $LN2@StopAudio

; 224  :   {
; 225  :     FSOUND_Stream_Stop(audioStream);

	mov	ecx, DWORD PTR ?audioStream@@3PAUFSOUND_STREAM@@A ; audioStream
	push	ecx
	call	_FSOUND_Stream_Stop@4
$LN2@StopAudio:

; 226  :   }
; 227  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?StopAudio@NuonEnvironment@@QAEXXZ ENDP			; NuonEnvironment::StopAudio
_TEXT	ENDS
PUBLIC	?SetAudioVolume@NuonEnvironment@@QAEXI@Z	; NuonEnvironment::SetAudioVolume
EXTRN	_FSOUND_SetVolume@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_volume$ = 8						; size = 4
?SetAudioVolume@NuonEnvironment@@QAEXI@Z PROC		; NuonEnvironment::SetAudioVolume
; _this$ = ecx

; 232  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 233  :   if(bFMODInitialized)

	movzx	eax, BYTE PTR ?bFMODInitialized@@3_NA	; bFMODInitialized
	test	eax, eax
	je	SHORT $LN3@SetAudioVo

; 234  :   {
; 235  :     if(volume > 255)

	cmp	DWORD PTR _volume$[ebp], 255		; 000000ffH
	jbe	SHORT $LN1@SetAudioVo

; 236  :     {
; 237  :       volume = 255;

	mov	DWORD PTR _volume$[ebp], 255		; 000000ffH
$LN1@SetAudioVo:

; 238  :     }
; 239  : 
; 240  :     FSOUND_SetVolume(FSOUND_ALL,volume);

	mov	ecx, DWORD PTR _volume$[ebp]
	push	ecx
	push	-3					; fffffffdH
	call	_FSOUND_SetVolume@8

; 241  :     lastLinearVolumeSetting = volume;

	mov	edx, DWORD PTR _volume$[ebp]
	mov	DWORD PTR ?lastLinearVolumeSetting@@3IA, edx ; lastLinearVolumeSetting
$LN3@SetAudioVo:

; 242  :   }
; 243  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetAudioVolume@NuonEnvironment@@QAEXI@Z ENDP		; NuonEnvironment::SetAudioVolume
_TEXT	ENDS
PUBLIC	?GetBasePointer@FlashEEPROM@@QAEPAEXZ		; FlashEEPROM::GetBasePointer
PUBLIC	?GetPointerToMemory@NuonEnvironment@@QAEPAXPAVMPE@@I_N@Z ; NuonEnvironment::GetPointerToMemory
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	_sprintf:PROC
;	COMDAT ?textBuf@?1??GetPointerToMemory@NuonEnvironment@@QAEPAXPAVMPE@@I_N@Z@4PADA
_BSS	SEGMENT
?textBuf@?1??GetPointerToMemory@NuonEnvironment@@QAEPAXPAVMPE@@I_N@Z@4PADA DB 0400H DUP (?) ; `NuonEnvironment::GetPointerToMemory'::`2'::textBuf
; Function compile flags: /Odtp /RTCsu
_BSS	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_the_mpe$ = 8						; size = 4
_address$ = 12						; size = 4
_bCheckAddress$ = 16					; size = 1
?GetPointerToMemory@NuonEnvironment@@QAEPAXPAVMPE@@I_N@Z PROC ; NuonEnvironment::GetPointerToMemory
; _this$ = ecx

; 246  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 247  :   static char textBuf[1024];
; 248  : 
; 249  :   if(address < MAIN_BUS_BASE)

	cmp	DWORD PTR _address$[ebp], 1073741824	; 40000000H
	jae	$LN13@GetPointer

; 250  :   {
; 251  :     if(bCheckAddress)

	movzx	eax, BYTE PTR _bCheckAddress$[ebp]
	test	eax, eax
	je	$LN12@GetPointer

; 252  :     {
; 253  :       if((address < MPE_ADDR_SPACE_BASE) || (address >= MPE1_ADDR_BASE))

	cmp	DWORD PTR _address$[ebp], 536870912	; 20000000H
	jb	SHORT $LN10@GetPointer
	cmp	DWORD PTR _address$[ebp], 545259520	; 20800000H
	jb	SHORT $LN12@GetPointer
$LN10@GetPointer:

; 254  :       {
; 255  :         sprintf(textBuf,"MPE%d Illegal Memory Address Operand %8.8X\nMPE0 pcexec: %8.8X\nMPE1 pcexec: %8.8X\nMPE2 pcexec: %8.8X\nMPE3 pcexec: %8.8X\n",
; 256  :           the_mpe->mpeIndex,
; 257  :           address,
; 258  :           mpe[0]->pcexec,
; 259  :           mpe[1]->pcexec,
; 260  :           mpe[2]->pcexec,
; 261  :           mpe[3]->pcexec);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+408]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+408]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+408]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+408]
	push	eax
	mov	ecx, DWORD PTR _address$[ebp]
	push	ecx
	mov	edx, DWORD PTR _the_mpe$[ebp]
	mov	eax, DWORD PTR [edx+664]
	push	eax
	push	OFFSET $SG78684
	push	OFFSET ?textBuf@?1??GetPointerToMemory@NuonEnvironment@@QAEPAXPAVMPE@@I_N@Z@4PADA
	call	_sprintf
	add	esp, 32					; 00000020H

; 262  : 
; 263  :         MessageBox( NULL, textBuf, "GetPointerToMemory error", MB_OK);

	mov	esi, esp
	push	0
	push	OFFSET $SG78685
	push	OFFSET ?textBuf@?1??GetPointerToMemory@NuonEnvironment@@QAEPAXPAVMPE@@I_N@Z@4PADA
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@GetPointer:

; 264  :       }
; 265  :     }
; 266  : 
; 267  :     return (void *)(((uint8 *)the_mpe->dtrom) + (address & MPE_VALID_MEMORY_MASK));

	mov	eax, DWORD PTR _address$[ebp]
	and	eax, 8388607				; 007fffffH
	mov	ecx, DWORD PTR _the_mpe$[ebp]
	add	eax, DWORD PTR [ecx+560]
	jmp	$LN14@GetPointer
	jmp	$LN14@GetPointer
$LN13@GetPointer:

; 268  :   }
; 269  :   else if(address < SYSTEM_BUS_BASE)

	cmp	DWORD PTR _address$[ebp], -2147483648	; 80000000H
	jae	$LN8@GetPointer

; 270  :   {
; 271  :     if(bCheckAddress)

	movzx	edx, BYTE PTR _bCheckAddress$[ebp]
	test	edx, edx
	je	SHORT $LN7@GetPointer

; 272  :     {
; 273  :       if((address > (MAIN_BUS_BASE + MAIN_BUS_VALID_MEMORY_MASK)))

	cmp	DWORD PTR _address$[ebp], 1082130431	; 407fffffH
	jbe	SHORT $LN7@GetPointer

; 274  :       {
; 275  :         sprintf(textBuf,"MPE%d Illegal Memory Address Operand %8.8X\nMPE0 pcexec: %8.8X\nMPE1 pcexec: %8.8X\nMPE2 pcexec: %8.8X\nMPE3 pcexec: %8.8X\n",
; 276  :           the_mpe->mpeIndex,
; 277  :           address,
; 278  :           mpe[0]->pcexec,
; 279  :           mpe[1]->pcexec,
; 280  :           mpe[2]->pcexec,
; 281  :           mpe[3]->pcexec);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+408]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+408]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+408]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+408]
	push	edx
	mov	eax, DWORD PTR _address$[ebp]
	push	eax
	mov	ecx, DWORD PTR _the_mpe$[ebp]
	mov	edx, DWORD PTR [ecx+664]
	push	edx
	push	OFFSET $SG78692
	push	OFFSET ?textBuf@?1??GetPointerToMemory@NuonEnvironment@@QAEPAXPAVMPE@@I_N@Z@4PADA
	call	_sprintf
	add	esp, 32					; 00000020H

; 282  : 
; 283  :         MessageBox( NULL, textBuf, "GetPointerToMemory error", MB_OK);

	mov	esi, esp
	push	0
	push	OFFSET $SG78693
	push	OFFSET ?textBuf@?1??GetPointerToMemory@NuonEnvironment@@QAEPAXPAVMPE@@I_N@Z@4PADA
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@GetPointer:

; 284  :       }
; 285  :     }
; 286  : 
; 287  :     return &mainBusDRAM[address & MAIN_BUS_VALID_MEMORY_MASK];

	mov	eax, DWORD PTR _address$[ebp]
	and	eax, 8388607				; 007fffffH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+24]
	jmp	$LN14@GetPointer
	jmp	$LN14@GetPointer
$LN8@GetPointer:

; 288  :   }
; 289  :   else if(address < ROM_BIOS_BASE)

	cmp	DWORD PTR _address$[ebp], -268435456	; f0000000H
	jae	$LN4@GetPointer

; 290  :   {
; 291  :     if(bCheckAddress)

	movzx	edx, BYTE PTR _bCheckAddress$[ebp]
	test	edx, edx
	je	SHORT $LN3@GetPointer

; 292  :     {
; 293  :       if((address > (SYSTEM_BUS_BASE + SYSTEM_BUS_VALID_MEMORY_MASK)))

	cmp	DWORD PTR _address$[ebp], -2139095041	; 807fffffH
	jbe	SHORT $LN3@GetPointer

; 294  :       {
; 295  :         sprintf(textBuf,"MPE%d Illegal Memory Address Operand %8.8X\nMPE0 pcexec: %8.8X\nMPE1 pcexec: %8.8X\nMPE2 pcexec: %8.8X\nMPE3 pcexec: %8.8X\n",
; 296  :           the_mpe->mpeIndex,
; 297  :           address,
; 298  :           mpe[0]->pcexec,
; 299  :           mpe[1]->pcexec,
; 300  :           mpe[2]->pcexec,
; 301  :           mpe[3]->pcexec);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+408]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+408]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+408]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+408]
	push	edx
	mov	eax, DWORD PTR _address$[ebp]
	push	eax
	mov	ecx, DWORD PTR _the_mpe$[ebp]
	mov	edx, DWORD PTR [ecx+664]
	push	edx
	push	OFFSET $SG78698
	push	OFFSET ?textBuf@?1??GetPointerToMemory@NuonEnvironment@@QAEPAXPAVMPE@@I_N@Z@4PADA
	call	_sprintf
	add	esp, 32					; 00000020H

; 302  : 
; 303  :         MessageBox( NULL, textBuf, "GetPointerToMemory error", MB_OK);

	mov	esi, esp
	push	0
	push	OFFSET $SG78699
	push	OFFSET ?textBuf@?1??GetPointerToMemory@NuonEnvironment@@QAEPAXPAVMPE@@I_N@Z@4PADA
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@GetPointer:

; 304  :       }
; 305  :     }
; 306  :     return &systemBusDRAM[address & SYSTEM_BUS_VALID_MEMORY_MASK];

	mov	eax, DWORD PTR _address$[ebp]
	and	eax, 8388607				; 007fffffH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+28]
	jmp	SHORT $LN14@GetPointer

; 307  :   }
; 308  :   else

	jmp	SHORT $LN14@GetPointer
$LN4@GetPointer:

; 309  :   {
; 310  :     return flashEEPROM->GetBasePointer() + ((address - ROM_BIOS_BASE) & (DEFAULT_EEPROM_SIZE - 1));

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+32]
	call	?GetBasePointer@FlashEEPROM@@QAEPAEXZ	; FlashEEPROM::GetBasePointer
	mov	ecx, DWORD PTR _address$[ebp]
	add	ecx, 268435456				; 10000000H
	and	ecx, 2097151				; 001fffffH
	add	eax, ecx
$LN14@GetPointer:

; 311  :   }
; 312  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetPointerToMemory@NuonEnvironment@@QAEPAXPAVMPE@@I_N@Z ENDP ; NuonEnvironment::GetPointerToMemory
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\flasheeprom.h
_TEXT	ENDS
;	COMDAT ?GetBasePointer@FlashEEPROM@@QAEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetBasePointer@FlashEEPROM@@QAEPAEXZ PROC		; FlashEEPROM::GetBasePointer, COMDAT
; _this$ = ecx

; 55   :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 56   :     return eeprom;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 57   :   }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetBasePointer@FlashEEPROM@@QAEPAEXZ ENDP		; FlashEEPROM::GetBasePointer
_TEXT	ENDS
PUBLIC	?WriteFile@NuonEnvironment@@QAEXPAVMPE@@III@Z	; NuonEnvironment::WriteFile
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\nuonenvironment.cpp
_TEXT	SEGMENT
tv71 = -20						; size = 4
_tempChar$ = -13					; size = 1
_pBuf$ = -8						; size = 4
_this$ = -4						; size = 4
_pMPE$ = 8						; size = 4
_fd$ = 12						; size = 4
_buf$ = 16						; size = 4
_len$ = 20						; size = 4
?WriteFile@NuonEnvironment@@QAEXPAVMPE@@III@Z PROC	; NuonEnvironment::WriteFile
; _this$ = ecx

; 315  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 316  :   char *pBuf = (char *)GetPointerToMemory(pMPE, buf, false);

	push	0
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMPE$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPointerToMemory@NuonEnvironment@@QAEPAXPAVMPE@@I_N@Z ; NuonEnvironment::GetPointerToMemory
	mov	DWORD PTR _pBuf$[ebp], eax

; 317  :   int windowTextLength;
; 318  :   char tempChar = pBuf[len];

	mov	edx, DWORD PTR _pBuf$[ebp]
	add	edx, DWORD PTR _len$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR _tempChar$[ebp], al

; 319  :   pBuf[len] = '\0';

	mov	ecx, DWORD PTR _pBuf$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	BYTE PTR [ecx], 0

; 320  : 
; 321  :   switch(fd)

	mov	edx, DWORD PTR _fd$[ebp]
	mov	DWORD PTR tv71[ebp], edx

; 322  :   {
; 323  :     case NUON_FD_STDOUT:
; 324  :       //if(!pStdOutEdit)
; 325  :       //{
; 326  :       //    return;
; 327  :       //}
; 328  :       //windowTextLength = pStdOutEdit->length();
; 329  :       //if((windowTextLength != 0) && ((windowTextLength + len) < 65536))
; 330  :       //{
; 331  :       //    pStdOutEdit->append(QString(pBuf));
; 332  :       //}
; 333  :       //else
; 334  :       //{
; 335  :         //pStdOutEdit->setText(QString(pBuf));
; 336  :       //}
; 337  :       break;
; 338  :     case NUON_FD_STDERR:
; 339  :       //if(!pStdErrEdit)
; 340  :       //{
; 341  :       //    return;
; 342  :       //}
; 343  :       //windowTextLength = pStdErrEdit->length();
; 344  :       //if((windowTextLength != 0) && ((windowTextLength + len) < 65536))
; 345  :       //{
; 346  :         //pStdErrEdit->append(QString(pBuf));
; 347  :       //}
; 348  :       //else
; 349  :       //{
; 350  :         //pStdErrEdit->setText(QString(pBuf));
; 351  :       //}
; 352  :       break;
; 353  :     default:
; 354  :       break;
; 355  :   }
; 356  : 
; 357  :   pBuf[len] = tempChar;

	mov	eax, DWORD PTR _pBuf$[ebp]
	add	eax, DWORD PTR _len$[ebp]
	mov	cl, BYTE PTR _tempChar$[ebp]
	mov	BYTE PTR [eax], cl

; 358  : }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?WriteFile@NuonEnvironment@@QAEXPAVMPE@@III@Z ENDP	; NuonEnvironment::WriteFile
_TEXT	ENDS
PUBLIC	?LoadConfigFile@NuonEnvironment@@AAE_NPAD@Z	; NuonEnvironment::LoadConfigFile
PUBLIC	??0FlashEEPROM@@QAE@XZ				; FlashEEPROM::FlashEEPROM
PUBLIC	??0VideoOptions@@QAE@XZ				; VideoOptions::VideoOptions
PUBLIC	??0CompilerOptions@@QAE@XZ			; CompilerOptions::CompilerOptions
PUBLIC	??0NuonEnvironment@@QAE@XZ			; NuonEnvironment::NuonEnvironment
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??1NuonMemoryManager@@QAE@XZ:PROC		; NuonMemoryManager::~NuonMemoryManager
EXTRN	?pArgs@@3PAPADA:DWORD				; pArgs
EXTRN	?InitializeTimingMethod@@YAXXZ:PROC		; InitializeTimingMethod
EXTRN	?InitializeColorSpaceTables@@YAXXZ:PROC		; InitializeColorSpaceTables
EXTRN	?structMainDisplay@@3UVidDisplay@@A:BYTE	; structMainDisplay
EXTRN	?InitializeBankTable@MPE@@QAEXPAE00@Z:PROC	; MPE::InitializeBankTable
EXTRN	??0MPE@@QAE@I@Z:PROC				; MPE::MPE
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??0NuonMemoryManager@@QAE@XZ:PROC		; NuonMemoryManager::NuonMemoryManager
EXTRN	___CxxFrameHandler3:PROC
xdata$x	SEGMENT
__unwindtable$??0NuonEnvironment@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0NuonEnvironment@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0NuonEnvironment@@QAE@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$??0NuonEnvironment@@QAE@XZ$2
__ehfuncinfo$??0NuonEnvironment@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0NuonEnvironment@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv139 = -56						; size = 4
tv89 = -52						; size = 4
$T81018 = -48						; size = 4
$T81017 = -44						; size = 4
$T81016 = -40						; size = 4
$T81013 = -36						; size = 4
$T81012 = -32						; size = 4
$T81011 = -28						; size = 4
$T81010 = -24						; size = 4
_i$78732 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0NuonEnvironment@@QAE@XZ PROC				; NuonEnvironment::NuonEnvironment
; _this$ = ecx

; 361  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0NuonEnvironment@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 44					; 0000002cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0NuonMemoryManager@@QAE@XZ		; NuonMemoryManager::NuonMemoryManager
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??0CompilerOptions@@QAE@XZ		; CompilerOptions::CompilerOptions
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 121				; 00000079H
	call	??0VideoOptions@@QAE@XZ			; VideoOptions::VideoOptions

; 362  :   mainBusDRAM = new uint8[MAIN_BUS_SIZE];

	push	8388608					; 00800000H
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T81010[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T81010[ebp]
	mov	DWORD PTR [eax+24], ecx

; 363  :   systemBusDRAM = new uint8[SYSTEM_BUS_SIZE];

	push	8388608					; 00800000H
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T81011[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T81011[ebp]
	mov	DWORD PTR [edx+28], eax

; 364  :   flashEEPROM = new FlashEEPROM;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T81013[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T81013[ebp], 0
	je	SHORT $LN8@NuonEnviro
	mov	ecx, DWORD PTR $T81013[ebp]
	call	??0FlashEEPROM@@QAE@XZ			; FlashEEPROM::FlashEEPROM
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN9@NuonEnviro
$LN8@NuonEnviro:
	mov	DWORD PTR tv89[ebp], 0
$LN9@NuonEnviro:
	mov	ecx, DWORD PTR tv89[ebp]
	mov	DWORD PTR $T81012[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T81012[ebp]
	mov	DWORD PTR [edx+32], eax

; 365  : 
; 366  :   dvdBase = new char[1];

	push	1
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T81016[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T81016[ebp]
	mov	DWORD PTR [ecx+124], edx

; 367  :   dvdBase[0] = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	BYTE PTR [ecx], 0

; 368  :   bAudioInterruptsEnabled = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+128], 1

; 369  : 
; 370  :   for(uint32 i = 0; i < 4; i++)

	mov	DWORD PTR _i$78732[ebp], 0
	jmp	SHORT $LN5@NuonEnviro
$LN4@NuonEnviro:
	mov	eax, DWORD PTR _i$78732[ebp]
	add	eax, 1
	mov	DWORD PTR _i$78732[ebp], eax
$LN5@NuonEnviro:
	cmp	DWORD PTR _i$78732[ebp], 4
	jae	SHORT $LN3@NuonEnviro

; 371  :   {
; 372  :     mpe[i] = new MPE(i);

	push	1360					; 00000550H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T81018[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T81018[ebp], 0
	je	SHORT $LN10@NuonEnviro
	mov	ecx, DWORD PTR _i$78732[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T81018[ebp]
	call	??0MPE@@QAE@I@Z				; MPE::MPE
	mov	DWORD PTR tv139[ebp], eax
	jmp	SHORT $LN11@NuonEnviro
$LN10@NuonEnviro:
	mov	DWORD PTR tv139[ebp], 0
$LN11@NuonEnviro:
	mov	edx, DWORD PTR tv139[ebp]
	mov	DWORD PTR $T81017[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _i$78732[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T81017[ebp]
	mov	DWORD PTR [ecx+eax*4], edx

; 373  :     mpe[i]->InitializeBankTable(mainBusDRAM,systemBusDRAM,flashEEPROM->GetBasePointer());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	call	?GetBasePointer@FlashEEPROM@@QAEPAEXZ	; FlashEEPROM::GetBasePointer
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _i$78732[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	call	?InitializeBankTable@MPE@@QAEXPAE00@Z	; MPE::InitializeBankTable

; 374  :   }

	jmp	$LN4@NuonEnviro
$LN3@NuonEnviro:

; 375  : 
; 376  :   mpe[0]->mpeIndex = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+664], 0

; 377  :   mpe[0]->mpeStartAddress = 0x20000000;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+656], 536870912		; 20000000H

; 378  :   mpe[0]->mpeEndAddress = 0x207FFFFF;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+660], 545259519		; 207fffffH

; 379  :   mpe[1]->mpeIndex = 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+664], 1

; 380  :   mpe[1]->mpeStartAddress = 0x20800000;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+656], 545259520		; 20800000H

; 381  :   mpe[1]->mpeEndAddress = 0x20FFFFFF;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+660], 553648127		; 20ffffffH

; 382  :   mpe[2]->mpeIndex = 2;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+664], 2

; 383  :   mpe[2]->mpeStartAddress = 0x21000000;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+656], 553648128		; 21000000H

; 384  :   mpe[2]->mpeEndAddress = 0x217FFFFF;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+660], 562036735		; 217fffffH

; 385  :   mpe[3]->mpeIndex = 3;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [edx+664], 3

; 386  :   mpe[3]->mpeStartAddress = 0x21800000;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+656], 562036736		; 21800000H

; 387  :   mpe[3]->mpeEndAddress = 0x21FFFFFF;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+660], 570425343		; 21ffffffH

; 388  : 
; 389  :   bProcessorStartStopChange = false;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+85], 0

; 390  :   pendingCommRequests = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], 0

; 391  : 
; 392  :   structMainDisplay.dispwidth = 720;

	mov	DWORD PTR ?structMainDisplay@@3UVidDisplay@@A, 720 ; 000002d0H

; 393  :   structMainDisplay.dispheight = 480;

	mov	DWORD PTR ?structMainDisplay@@3UVidDisplay@@A+4, 480 ; 000001e0H

; 394  :   bInterlaced = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+84], 0

; 395  :   vblank_frequency = 60;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], 60			; 0000003cH

; 396  :   fps = 40;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+96], 40			; 00000028H

; 397  :   InitializeColorSpaceTables();

	call	?InitializeColorSpaceTables@@YAXXZ	; InitializeColorSpaceTables

; 398  :   mainChannelLowerLimit = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0

; 399  :   overlayChannelLowerLimit = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], 0

; 400  :   mainChannelUpperLimit = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+48], 0

; 401  :   overlayChannelUpperLimit = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0

; 402  :   bMainBufferModified = true;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+86], 1

; 403  :   bOverlayBufferModified = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+87], 1

; 404  :   bRenderVideo = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+90], 0

; 405  : 
; 406  :   //TIMER RELATED INITIALIZATION: chooses the timing method used in TimeElapsed
; 407  :   //and initializes the boot timestamp
; 408  : 
; 409  :   InitializeTimingMethod();

	call	?InitializeTimingMethod@@YAXXZ		; InitializeTimingMethod

; 410  : 
; 411  :   pNuonAudioBuffer = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+72], 0

; 412  :   nuonAudioChannelMode = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], 0

; 413  :   nuonAudioPlaybackRate = 32000;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 32000		; 00007d00H

; 414  :   nuonAudioBufferSize = 1024;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+68], 1024		; 00000400H

; 415  :   nuonSupportedPlaybackRates =
; 416  :     RATE_16_KHZ |
; 417  :     RATE_32_KHZ |
; 418  :     RATE_64_KHZ |
; 419  :     RATE_22_05_KHZ |
; 420  :     RATE_44_1_KHZ |
; 421  :     RATE_88_2_KHZ |
; 422  :     RATE_24_KHZ |
; 423  :     RATE_48_KHZ |
; 424  :     RATE_96_KHZ;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+76], 1911		; 00000777H

; 425  : 
; 426  :   bSoundDeviceChosen = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+88], 0

; 427  :   bUseCycleBasedTiming = false;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+89], 0

; 428  :   cyclesPerAudioInterrupt = 1728000;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+92], 1728000		; 001a5e00H

; 429  :   cyclesPerVideoDisplay = 120000;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+100], 120000		; 0001d4c0H

; 430  :   audioInterruptCycleCount = cyclesPerAudioInterrupt;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+92]
	mov	DWORD PTR [ecx+104], eax

; 431  :   videoDisplayCycleCount = cyclesPerVideoDisplay;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], edx

; 432  :   whichAudioInterrupt = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+112], 0

; 433  : 
; 434  :   if(!pArgs)

	cmp	DWORD PTR ?pArgs@@3PAPADA, 0		; pArgs
	jne	SHORT $LN2@NuonEnviro

; 435  :   {
; 436  :     LoadConfigFile("nuance.cfg");

	push	OFFSET $SG78741
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadConfigFile@NuonEnvironment@@AAE_NPAD@Z ; NuonEnvironment::LoadConfigFile

; 437  :   }
; 438  :   else

	jmp	SHORT $LN6@NuonEnviro
$LN2@NuonEnviro:

; 439  :   {
; 440  :     LoadConfigFile(pArgs[1]);

	mov	edx, DWORD PTR ?pArgs@@3PAPADA		; pArgs
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadConfigFile@NuonEnvironment@@AAE_NPAD@Z ; NuonEnvironment::LoadConfigFile
$LN6@NuonEnviro:

; 441  :   }
; 442  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0NuonEnvironment@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1NuonMemoryManager@@QAE@XZ		; NuonMemoryManager::~NuonMemoryManager
__unwindfunclet$??0NuonEnvironment@@QAE@XZ$1:
	mov	eax, DWORD PTR $T81013[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0NuonEnvironment@@QAE@XZ$2:
	mov	eax, DWORD PTR $T81018[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0NuonEnvironment@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??0NuonEnvironment@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0NuonEnvironment@@QAE@XZ ENDP				; NuonEnvironment::NuonEnvironment
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\video.h
;	COMDAT ??0VideoOptions@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VideoOptions@@QAE@XZ PROC				; VideoOptions::VideoOptions, COMDAT
; _this$ = ecx

; 15   :   VideoOptions()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 16   :   {
; 17   :     bUseShaders = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0

; 18   :     bAlwaysUpdateVideo = false;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+1], 0

; 19   :   }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VideoOptions@@QAE@XZ ENDP				; VideoOptions::VideoOptions
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\superblock.h
_TEXT	ENDS
;	COMDAT ??0CompilerOptions@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CompilerOptions@@QAE@XZ PROC				; CompilerOptions::CompilerOptions, COMDAT
; _this$ = ecx

; 18   :   CompilerOptions()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 19   :   {
; 20   :     bT3KCompilerHack = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 1

; 21   :     bConstantPropagation = true;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+1], 1

; 22   :     bDeadCodeElimination = false;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+2], 0

; 23   :     bAllowCompile = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+3], 1

; 24   :     bDumpBlocks = false;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], 0

; 25   :   }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CompilerOptions@@QAE@XZ ENDP				; CompilerOptions::CompilerOptions
_TEXT	ENDS
PUBLIC	??_C@_0BA@LJCMGLJN@FlashEEPROM?4bin?$AA@	; `string'
PUBLIC	?Reset@FlashEEPROM@@QAEXXZ			; FlashEEPROM::Reset
EXTRN	?LoadFromFile@FlashEEPROM@@QAEXPAD@Z:PROC	; FlashEEPROM::LoadFromFile
;	COMDAT ??_C@_0BA@LJCMGLJN@FlashEEPROM?4bin?$AA@
; File c:\nuanceexperimental\flasheeprom.h
CONST	SEGMENT
??_C@_0BA@LJCMGLJN@FlashEEPROM?4bin?$AA@ DB 'FlashEEPROM.bin', 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0FlashEEPROM@@QAE@XZ
_TEXT	SEGMENT
$T81036 = -8						; size = 4
_this$ = -4						; size = 4
??0FlashEEPROM@@QAE@XZ PROC				; FlashEEPROM::FlashEEPROM, COMDAT
; _this$ = ecx

; 36   :   FlashEEPROM()

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 37   :   {
; 38   :     eepromSize = DEFAULT_EEPROM_SIZE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 2097152		; 00200000H

; 39   :     eeprom = new uint8[eepromSize];

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T81036[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T81036[ebp]
	mov	DWORD PTR [eax+4], ecx

; 40   :     //Device ID: AT49BV162A/163A
; 41   :     eepromDeviceID = 0xC0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], 192			; 000000c0H

; 42   :     //Manufacturer Code : Atmel
; 43   :     eepromManufacturerCode = 0x1F;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 31			; 0000001fH

; 44   :     Reset();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@FlashEEPROM@@QAEXXZ		; FlashEEPROM::Reset

; 45   :     LoadFromFile("FlashEEPROM.bin");

	push	OFFSET ??_C@_0BA@LJCMGLJN@FlashEEPROM?4bin?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadFromFile@FlashEEPROM@@QAEXPAD@Z	; FlashEEPROM::LoadFromFile

; 46   :   }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FlashEEPROM@@QAE@XZ ENDP				; FlashEEPROM::FlashEEPROM
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Reset@FlashEEPROM@@QAEXXZ
_TEXT	SEGMENT
_i$78446 = -8						; size = 4
_this$ = -4						; size = 4
?Reset@FlashEEPROM@@QAEXXZ PROC				; FlashEEPROM::Reset, COMDAT
; _this$ = ecx

; 60   :   {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 61   :     mode = FlashMode_Read;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 62   :     errorMode = FlashMode_Read;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], 0

; 63   :     state = EEPROM_STATE_READ;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 1

; 64   :     errorState = EEPROM_STATE_READ;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 1

; 65   :     for(uint32 i = 0; i < DEFAULT_NUM_SECTORS; i++)

	mov	DWORD PTR _i$78446[ebp], 0
	jmp	SHORT $LN3@Reset
$LN2@Reset:
	mov	ecx, DWORD PTR _i$78446[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$78446[ebp], ecx
$LN3@Reset:
	cmp	DWORD PTR _i$78446[ebp], 39		; 00000027H
	jae	SHORT $LN4@Reset

; 66   :     {
; 67   :       sectorLockStatus[i] = false;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _i$78446[ebp]
	mov	BYTE PTR [edx+36], 0

; 68   :     }

	jmp	SHORT $LN2@Reset
$LN4@Reset:

; 69   :   }

	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@FlashEEPROM@@QAEXXZ ENDP				; FlashEEPROM::Reset
_TEXT	ENDS
PUBLIC	?GetBufferSize@NuonEnvironment@@QAEII@Z		; NuonEnvironment::GetBufferSize
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\nuonenvironment.cpp
_TEXT	SEGMENT
_bufferSize$ = -8					; size = 4
_this$ = -4						; size = 4
_channelMode$ = 8					; size = 4
?GetBufferSize@NuonEnvironment@@QAEII@Z PROC		; NuonEnvironment::GetBufferSize
; _this$ = ecx

; 445  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 446  :   uint32 bufferSize;
; 447  : 
; 448  :   if((channelMode & BUFFER_SIZE_64K) == 0)

	mov	eax, DWORD PTR _channelMode$[ebp]
	and	eax, 224				; 000000e0H
	jne	SHORT $LN2@GetBufferS

; 449  :   {
; 450  :     bufferSize = 8192;

	mov	DWORD PTR _bufferSize$[ebp], 8192	; 00002000H

; 451  :   }
; 452  :   else

	jmp	SHORT $LN1@GetBufferS
$LN2@GetBufferS:

; 453  :   {
; 454  :     bufferSize = 512UL << (((channelMode & BUFFER_SIZE_64K) >> 5) & 0x7UL);

	mov	ecx, DWORD PTR _channelMode$[ebp]
	and	ecx, 224				; 000000e0H
	shr	ecx, 5
	and	ecx, 7
	mov	edx, 512				; 00000200H
	shl	edx, cl
	mov	DWORD PTR _bufferSize$[ebp], edx
$LN1@GetBufferS:

; 455  :   }
; 456  : 
; 457  :   return bufferSize;

	mov	eax, DWORD PTR _bufferSize$[ebp]

; 458  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetBufferSize@NuonEnvironment@@QAEII@Z ENDP		; NuonEnvironment::GetBufferSize
_TEXT	ENDS
PUBLIC	?InitBios@NuonEnvironment@@QAEXXZ		; NuonEnvironment::InitBios
EXTRN	?InitBios@@YAXPAVMPE@@@Z:PROC			; InitBios
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InitBios@NuonEnvironment@@QAEXXZ PROC			; NuonEnvironment::InitBios
; _this$ = ecx

; 461  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 462  :   ::InitBios(mpe[3]);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	?InitBios@@YAXPAVMPE@@@Z		; InitBios
	add	esp, 4

; 463  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InitBios@NuonEnvironment@@QAEXXZ ENDP			; NuonEnvironment::InitBios
_TEXT	ENDS
PUBLIC	??_GFlashEEPROM@@QAEPAXI@Z			; FlashEEPROM::`scalar deleting destructor'
PUBLIC	??_GMPE@@QAEPAXI@Z				; MPE::`scalar deleting destructor'
PUBLIC	?Halt@MPE@@QAEXXZ				; MPE::Halt
PUBLIC	??1NuonEnvironment@@QAE@XZ			; NuonEnvironment::~NuonEnvironment
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
xdata$x	SEGMENT
__unwindtable$??1NuonEnvironment@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1NuonEnvironment@@QAE@XZ$0
__ehfuncinfo$??1NuonEnvironment@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1NuonEnvironment@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv94 = -56						; size = 4
tv82 = -52						; size = 4
$T81053 = -48						; size = 4
$T81050 = -44						; size = 4
$T81049 = -40						; size = 4
$T81048 = -36						; size = 4
$T81047 = -32						; size = 4
$T81044 = -28						; size = 4
$T81043 = -24						; size = 4
_i$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1NuonEnvironment@@QAE@XZ PROC				; NuonEnvironment::~NuonEnvironment
; _this$ = ecx

; 466  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1NuonEnvironment@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 44					; 0000002cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 467  :   uint32 i;
; 468  : 
; 469  :   //Close stream and shut down audio library
; 470  :   CloseAudio();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CloseAudio@NuonEnvironment@@QAEXXZ	; NuonEnvironment::CloseAudio

; 471  : 
; 472  :   //Stop the processor thread
; 473  :   for(i = 0; i < 4; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@NuonEnviro@2
$LN5@NuonEnviro@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@NuonEnviro@2:
	cmp	DWORD PTR _i$[ebp], 4
	jae	SHORT $LN4@NuonEnviro@2

; 474  :   {
; 475  :     mpe[i]->Halt();

	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4]
	call	?Halt@MPE@@QAEXXZ			; MPE::Halt

; 476  :   }

	jmp	SHORT $LN5@NuonEnviro@2
$LN4@NuonEnviro@2:

; 477  : 
; 478  :   //Delete the MPE objects
; 479  :   for(i = 0; i < 4; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@NuonEnviro@2
$LN2@NuonEnviro@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@NuonEnviro@2:
	cmp	DWORD PTR _i$[ebp], 4
	jae	SHORT $LN1@NuonEnviro@2

; 480  :   {
; 481  :     delete mpe[i];

	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR $T81044[ebp], eax
	mov	ecx, DWORD PTR $T81044[ebp]
	mov	DWORD PTR $T81043[ebp], ecx
	cmp	DWORD PTR $T81043[ebp], 0
	je	SHORT $LN9@NuonEnviro@2
	push	1
	mov	ecx, DWORD PTR $T81043[ebp]
	call	??_GMPE@@QAEPAXI@Z
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN10@NuonEnviro@2
$LN9@NuonEnviro@2:
	mov	DWORD PTR tv82[ebp], 0
$LN10@NuonEnviro@2:

; 482  :   }

	jmp	SHORT $LN2@NuonEnviro@2
$LN1@NuonEnviro@2:

; 483  : 
; 484  :   //Free up allocated RAM 
; 485  :   delete [] mainBusDRAM;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR $T81047[ebp], eax
	mov	ecx, DWORD PTR $T81047[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 486  :   mainBusDRAM = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], 0

; 487  :   delete [] systemBusDRAM;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T81048[ebp], ecx
	mov	edx, DWORD PTR $T81048[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 488  :   systemBusDRAM = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 489  : 
; 490  :   delete flashEEPROM;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR $T81050[ebp], edx
	mov	eax, DWORD PTR $T81050[ebp]
	mov	DWORD PTR $T81049[ebp], eax
	cmp	DWORD PTR $T81049[ebp], 0
	je	SHORT $LN11@NuonEnviro@2
	push	1
	mov	ecx, DWORD PTR $T81049[ebp]
	call	??_GFlashEEPROM@@QAEPAXI@Z
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN12@NuonEnviro@2
$LN11@NuonEnviro@2:
	mov	DWORD PTR tv94[ebp], 0
$LN12@NuonEnviro@2:

; 491  : 
; 492  :   //Free up string memory
; 493  :   delete [] dvdBase;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	mov	DWORD PTR $T81053[ebp], edx
	mov	eax, DWORD PTR $T81053[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 494  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1NuonMemoryManager@@QAE@XZ		; NuonMemoryManager::~NuonMemoryManager
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1NuonEnvironment@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1NuonMemoryManager@@QAE@XZ		; NuonMemoryManager::~NuonMemoryManager
__ehhandler$??1NuonEnvironment@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1NuonEnvironment@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1NuonEnvironment@@QAE@XZ ENDP				; NuonEnvironment::~NuonEnvironment
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\mpe.h
;	COMDAT ?Halt@MPE@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Halt@MPE@@QAEXXZ PROC					; MPE::Halt, COMDAT
; _this$ = ecx

; 471  :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 472  :     mpectl &= ~MPECTRL_MPEGO;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+384]
	and	ecx, -3					; fffffffdH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+384], ecx

; 473  :   }

	mov	esp, ebp
	pop	ebp
	ret	0
?Halt@MPE@@QAEXXZ ENDP					; MPE::Halt
_TEXT	ENDS
EXTRN	??1MPE@@QAE@XZ:PROC				; MPE::~MPE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GMPE@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GMPE@@QAEPAXI@Z PROC					; MPE::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MPE@@QAE@XZ				; MPE::~MPE
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMPE@@QAEPAXI@Z ENDP					; MPE::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1FlashEEPROM@@QAE@XZ				; FlashEEPROM::~FlashEEPROM
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GFlashEEPROM@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GFlashEEPROM@@QAEPAXI@Z PROC				; FlashEEPROM::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FlashEEPROM@@QAE@XZ			; FlashEEPROM::~FlashEEPROM
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFlashEEPROM@@QAEPAXI@Z ENDP				; FlashEEPROM::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?SaveToFile@FlashEEPROM@@QAEXPAD@Z:PROC		; FlashEEPROM::SaveToFile
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\flasheeprom.h
;	COMDAT ??1FlashEEPROM@@QAE@XZ
_TEXT	SEGMENT
$T81066 = -8						; size = 4
_this$ = -4						; size = 4
??1FlashEEPROM@@QAE@XZ PROC				; FlashEEPROM::~FlashEEPROM, COMDAT
; _this$ = ecx

; 49   :   {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 50   :     SaveToFile("FlashEEPROM.bin");

	push	OFFSET ??_C@_0BA@LJCMGLJN@FlashEEPROM?4bin?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveToFile@FlashEEPROM@@QAEXPAD@Z	; FlashEEPROM::SaveToFile

; 51   :     delete [] eeprom;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T81066[ebp], ecx
	mov	edx, DWORD PTR $T81066[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 52   :   }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1FlashEEPROM@@QAE@XZ ENDP				; FlashEEPROM::~FlashEEPROM
_TEXT	ENDS
PUBLIC	?ReplaceNewline@@YAXPADDI@Z			; ReplaceNewline
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\nuonenvironment.cpp
_TEXT	SEGMENT
_index$ = -4						; size = 4
_line$ = 8						; size = 4
_replaceChar$ = 12					; size = 1
_maxIndex$ = 16						; size = 4
?ReplaceNewline@@YAXPADDI@Z PROC			; ReplaceNewline

; 502  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 503  :   uint32 index = 0;

	mov	DWORD PTR _index$[ebp], 0
$LN3@ReplaceNew:

; 504  : 
; 505  :   while(index <= maxIndex)

	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR _maxIndex$[ebp]
	ja	SHORT $LN2@ReplaceNew

; 506  :   {
; 507  :     if(line[index] == '\n')

	mov	ecx, DWORD PTR _line$[ebp]
	add	ecx, DWORD PTR _index$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 10					; 0000000aH
	jne	SHORT $LN1@ReplaceNew

; 508  :     {
; 509  :       break;

	jmp	SHORT $LN2@ReplaceNew
$LN1@ReplaceNew:

; 510  :     }
; 511  : 
; 512  :     index++;

	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax

; 513  :   }

	jmp	SHORT $LN3@ReplaceNew
$LN2@ReplaceNew:

; 514  : 
; 515  :   line[index] = replaceChar;

	mov	ecx, DWORD PTR _line$[ebp]
	add	ecx, DWORD PTR _index$[ebp]
	mov	dl, BYTE PTR _replaceChar$[ebp]
	mov	BYTE PTR [ecx], dl

; 516  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ReplaceNewline@@YAXPADDI@Z ENDP			; ReplaceNewline
_TEXT	ENDS
PUBLIC	?SetDVDBaseFromFileName@NuonEnvironment@@QAEXPAD@Z ; NuonEnvironment::SetDVDBaseFromFileName
EXTRN	_strncpy:PROC
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T81071 = -16						; size = 4
$T81070 = -12						; size = 4
_i$ = -8						; size = 4
_this$ = -4						; size = 4
_filename$ = 8						; size = 4
?SetDVDBaseFromFileName@NuonEnvironment@@QAEXPAD@Z PROC	; NuonEnvironment::SetDVDBaseFromFileName
; _this$ = ecx

; 519  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 520  :   uint32 i;
; 521  : 
; 522  :   delete [] dvdBase;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR $T81070[ebp], ecx
	mov	edx, DWORD PTR $T81070[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 523  :   i = strlen(filename);

	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _i$[ebp], eax

; 524  :   dvdBase = new char[i+1];

	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T81071[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T81071[ebp]
	mov	DWORD PTR [edx+124], eax

; 525  :   strncpy(dvdBase,filename,i+1);

	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH
$LN4@SetDVDBase:

; 526  :   while(i >= 0)

	cmp	DWORD PTR _i$[ebp], 0
	jb	SHORT $LN3@SetDVDBase

; 527  :   {
; 528  :      if(dvdBase[i] == '\\')

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	mov	ecx, DWORD PTR _i$[ebp]
	movsx	edx, BYTE PTR [eax+ecx]
	cmp	edx, 92					; 0000005cH
	jne	SHORT $LN2@SetDVDBase

; 529  :      {
; 530  :        break;

	jmp	SHORT $LN3@SetDVDBase
$LN2@SetDVDBase:

; 531  :      }
; 532  :    
; 533  :      dvdBase[i] = '\0';

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	edx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [ecx+edx], 0

; 534  :      i--;

	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax

; 535  :   }

	jmp	SHORT $LN4@SetDVDBase
$LN3@SetDVDBase:

; 536  : 
; 537  :   if(dvdBase[0] == '\0')

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	jne	SHORT $LN5@SetDVDBase

; 538  :   {
; 539  :     dvdBase[0] = '.';

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	mov	BYTE PTR [edx], 46			; 0000002eH

; 540  :     dvdBase[1] = '/';

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	BYTE PTR [ecx+1], 47			; 0000002fH

; 541  :     dvdBase[2] = '\0';

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	mov	BYTE PTR [eax+2], 0
$LN5@SetDVDBase:

; 542  :   }
; 543  : }

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetDVDBaseFromFileName@NuonEnvironment@@QAEXPAD@Z ENDP	; NuonEnvironment::SetDVDBaseFromFileName
_TEXT	ENDS
PUBLIC	?ReadConfigLine@NuonEnvironment@@AAE?AW4ConfigTokenType@@PAU_iobuf@@PAD@Z ; NuonEnvironment::ReadConfigLine
EXTRN	_fscanf:PROC
EXTRN	_feof:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_firstChar$ = -5					; size = 1
_this$ = -4						; size = 4
_file$ = 8						; size = 4
_buf$ = 12						; size = 4
?ReadConfigLine@NuonEnvironment@@AAE?AW4ConfigTokenType@@PAU_iobuf@@PAD@Z PROC ; NuonEnvironment::ReadConfigLine
; _this$ = ecx

; 546  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 547  :   char firstChar;
; 548  : 
; 549  :   if(feof(file))

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_feof
	add	esp, 4
	test	eax, eax
	je	SHORT $LN10@ReadConfig

; 550  :   {
; 551  :     return CONFIG_EOF;

	xor	eax, eax
	jmp	SHORT $LN11@ReadConfig
$LN10@ReadConfig:

; 552  :   }
; 553  : 
; 554  :   fscanf(file,"%s",buf);

	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	push	OFFSET $SG78812
	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	call	_fscanf
	add	esp, 12					; 0000000cH

; 555  :   firstChar = buf[0];

	mov	eax, DWORD PTR _buf$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _firstChar$[ebp], cl

; 556  : 
; 557  :   if(firstChar == CONFIG_COMMENT_CHAR)

	movsx	edx, BYTE PTR _firstChar$[ebp]
	cmp	edx, 59					; 0000003bH
	jne	SHORT $LN9@ReadConfig

; 558  :   {
; 559  :     return CONFIG_COMMENT;

	mov	eax, 3
	jmp	SHORT $LN11@ReadConfig
	jmp	SHORT $LN11@ReadConfig
$LN9@ReadConfig:

; 560  :   }
; 561  :   else if(firstChar == CONFIG_VARIABLE_START_CHAR)

	movsx	eax, BYTE PTR _firstChar$[ebp]
	cmp	eax, 91					; 0000005bH
	jne	SHORT $LN7@ReadConfig

; 562  :   {
; 563  :     return CONFIG_VARIABLE_START;

	mov	eax, 4
	jmp	SHORT $LN11@ReadConfig
	jmp	SHORT $LN11@ReadConfig
$LN7@ReadConfig:

; 564  :   }
; 565  :   else if(firstChar == CONFIG_VARIABLE_FINISH_CHAR)

	movsx	ecx, BYTE PTR _firstChar$[ebp]
	cmp	ecx, 93					; 0000005dH
	jne	SHORT $LN5@ReadConfig

; 566  :   {
; 567  :     return CONFIG_VARIABLE_FINISH;

	mov	eax, 5
	jmp	SHORT $LN11@ReadConfig
	jmp	SHORT $LN11@ReadConfig
$LN5@ReadConfig:

; 568  :   }  
; 569  :   else if((firstChar == '<') || (firstChar == '>') || (firstChar == '"'))

	movsx	edx, BYTE PTR _firstChar$[ebp]
	cmp	edx, 60					; 0000003cH
	je	SHORT $LN2@ReadConfig
	movsx	eax, BYTE PTR _firstChar$[ebp]
	cmp	eax, 62					; 0000003eH
	je	SHORT $LN2@ReadConfig
	movsx	ecx, BYTE PTR _firstChar$[ebp]
	cmp	ecx, 34					; 00000022H
	jne	SHORT $LN3@ReadConfig
$LN2@ReadConfig:

; 570  :   {
; 571  :     return CONFIG_RESERVED;

	mov	eax, 2
	jmp	SHORT $LN11@ReadConfig

; 572  :   }
; 573  :   else

	jmp	SHORT $LN11@ReadConfig
$LN3@ReadConfig:

; 574  :   {
; 575  :     return CONFIG_STRING;

	mov	eax, 6
$LN11@ReadConfig:

; 576  :   }
; 577  : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ReadConfigLine@NuonEnvironment@@AAE?AW4ConfigTokenType@@PAU_iobuf@@PAD@Z ENDP ; NuonEnvironment::ReadConfigLine
_TEXT	ENDS
EXTRN	_fclose:PROC
EXTRN	_sscanf:PROC
EXTRN	_stricmp:PROC
EXTRN	_strcpy:PROC
EXTRN	_strnicmp:PROC
EXTRN	_fopen:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -1060						; size = 4
$T81075 = -1056						; size = 4
$T81074 = -1052						; size = 4
_tokenType$ = -1048					; size = 4
_configFile$ = -1044					; size = 4
_line$ = -1036						; size = 1025
_this$ = -4						; size = 4
_fileName$ = 8						; size = 4
?LoadConfigFile@NuonEnvironment@@AAE_NPAD@Z PROC	; NuonEnvironment::LoadConfigFile
; _this$ = ecx

; 584  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1060				; 00000424H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1060]
	mov	ecx, 265				; 00000109H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 585  :   char line[1025];
; 586  :   FILE *configFile = 0;

	mov	DWORD PTR _configFile$[ebp], 0

; 587  :   ConfigTokenType tokenType;
; 588  : 
; 589  :   configFile = fopen(fileName,"r");

	push	OFFSET $SG78832
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _configFile$[ebp], eax

; 590  :   if(!configFile)

	cmp	DWORD PTR _configFile$[ebp], 0
	jne	SHORT $LN31@LoadConfig

; 591  :   {
; 592  :     return false;

	xor	al, al
	jmp	$LN33@LoadConfig
$LN31@LoadConfig:

; 593  :   }
; 594  : 
; 595  :   while(!feof(configFile))

	mov	ecx, DWORD PTR _configFile$[ebp]
	push	ecx
	call	_feof
	add	esp, 4
	test	eax, eax
	jne	$LN30@LoadConfig

; 596  :   {
; 597  :     tokenType = ReadConfigLine(configFile,line);

	lea	edx, DWORD PTR _line$[ebp]
	push	edx
	mov	eax, DWORD PTR _configFile$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadConfigLine@NuonEnvironment@@AAE?AW4ConfigTokenType@@PAU_iobuf@@PAD@Z ; NuonEnvironment::ReadConfigLine
	mov	DWORD PTR _tokenType$[ebp], eax

; 598  :     switch(tokenType)

	mov	ecx, DWORD PTR _tokenType$[ebp]
	mov	DWORD PTR tv75[ebp], ecx
	cmp	DWORD PTR tv75[ebp], 4
	je	SHORT $LN26@LoadConfig
	jmp	$LN28@LoadConfig

; 599  :     {
; 600  :       case CONFIG_COMMENT_CHAR:
; 601  :         break;

	jmp	$LN28@LoadConfig
$LN26@LoadConfig:

; 602  :       case CONFIG_VARIABLE_START:
; 603  : 
; 604  :         if(strnicmp(&line[1],"DVDBase]",sizeof("DVDBase]")) == 0)

	push	9
	push	OFFSET $SG78844
	lea	edx, DWORD PTR _line$[ebp+1]
	push	edx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN25@LoadConfig

; 605  :         {
; 606  :           tokenType = ReadConfigLine(configFile,line);

	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR _configFile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadConfigLine@NuonEnvironment@@AAE?AW4ConfigTokenType@@PAU_iobuf@@PAD@Z ; NuonEnvironment::ReadConfigLine
	mov	DWORD PTR _tokenType$[ebp], eax

; 607  :           ReplaceNewline(line,0,1024);

	push	1024					; 00000400H
	push	0
	lea	edx, DWORD PTR _line$[ebp]
	push	edx
	call	?ReplaceNewline@@YAXPADDI@Z		; ReplaceNewline
	add	esp, 12					; 0000000cH

; 608  :           delete [] dvdBase;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR $T81074[ebp], ecx
	mov	edx, DWORD PTR $T81074[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 609  :           dvdBase = new char[strlen(line)+1];

	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T81075[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T81075[ebp]
	mov	DWORD PTR [ecx+124], edx

; 610  :           strcpy(dvdBase,line);

	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	call	_strcpy
	add	esp, 8
	jmp	$LN28@LoadConfig
$LN25@LoadConfig:

; 611  :         }
; 612  :         else if(strnicmp(&line[1],"AudioInterrupts]",sizeof("AudioInterrupts]")) == 0)

	push	17					; 00000011H
	push	OFFSET $SG78850
	lea	eax, DWORD PTR _line$[ebp+1]
	push	eax
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN23@LoadConfig

; 613  :         {
; 614  :           tokenType = ReadConfigLine(configFile,line);

	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	mov	edx, DWORD PTR _configFile$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadConfigLine@NuonEnvironment@@AAE?AW4ConfigTokenType@@PAU_iobuf@@PAD@Z ; NuonEnvironment::ReadConfigLine
	mov	DWORD PTR _tokenType$[ebp], eax

; 615  :           bAudioInterruptsEnabled = !stricmp(line,"Enabled");

	push	OFFSET $SG78851
	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+128], al
	jmp	$LN28@LoadConfig
$LN23@LoadConfig:

; 616  :         }
; 617  :         else if(strnicmp(&line[1],"DynamicCompiler]",sizeof("DynamicCompiler]")) == 0)

	push	17					; 00000011H
	push	OFFSET $SG78854
	lea	edx, DWORD PTR _line$[ebp+1]
	push	edx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN21@LoadConfig

; 618  :         {
; 619  :           tokenType = ReadConfigLine(configFile,line);

	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR _configFile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadConfigLine@NuonEnvironment@@AAE?AW4ConfigTokenType@@PAU_iobuf@@PAD@Z ; NuonEnvironment::ReadConfigLine
	mov	DWORD PTR _tokenType$[ebp], eax

; 620  :           compilerOptions.bAllowCompile = !stricmp(line,"Enabled");

	push	OFFSET $SG78855
	lea	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+119], al
	jmp	$LN28@LoadConfig
$LN21@LoadConfig:

; 621  :         }
; 622  :         else if(strnicmp(&line[1],"DumpCompiledBlocks]",sizeof("DumpCompiledBlocks]")) == 0)

	push	20					; 00000014H
	push	OFFSET $SG78858
	lea	edx, DWORD PTR _line$[ebp+1]
	push	edx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN19@LoadConfig

; 623  :         {
; 624  :           tokenType = ReadConfigLine(configFile,line);

	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR _configFile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadConfigLine@NuonEnvironment@@AAE?AW4ConfigTokenType@@PAU_iobuf@@PAD@Z ; NuonEnvironment::ReadConfigLine
	mov	DWORD PTR _tokenType$[ebp], eax

; 625  :           compilerOptions.bDumpBlocks = !stricmp(line,"Enabled");

	push	OFFSET $SG78859
	lea	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+120], al
	jmp	$LN28@LoadConfig
$LN19@LoadConfig:

; 626  :         }
; 627  :         else if(strnicmp(&line[1],"CompilerDeadCodeElimination]",sizeof("CompilerDeadCodeElimination]")) == 0)

	push	29					; 0000001dH
	push	OFFSET $SG78862
	lea	edx, DWORD PTR _line$[ebp+1]
	push	edx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN17@LoadConfig

; 628  :         {
; 629  :           tokenType = ReadConfigLine(configFile,line);

	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR _configFile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadConfigLine@NuonEnvironment@@AAE?AW4ConfigTokenType@@PAU_iobuf@@PAD@Z ; NuonEnvironment::ReadConfigLine
	mov	DWORD PTR _tokenType$[ebp], eax

; 630  :           compilerOptions.bDeadCodeElimination = !stricmp(line,"Enabled");

	push	OFFSET $SG78863
	lea	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+118], al
	jmp	$LN28@LoadConfig
$LN17@LoadConfig:

; 631  :         }
; 632  :         else if(strnicmp(&line[1],"CompilerConstantPropagation]",sizeof("CompilerConstantPropagation]")) == 0)

	push	29					; 0000001dH
	push	OFFSET $SG78866
	lea	edx, DWORD PTR _line$[ebp+1]
	push	edx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN15@LoadConfig

; 633  :         {
; 634  :           tokenType = ReadConfigLine(configFile,line);

	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR _configFile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadConfigLine@NuonEnvironment@@AAE?AW4ConfigTokenType@@PAU_iobuf@@PAD@Z ; NuonEnvironment::ReadConfigLine
	mov	DWORD PTR _tokenType$[ebp], eax

; 635  :           compilerOptions.bConstantPropagation = !stricmp(line,"Enabled");

	push	OFFSET $SG78867
	lea	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+117], al
	jmp	$LN28@LoadConfig
$LN15@LoadConfig:

; 636  :         }
; 637  :         else if(strnicmp(&line[1],"T3KCompilerHack]",sizeof("T3KCompilerHack]")) == 0)

	push	17					; 00000011H
	push	OFFSET $SG78870
	lea	edx, DWORD PTR _line$[ebp+1]
	push	edx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN13@LoadConfig

; 638  :         {
; 639  :           tokenType = ReadConfigLine(configFile,line);

	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR _configFile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadConfigLine@NuonEnvironment@@AAE?AW4ConfigTokenType@@PAU_iobuf@@PAD@Z ; NuonEnvironment::ReadConfigLine
	mov	DWORD PTR _tokenType$[ebp], eax

; 640  :           compilerOptions.bT3KCompilerHack = !stricmp(line,"Enabled");

	push	OFFSET $SG78871
	lea	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+116], al
	jmp	$LN28@LoadConfig
$LN13@LoadConfig:

; 641  :         }
; 642  :         else if(strnicmp(&line[1],"AlwaysUpdateVideo]",sizeof("AlwaysUpdateVideo]")) == 0)

	push	19					; 00000013H
	push	OFFSET $SG78874
	lea	edx, DWORD PTR _line$[ebp+1]
	push	edx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN11@LoadConfig

; 643  :         {
; 644  :           tokenType = ReadConfigLine(configFile,line);

	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR _configFile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadConfigLine@NuonEnvironment@@AAE?AW4ConfigTokenType@@PAU_iobuf@@PAD@Z ; NuonEnvironment::ReadConfigLine
	mov	DWORD PTR _tokenType$[ebp], eax

; 645  :           videoOptions.bAlwaysUpdateVideo = !stricmp(line,"Enabled");

	push	OFFSET $SG78875
	lea	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+122], al
	jmp	$LN28@LoadConfig
$LN11@LoadConfig:

; 646  :         }
; 647  :         else if(strnicmp(&line[1],"PixelShaders]",sizeof("PixelShaders]")) == 0)

	push	14					; 0000000eH
	push	OFFSET $SG78878
	lea	edx, DWORD PTR _line$[ebp+1]
	push	edx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN9@LoadConfig

; 648  :         {
; 649  :           tokenType = ReadConfigLine(configFile,line);

	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR _configFile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadConfigLine@NuonEnvironment@@AAE?AW4ConfigTokenType@@PAU_iobuf@@PAD@Z ; NuonEnvironment::ReadConfigLine
	mov	DWORD PTR _tokenType$[ebp], eax

; 650  :           videoOptions.bUseShaders = !stricmp(line,"Enabled");

	push	OFFSET $SG78879
	lea	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+121], al
	jmp	$LN28@LoadConfig
$LN9@LoadConfig:

; 651  :         }
; 652  :         else if(strnicmp(&line[1],"CycleBasedTiming]",sizeof("CycleBasedTiming]")) == 0)

	push	18					; 00000012H
	push	OFFSET $SG78882
	lea	edx, DWORD PTR _line$[ebp+1]
	push	edx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN7@LoadConfig

; 653  :         {
; 654  :           tokenType = ReadConfigLine(configFile,line);

	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR _configFile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadConfigLine@NuonEnvironment@@AAE?AW4ConfigTokenType@@PAU_iobuf@@PAD@Z ; NuonEnvironment::ReadConfigLine
	mov	DWORD PTR _tokenType$[ebp], eax

; 655  :           bUseCycleBasedTiming = !stricmp(line,"Enabled");

	push	OFFSET $SG78883
	lea	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+89], al
	jmp	SHORT $LN28@LoadConfig
$LN7@LoadConfig:

; 656  :         }
; 657  :         else if(strnicmp(&line[1],"FieldsPerSecond]",sizeof("FieldsPerSecond]")) == 0)

	push	17					; 00000011H
	push	OFFSET $SG78886
	lea	edx, DWORD PTR _line$[ebp+1]
	push	edx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN28@LoadConfig

; 658  :         {
; 659  :           tokenType = ReadConfigLine(configFile,line);

	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR _configFile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadConfigLine@NuonEnvironment@@AAE?AW4ConfigTokenType@@PAU_iobuf@@PAD@Z ; NuonEnvironment::ReadConfigLine
	mov	DWORD PTR _tokenType$[ebp], eax

; 660  :           sscanf(line,"%lu",&fps);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 96					; 00000060H
	push	edx
	push	OFFSET $SG78887
	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_sscanf
	add	esp, 12					; 0000000cH

; 661  :           if(fps < 1)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+96], 1
	jae	SHORT $LN4@LoadConfig

; 662  :           {
; 663  :             fps = 1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+96], 1
	jmp	SHORT $LN28@LoadConfig
$LN4@LoadConfig:

; 664  :           }
; 665  :           else if(fps > 240)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+96], 240			; 000000f0H
	jbe	SHORT $LN28@LoadConfig

; 666  :           {
; 667  :             fps = 240;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+96], 240			; 000000f0H
$LN28@LoadConfig:

; 668  :           }
; 669  :         }
; 670  : 
; 671  :         break;
; 672  :       default:
; 673  :         break;
; 674  :     }
; 675  :   }

	jmp	$LN31@LoadConfig
$LN30@LoadConfig:

; 676  : 
; 677  :   fclose(configFile);

	mov	edx, DWORD PTR _configFile$[ebp]
	push	edx
	call	_fclose
	add	esp, 4

; 678  :   return true;

	mov	al, 1
$LN33@LoadConfig:

; 679  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN37@LoadConfig
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 1060				; 00000424H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN37@LoadConfig:
	DD	1
	DD	$LN36@LoadConfig
$LN36@LoadConfig:
	DD	-1036					; fffffbf4H
	DD	1025					; 00000401H
	DD	$LN35@LoadConfig
$LN35@LoadConfig:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
?LoadConfigFile@NuonEnvironment@@AAE_NPAD@Z ENDP	; NuonEnvironment::LoadConfigFile
_TEXT	ENDS
END
