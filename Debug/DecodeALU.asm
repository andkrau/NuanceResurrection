; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	c:\NuanceExperimental\DecodeALU.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?DecodeInstruction_ALU16@MPE@@QAEXPAEPAVInstructionCacheEntry@@PAI@Z ; MPE::DecodeInstruction_ALU16
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\nuanceexperimental\decodealu.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv174 = -20						; size = 4
tv80 = -16						; size = 4
_field_1F$ = -12					; size = 4
_field_3E0$ = -8					; size = 4
_this$ = -4						; size = 4
_iPtr$ = 8						; size = 4
_entry$ = 12						; size = 4
_immExt$ = 16						; size = 4
?DecodeInstruction_ALU16@MPE@@QAEXPAEPAVInstructionCacheEntry@@PAI@Z PROC ; MPE::DecodeInstruction_ALU16
; _this$ = ecx

; 48   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 49   :   uint32 field_3E0, field_1F;
; 50   : 
; 51   :   entry->packetInfo |= PACKETINFO_ALU;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 64					; 00000040H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 52   :   field_3E0 = ((*iPtr & 0x03) << 3) | (*(iPtr + 1) >> 5);

	mov	eax, DWORD PTR _iPtr$[ebp]
	movzx	ecx, BYTE PTR [eax]
	and	ecx, 3
	shl	ecx, 3
	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	sar	eax, 5
	or	ecx, eax
	mov	DWORD PTR _field_3E0$[ebp], ecx

; 53   :   field_1F = *(iPtr + 1) & 0x1F;

	mov	ecx, DWORD PTR _iPtr$[ebp]
	movzx	edx, BYTE PTR [ecx+1]
	and	edx, 31					; 0000001fH
	mov	DWORD PTR _field_1F$[ebp], edx

; 54   : 
; 55   :   switch((*iPtr & 0x3C) >> 2)

	mov	eax, DWORD PTR _iPtr$[ebp]
	movzx	ecx, BYTE PTR [eax]
	and	ecx, 60					; 0000003cH
	sar	ecx, 2
	mov	DWORD PTR tv80[ebp], ecx
	cmp	DWORD PTR tv80[ebp], 15			; 0000000fH
	ja	$LN27@DecodeInst
	mov	edx, DWORD PTR tv80[ebp]
	jmp	DWORD PTR $LN29@DecodeInst[edx*4]
$LN24@DecodeInst:

; 56   :   {
; 57   :     case (0x00 >> 2):
; 58   :       //add Si, Sk
; 59   :       entry->packetInfo |= addScalarFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx

; 60   :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ADDScalar;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 62			; 0000003eH

; 61   :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E0;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [ecx+136], edx

; 62   :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 63   :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+144], eax

; 64   : 
; 65   :       entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E0) | SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 66   :       entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 67   :       entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 68   :       return;

	jmp	$LN27@DecodeInst
$LN23@DecodeInst:

; 69   :     case (0x04 >> 2):
; 70   :       //add #nnnn, Sk
; 71   :       entry->packetInfo |= addImmediateFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 72   :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ADDImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 61			; 0000003dH

; 73   :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (*immExt << 5) | field_3E0;

	mov	eax, DWORD PTR _immExt$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 5
	or	ecx, DWORD PTR _field_3E0$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+136], ecx

; 74   :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 75   :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+144], eax

; 76   : 
; 77   :       entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 78   :       entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 79   :       entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 80   :       return;

	jmp	$LN27@DecodeInst
$LN22@DecodeInst:

; 81   :     case (0x08 >> 2):
; 82   :       //copy Si, Sk
; 83   :       entry->packetInfo |= copyFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 84   :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_COPY;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 46			; 0000002eH

; 85   :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = 0;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+136], 0

; 86   :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_3E0;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [ecx+140], edx

; 87   :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [eax+144], ecx

; 88   : 
; 89   :       entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E0);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 90   :       entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 91   :       entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 92   :       return;

	jmp	$LN27@DecodeInst
$LN21@DecodeInst:

; 93   :     case (0x0C >> 2):
; 94   :       //add_sv, sub_sv, neg sk or abs sk
; 95   :       switch(*(iPtr + 1)  & 0x03)

	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	and	eax, 3
	mov	DWORD PTR tv174[ebp], eax
	cmp	DWORD PTR tv174[ebp], 3
	ja	$LN19@DecodeInst
	mov	ecx, DWORD PTR tv174[ebp]
	jmp	DWORD PTR $LN30@DecodeInst[ecx*4]
$LN18@DecodeInst:

; 96   :       {
; 97   :         case 0x00:
; 98   :           //add_sv Vi, Vk
; 99   :           entry->packetInfo |= addsvFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 100  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ADD_SV;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 59			; 0000003bH

; 101  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (field_3E0 & 0x1C);

	mov	eax, DWORD PTR _field_3E0$[ebp]
	and	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 102  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = (field_1F & 0x1C);

	mov	edx, DWORD PTR _field_1F$[ebp]
	and	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+140], edx

; 103  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = (field_1F & 0x1C);

	mov	ecx, DWORD PTR _field_1F$[ebp]
	and	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+144], ecx

; 104  : 
; 105  :           entry->scalarInputDependencies[SLOT_ALU] = VECTOR_REG_DEPENDENCY_MASK(field_3E0) | VECTOR_REG_DEPENDENCY_MASK(field_1F);

	mov	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	eax, cl
	mov	edx, 15					; 0000000fH
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 106  :           entry->scalarOutputDependencies[SLOT_ALU] = VECTOR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 15					; 0000000fH
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 107  :           return;

	jmp	$LN27@DecodeInst
$LN17@DecodeInst:

; 108  :         case 0x01:
; 109  :           //sub_sv Vi, Vk
; 110  :           entry->packetInfo |= subsvFlags;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+24], eax

; 111  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUB_SV;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+128], 60			; 0000003cH

; 112  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (field_3E0 & 0x1C);

	mov	edx, DWORD PTR _field_3E0$[ebp]
	and	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+136], edx

; 113  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = (field_1F & 0x1C);

	mov	ecx, DWORD PTR _field_1F$[ebp]
	and	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+140], ecx

; 114  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = (field_1F & 0x1C);

	mov	eax, DWORD PTR _field_1F$[ebp]
	and	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+144], eax

; 115  : 
; 116  :           entry->scalarInputDependencies[SLOT_ALU] = VECTOR_REG_DEPENDENCY_MASK(field_3E0) | VECTOR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 15					; 0000000fH
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	edx, cl
	mov	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 117  :           entry->scalarOutputDependencies[SLOT_ALU] = VECTOR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 15					; 0000000fH
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 118  :           return;

	jmp	$LN27@DecodeInst
$LN16@DecodeInst:

; 119  :         case 0x02:
; 120  :           //neg Sk
; 121  :           entry->packetInfo |= negFlags;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+24], eax

; 122  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUBImmediateReverse;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+128], 66			; 00000042H

; 123  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E0;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [edx+136], eax

; 124  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = 0;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+140], 0

; 125  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_3E0;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [edx+144], eax

; 126  : 
; 127  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E0);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 128  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E0);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 129  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 130  :           return;

	jmp	$LN27@DecodeInst
$LN15@DecodeInst:

; 131  :         case 0x03:
; 132  :           //abs Sk
; 133  :           entry->packetInfo |= absFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 134  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ABS;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 41			; 00000029H

; 135  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E0;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 136  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_3E0;          

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [edx+144], eax

; 137  : 
; 138  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E0);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 139  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E0);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 140  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 141  :           return;

	jmp	$LN27@DecodeInst
$LN19@DecodeInst:

; 142  :       }
; 143  :       break;

	jmp	$LN27@DecodeInst
$LN14@DecodeInst:

; 144  :     case (0x10 >> 2):
; 145  :       //sub Si, Sk
; 146  :       entry->packetInfo |= subScalarFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 147  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUBScalar;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 67			; 00000043H

; 148  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E0;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 149  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+140], eax

; 150  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 151  :       entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E0) | SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 152  :       entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 153  :       entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 154  :       return;

	jmp	$LN27@DecodeInst
$LN13@DecodeInst:

; 155  :     case (0x14 >> 2):
; 156  :       //sub #nnnn, Sk
; 157  :       entry->packetInfo |= subImmediateFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 158  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUBImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 65			; 00000041H

; 159  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (*immExt << 5) | field_3E0;

	mov	eax, DWORD PTR _immExt$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 5
	or	ecx, DWORD PTR _field_3E0$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+136], ecx

; 160  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 161  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+144], eax

; 162  :       entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 163  :       entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 164  :       entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 165  :       return;

	jmp	$LN27@DecodeInst
$LN12@DecodeInst:

; 166  :     case (0x18 >> 2):
; 167  :       //eor #nnnn, Sk
; 168  :       entry->packetInfo |= eorImmediateFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 169  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_EORImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 96			; 00000060H

; 170  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 171  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+144], eax

; 172  :       entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 173  :       entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 174  :       entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 175  :       if(*immExt == 0)

	mov	edx, DWORD PTR _immExt$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN11@DecodeInst

; 176  :       {
; 177  :         entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = ((int32)(field_3E0 << 27)) >> 27; //#n

	mov	eax, DWORD PTR _field_3E0$[ebp]
	shl	eax, 27					; 0000001bH
	sar	eax, 27					; 0000001bH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 178  :       }
; 179  :       else

	jmp	SHORT $LN10@DecodeInst
$LN11@DecodeInst:

; 180  :       {
; 181  :         entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (*immExt << 5) | field_3E0;

	mov	edx, DWORD PTR _immExt$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 5
	or	eax, DWORD PTR _field_3E0$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax
$LN10@DecodeInst:

; 182  :       }
; 183  :       return;

	jmp	$LN27@DecodeInst
$LN9@DecodeInst:

; 184  :     case (0x1C >> 2):
; 185  :       //cmp Si, Sj
; 186  :       entry->packetInfo |= cmpFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 187  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_CMPScalar;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 72			; 00000048H

; 188  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E0;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 189  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+140], eax

; 190  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 191  :       entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E0) | SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 192  :       entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 491520		; 00078000H

; 193  :       return;

	jmp	$LN27@DecodeInst
$LN8@DecodeInst:

; 194  :     case (0x20 >> 2):
; 195  :       //cmp #nnnn, Sj
; 196  :       entry->packetInfo |= cmpFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx

; 197  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_CMPImmediate;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 70			; 00000046H

; 198  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (*immExt << 5) | field_3E0;

	mov	ecx, DWORD PTR _immExt$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 5
	or	edx, DWORD PTR _field_3E0$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+136], edx

; 199  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+140], edx

; 200  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [eax+144], ecx

; 201  :       entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 202  :       entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 203  :       return;

	jmp	$LN27@DecodeInst
$LN7@DecodeInst:

; 204  :     case (0x24 >> 2):
; 205  :       //and Si, Sk
; 206  :       entry->packetInfo |= andFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 207  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ANDScalar;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 76			; 0000004cH

; 208  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E0;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 209  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+140], eax

; 210  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 211  :       entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E0) | SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 212  :       entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 213  :       entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 214  :       return;

	jmp	$LN27@DecodeInst
$LN6@DecodeInst:

; 215  :     case (0x28 >> 2):
; 216  :       //or Si, Sk
; 217  :       entry->packetInfo |= orFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 218  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ORScalar;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 90			; 0000005aH

; 219  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E0;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 220  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+140], eax

; 221  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 222  :       entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E0) | SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 223  :       entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 224  :       entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 225  :       return;

	jmp	$LN27@DecodeInst
$LN5@DecodeInst:

; 226  :     case (0x2C >> 2):
; 227  :       //eor Si, Sk
; 228  :       entry->packetInfo |= eorFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 229  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_EORScalar;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 97			; 00000061H

; 230  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E0;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 231  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+140], eax

; 232  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 233  :       entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E0) | SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 234  :       entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 235  :       entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 236  :       return;

	jmp	$LN27@DecodeInst
$LN4@DecodeInst:

; 237  :     case (0x30 >> 2):
; 238  :       //asl #m, Sk
; 239  :       entry->packetInfo |= aslFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 240  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ASL;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 50			; 00000032H

; 241  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (32UL - field_1F);

	mov	eax, 32					; 00000020H
	sub	eax, DWORD PTR _field_1F$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 242  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_3E0;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [edx+140], eax

; 243  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_3E0;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 244  :       entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E0);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 245  :       entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E0);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 246  :       entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 247  :       return;

	jmp	$LN27@DecodeInst
$LN3@DecodeInst:

; 248  :     case (0x34 >> 2):
; 249  :       //asr #m, Sk
; 250  :       entry->packetInfo |= asrFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 251  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ASR;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 51			; 00000033H

; 252  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_1F;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 253  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_3E0;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [edx+140], eax

; 254  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_3E0;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 255  :       entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E0);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 256  :       entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E0);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 257  :       entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 258  :       return;

	jmp	$LN27@DecodeInst
$LN2@DecodeInst:

; 259  :     case (0x38 >> 2):
; 260  :       //lsr #m, Sk
; 261  :       entry->packetInfo |= lsrFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 262  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_LSR;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 53			; 00000035H

; 263  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_1F;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 264  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_3E0;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [edx+140], eax

; 265  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_3E0;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 266  :       entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E0);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 267  :       entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E0);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 268  :       entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 269  :       return;

	jmp	SHORT $LN27@DecodeInst
$LN1@DecodeInst:

; 270  :     case (0x3C >> 2):
; 271  :       //btst #m, Sj
; 272  :       entry->packetInfo |= btstFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 273  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_BTST;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 44			; 0000002cH

; 274  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (1UL << field_1F);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 275  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_3E0;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [edx+140], eax

; 276  :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_3E0;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 277  :       entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E0);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E0$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 278  :       entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 425984		; 00068000H
$LN27@DecodeInst:

; 279  :       return;
; 280  :   }
; 281  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN29@DecodeInst:
	DD	$LN24@DecodeInst
	DD	$LN23@DecodeInst
	DD	$LN22@DecodeInst
	DD	$LN21@DecodeInst
	DD	$LN14@DecodeInst
	DD	$LN13@DecodeInst
	DD	$LN12@DecodeInst
	DD	$LN9@DecodeInst
	DD	$LN8@DecodeInst
	DD	$LN7@DecodeInst
	DD	$LN6@DecodeInst
	DD	$LN5@DecodeInst
	DD	$LN4@DecodeInst
	DD	$LN3@DecodeInst
	DD	$LN2@DecodeInst
	DD	$LN1@DecodeInst
$LN30@DecodeInst:
	DD	$LN18@DecodeInst
	DD	$LN17@DecodeInst
	DD	$LN16@DecodeInst
	DD	$LN15@DecodeInst
?DecodeInstruction_ALU16@MPE@@QAEXPAEPAVInstructionCacheEntry@@PAI@Z ENDP ; MPE::DecodeInstruction_ALU16
_TEXT	ENDS
PUBLIC	?DecodeInstruction_ALU32@MPE@@QAEXPAEPAVInstructionCacheEntry@@PAI@Z ; MPE::DecodeInstruction_ALU32
EXTRN	__lrotl:PROC
EXTRN	__lrotr:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv1808 = -68						; size = 4
tv1665 = -64						; size = 4
tv1542 = -60						; size = 4
tv1435 = -56						; size = 4
tv1284 = -52						; size = 4
tv1087 = -48						; size = 4
tv890 = -44						; size = 4
tv734 = -40						; size = 4
tv549 = -36						; size = 4
tv469 = -32						; size = 4
tv282 = -28						; size = 4
tv87 = -24						; size = 4
tv83 = -20						; size = 4
_field_1F$ = -16					; size = 4
_field_1F0000$ = -12					; size = 4
_field_3E00000$ = -8					; size = 4
_this$ = -4						; size = 4
_iPtr$ = 8						; size = 4
_entry$ = 12						; size = 4
_immExt$ = 16						; size = 4
?DecodeInstruction_ALU32@MPE@@QAEXPAEPAVInstructionCacheEntry@@PAI@Z PROC ; MPE::DecodeInstruction_ALU32
; _this$ = ecx

; 284  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-68]
	mov	ecx, 17					; 00000011H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 285  :   uint32 field_3E00000, field_1F0000, field_1F;
; 286  : 
; 287  :   entry->packetInfo |= PACKETINFO_ALU;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 64					; 00000040H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 288  : 
; 289  :   field_3E00000 = ((*iPtr & 0x03) << 3) | (*(iPtr + 1) >> 5);

	mov	eax, DWORD PTR _iPtr$[ebp]
	movzx	ecx, BYTE PTR [eax]
	and	ecx, 3
	shl	ecx, 3
	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	sar	eax, 5
	or	ecx, eax
	mov	DWORD PTR _field_3E00000$[ebp], ecx

; 290  :   field_1F0000 = *(iPtr + 1) & 0x1F;

	mov	ecx, DWORD PTR _iPtr$[ebp]
	movzx	edx, BYTE PTR [ecx+1]
	and	edx, 31					; 0000001fH
	mov	DWORD PTR _field_1F0000$[ebp], edx

; 291  :   field_1F = *(iPtr + 3) & 0x1F;

	mov	eax, DWORD PTR _iPtr$[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	and	ecx, 31					; 0000001fH
	mov	DWORD PTR _field_1F$[ebp], ecx

; 292  : 
; 293  :   switch(*(iPtr + 2) & 0x0F)

	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+2]
	and	eax, 15					; 0000000fH
	mov	DWORD PTR tv83[ebp], eax
	cmp	DWORD PTR tv83[ebp], 14			; 0000000eH
	ja	$LN181@DecodeInst@2
	mov	ecx, DWORD PTR tv83[ebp]
	jmp	DWORD PTR $LN183@DecodeInst@2[ecx*4]
$LN178@DecodeInst@2:

; 294  :   {
; 295  :     case 0x00:
; 296  :       //add
; 297  :       switch(*(iPtr + 3) >> 5)

	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+3]
	sar	eax, 5
	mov	DWORD PTR tv87[ebp], eax
	cmp	DWORD PTR tv87[ebp], 7
	ja	$LN176@DecodeInst@2
	mov	ecx, DWORD PTR tv87[ebp]
	jmp	DWORD PTR $LN184@DecodeInst@2[ecx*4]
$LN175@DecodeInst@2:

; 298  :       {
; 299  :         case 0x00:
; 300  :           //add Si, Sj, Sk
; 301  :           entry->packetInfo |= addScalarFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 302  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ADDScalar;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 62			; 0000003eH

; 303  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 304  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 305  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 306  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 307  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 308  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 309  :           return;

	jmp	$LN181@DecodeInst@2
$LN174@DecodeInst@2:

; 310  :         case 0x01:
; 311  :           //add #nnnn, Sj, Sk
; 312  :           entry->packetInfo |= addImmediateFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 313  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ADDImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 61			; 0000003dH

; 314  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = ((*immExt << 5) | field_3E00000);

	mov	eax, DWORD PTR _immExt$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 5
	or	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+136], ecx

; 315  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 316  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+144], eax

; 317  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 318  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 319  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 320  :           return;

	jmp	$LN181@DecodeInst@2
$LN173@DecodeInst@2:

; 321  :         case 0x02:
; 322  :           //add #nn, Sk
; 323  :           entry->packetInfo |= addImmediateFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 324  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ADDImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 61			; 0000003dH

; 325  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = ((field_1F << 5) | field_3E00000);

	mov	eax, DWORD PTR _field_1F$[ebp]
	shl	eax, 5
	or	eax, DWORD PTR _field_3E00000$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 326  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 327  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 328  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 329  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 330  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 331  :           return;

	jmp	$LN181@DecodeInst@2
$LN172@DecodeInst@2:

; 332  :         case 0x03:
; 333  :           //add #n, >>#m, Sk
; 334  :           entry->packetInfo |= addImmediateFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 335  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ADDImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 61			; 0000003dH

; 336  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 337  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 338  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 339  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 340  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 341  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 342  :           if(field_1F)

	cmp	DWORD PTR _field_1F$[ebp], 0
	je	SHORT $LN171@DecodeInst@2

; 343  :           {
; 344  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] <<= (32 - field_1F);

	mov	ecx, 32					; 00000020H
	sub	ecx, DWORD PTR _field_1F$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+136]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax
$LN171@DecodeInst@2:

; 345  :           }
; 346  :           return;

	jmp	$LN181@DecodeInst@2
$LN170@DecodeInst@2:

; 347  :         case 0x04:
; 348  :           //unused
; 349  :           return;

	jmp	$LN181@DecodeInst@2
$LN169@DecodeInst@2:

; 350  :         case 0x05:
; 351  :           //add Si, >>#m, Sk
; 352  :           entry->packetInfo |= addFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 353  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [edx+136], eax

; 354  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = (((int32)(field_1F << 27)) >> 27);

	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	ecx, 27					; 0000001bH
	sar	ecx, 27					; 0000001bH
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+140], ecx

; 355  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+144], ecx

; 356  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 357  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 358  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 359  :           if((int32)entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] >= 0)

	mov	edx, DWORD PTR _entry$[ebp]
	cmp	DWORD PTR [edx+140], 0
	jl	SHORT $LN168@DecodeInst@2

; 360  :           {
; 361  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ADDScalarShiftRightImmediate;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 63			; 0000003fH

; 362  :           }
; 363  :           else

	jmp	SHORT $LN167@DecodeInst@2
$LN168@DecodeInst@2:

; 364  :           {
; 365  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ADDScalarShiftLeftImmediate;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+128], 64			; 00000040H

; 366  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = -((int32)(entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)]));

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+140]
	neg	eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+140], eax
$LN167@DecodeInst@2:

; 367  :           }
; 368  :           return;

	jmp	$LN181@DecodeInst@2
$LN166@DecodeInst@2:

; 369  :         case 0x06:
; 370  :           //add_sv Vi, Vj, Vk
; 371  :           entry->packetInfo |= addsvFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 372  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ADD_SV;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 59			; 0000003bH

; 373  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000 & 0x1C;

	mov	eax, DWORD PTR _field_3E00000$[ebp]
	and	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 374  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000 & 0x1C;

	mov	edx, DWORD PTR _field_1F0000$[ebp]
	and	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+140], edx

; 375  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F & 0x1C;

	mov	ecx, DWORD PTR _field_1F$[ebp]
	and	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+144], ecx

; 376  :           entry->scalarInputDependencies[SLOT_ALU] = VECTOR_REG_DEPENDENCY_MASK(field_3E00000) | VECTOR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 15					; 0000000fH
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 377  :           entry->scalarOutputDependencies[SLOT_ALU] = VECTOR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 15					; 0000000fH
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 378  :           return;

	jmp	$LN181@DecodeInst@2
$LN165@DecodeInst@2:

; 379  :         case 0x07:
; 380  :           //add_p Vi, Vj, Vk
; 381  :           entry->packetInfo |= addpFlags;          

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+24], eax

; 382  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ADD_P;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+128], 57			; 00000039H

; 383  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000 & 0x1C;

	mov	edx, DWORD PTR _field_3E00000$[ebp]
	and	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+136], edx

; 384  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000 & 0x1C;

	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	and	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+140], ecx

; 385  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F & 0x1C;

	mov	eax, DWORD PTR _field_1F$[ebp]
	and	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+144], eax

; 386  :           entry->scalarInputDependencies[SLOT_ALU] = PIXEL_REG_DEPENDENCY_MASK(field_3E00000) | PIXEL_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 7
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 7
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 387  :           entry->scalarOutputDependencies[SLOT_ALU] = PIXEL_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 7
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 388  :           return;

	jmp	$LN181@DecodeInst@2
$LN176@DecodeInst@2:

; 389  :       }
; 390  :       return;

	jmp	$LN181@DecodeInst@2
$LN164@DecodeInst@2:

; 391  :     case 0x01:
; 392  :       //sub
; 393  :       switch(*(iPtr + 3) >> 5)

	mov	ecx, DWORD PTR _iPtr$[ebp]
	movzx	edx, BYTE PTR [ecx+3]
	sar	edx, 5
	mov	DWORD PTR tv282[ebp], edx
	cmp	DWORD PTR tv282[ebp], 7
	ja	$LN162@DecodeInst@2
	mov	eax, DWORD PTR tv282[ebp]
	jmp	DWORD PTR $LN185@DecodeInst@2[eax*4]
$LN161@DecodeInst@2:

; 394  :       {
; 395  :         case 0x00:
; 396  :           //sub Si, Sj, Sk
; 397  :           entry->packetInfo |= subScalarFlags;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+24], eax

; 398  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUBScalar;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+128], 67			; 00000043H

; 399  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [edx+136], eax

; 400  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+140], edx

; 401  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [eax+144], ecx

; 402  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 403  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 404  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 405  :           return;

	jmp	$LN181@DecodeInst@2
$LN160@DecodeInst@2:

; 406  :         case 0x01:
; 407  :           //sub #nnnn, Sj, Sk
; 408  :           entry->packetInfo |= subImmediateFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 409  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUBImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 65			; 00000041H

; 410  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = ((*immExt << 5) | field_3E00000);

	mov	eax, DWORD PTR _immExt$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 5
	or	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+136], ecx

; 411  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 412  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+144], eax

; 413  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 414  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 415  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 416  :           return;

	jmp	$LN181@DecodeInst@2
$LN159@DecodeInst@2:

; 417  :         case 0x02:
; 418  :           //sub #nn, Sk
; 419  :           entry->packetInfo |= subImmediateFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 420  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUBImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 65			; 00000041H

; 421  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = ((field_1F << 5) | field_3E00000);

	mov	eax, DWORD PTR _field_1F$[ebp]
	shl	eax, 5
	or	eax, DWORD PTR _field_3E00000$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 422  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 423  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 424  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 425  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 426  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 427  :           return;

	jmp	$LN181@DecodeInst@2
$LN158@DecodeInst@2:

; 428  :         case 0x03:
; 429  :           //sub #n, >>#m, Sk
; 430  :           entry->packetInfo |= subImmediateFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 431  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUBImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 65			; 00000041H

; 432  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 433  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 434  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 435  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 436  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 437  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 438  :           if(field_1F)

	cmp	DWORD PTR _field_1F$[ebp], 0
	je	SHORT $LN157@DecodeInst@2

; 439  :           {
; 440  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] <<= (32 - field_1F);

	mov	ecx, 32					; 00000020H
	sub	ecx, DWORD PTR _field_1F$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+136]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax
$LN157@DecodeInst@2:

; 441  :           }
; 442  :           return;

	jmp	$LN181@DecodeInst@2
$LN156@DecodeInst@2:

; 443  :         case 0x04:
; 444  :           //sub Si, #nnnnn, Sk
; 445  :           entry->packetInfo |= subImmediateReverseFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 446  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUBImmediateReverse;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 66			; 00000042H

; 447  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 448  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = (*immExt << 5) | field_1F0000;

	mov	edx, DWORD PTR _immExt$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 5
	or	eax, DWORD PTR _field_1F0000$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+140], eax

; 449  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+144], eax

; 450  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 451  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 452  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 453  :           return;

	jmp	$LN181@DecodeInst@2
$LN155@DecodeInst@2:

; 454  :         case 0x05:
; 455  :           //sub Si, >>#m, Sk
; 456  :           entry->packetInfo |= subFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 457  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUBImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 65			; 00000041H

; 458  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 459  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = ((int32)(field_1F << 27)) >> 27;;

	mov	edx, DWORD PTR _field_1F$[ebp]
	shl	edx, 27					; 0000001bH
	sar	edx, 27					; 0000001bH
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+140], edx

; 460  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 461  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 462  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 463  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 464  :           if(((int32)entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)]) >= 0)

	mov	edx, DWORD PTR _entry$[ebp]
	cmp	DWORD PTR [edx+140], 0
	jl	SHORT $LN154@DecodeInst@2

; 465  :           {
; 466  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUBScalarShiftRightImmediate;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 68			; 00000044H

; 467  :           }
; 468  :           else

	jmp	SHORT $LN153@DecodeInst@2
$LN154@DecodeInst@2:

; 469  :           {
; 470  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUBScalarShiftLeftImmediate;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+128], 69			; 00000045H

; 471  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = -((int32)(entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)]));

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+140]
	neg	eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+140], eax
$LN153@DecodeInst@2:

; 472  :           }
; 473  :           return;

	jmp	$LN181@DecodeInst@2
$LN152@DecodeInst@2:

; 474  :         case 0x06:
; 475  :           //sub_sv Vi, Vj, Vk
; 476  :           entry->packetInfo |= subsvFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 477  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUB_SV;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 60			; 0000003cH

; 478  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000 & 0x1C;

	mov	eax, DWORD PTR _field_3E00000$[ebp]
	and	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 479  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000 & 0x1C;

	mov	edx, DWORD PTR _field_1F0000$[ebp]
	and	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+140], edx

; 480  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F & 0x1C;

	mov	ecx, DWORD PTR _field_1F$[ebp]
	and	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+144], ecx

; 481  :           entry->scalarInputDependencies[SLOT_ALU] = VECTOR_REG_DEPENDENCY_MASK(field_3E00000) | VECTOR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 15					; 0000000fH
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 482  :           entry->scalarOutputDependencies[SLOT_ALU] = VECTOR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 15					; 0000000fH
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 483  :           return;

	jmp	$LN181@DecodeInst@2
$LN151@DecodeInst@2:

; 484  :         case 0x07:
; 485  :           //sub_p Vi, Vj, Vk
; 486  :           entry->packetInfo |= subpFlags;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+24], eax

; 487  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUB_P;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+128], 58			; 0000003aH

; 488  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000 & 0x1C;

	mov	edx, DWORD PTR _field_3E00000$[ebp]
	and	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+136], edx

; 489  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000 & 0x1C;

	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	and	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+140], ecx

; 490  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F & 0x1C;

	mov	eax, DWORD PTR _field_1F$[ebp]
	and	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+144], eax

; 491  :           entry->scalarInputDependencies[SLOT_ALU] = PIXEL_REG_DEPENDENCY_MASK(field_3E00000) | PIXEL_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 7
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 7
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 492  :           entry->scalarOutputDependencies[SLOT_ALU] = PIXEL_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 7
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 493  :           return;

	jmp	$LN181@DecodeInst@2
$LN162@DecodeInst@2:

; 494  :       }
; 495  :       return;

	jmp	$LN181@DecodeInst@2
$LN150@DecodeInst@2:

; 496  :     case 0x02:
; 497  :       //cmp
; 498  :       entry->packetInfo |= cmpFlags;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+24], eax

; 499  : 
; 500  :       switch(*(iPtr + 3) >> 5)

	mov	ecx, DWORD PTR _iPtr$[ebp]
	movzx	edx, BYTE PTR [ecx+3]
	sar	edx, 5
	mov	DWORD PTR tv469[ebp], edx
	mov	eax, DWORD PTR tv469[ebp]
	sub	eax, 2
	mov	DWORD PTR tv469[ebp], eax
	cmp	DWORD PTR tv469[ebp], 5
	ja	$LN148@DecodeInst@2
	mov	ecx, DWORD PTR tv469[ebp]
	jmp	DWORD PTR $LN186@DecodeInst@2[ecx*4]

; 501  :       {
; 502  :         case 0x00:
; 503  :           //unused
; 504  :           break;

	jmp	$LN148@DecodeInst@2

; 505  :         case 0x01:
; 506  :           //unused
; 507  :           break;

	jmp	$LN148@DecodeInst@2
$LN145@DecodeInst@2:

; 508  :         case 0x02:
; 509  :           //cmp #nn, Sq
; 510  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_CMPImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 70			; 00000046H

; 511  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = ((field_1F << 5) | field_3E00000);

	mov	eax, DWORD PTR _field_1F$[ebp]
	shl	eax, 5
	or	eax, DWORD PTR _field_3E00000$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 512  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 513  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 514  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 515  :           return;

	jmp	$LN181@DecodeInst@2
$LN144@DecodeInst@2:

; 516  :         case 0x03:
; 517  :           //cmp #n, >>#m, Sq
; 518  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_CMPImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 70			; 00000046H

; 519  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 520  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 521  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 522  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 523  :           if(field_1F)

	cmp	DWORD PTR _field_1F$[ebp], 0
	je	SHORT $LN143@DecodeInst@2

; 524  :           {
; 525  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] <<= (32 - field_1F);

	mov	ecx, 32					; 00000020H
	sub	ecx, DWORD PTR _field_1F$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+136]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax
$LN143@DecodeInst@2:

; 526  :           }
; 527  :           return;

	jmp	$LN181@DecodeInst@2
$LN142@DecodeInst@2:

; 528  :         case 0x04:
; 529  :           //cmp Si, #nnnn
; 530  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_CMPImmediateReverse;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 71			; 00000047H

; 531  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 532  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = (*immExt << 5) | field_1F0000;

	mov	edx, DWORD PTR _immExt$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 5
	or	eax, DWORD PTR _field_1F0000$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+140], eax

; 533  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 534  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 535  :           return;

	jmp	$LN181@DecodeInst@2
$LN141@DecodeInst@2:

; 536  :         case 0x05:
; 537  :           //cmp Si, >>#m, Sk
; 538  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_CMPImmediateReverse;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 71			; 00000047H

; 539  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 540  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = ((int32)(field_1F << 27)) >> 27;

	mov	edx, DWORD PTR _field_1F$[ebp]
	shl	edx, 27					; 0000001bH
	sar	edx, 27					; 0000001bH
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+140], edx

; 541  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 542  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 543  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 491520		; 00078000H

; 544  :           if(((int32)entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)]) >= 0)

	mov	eax, DWORD PTR _entry$[ebp]
	cmp	DWORD PTR [eax+140], 0
	jl	SHORT $LN140@DecodeInst@2

; 545  :           {
; 546  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_CMPScalarShiftRightImmediate;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+128], 73			; 00000049H

; 547  :           }
; 548  :           else

	jmp	SHORT $LN139@DecodeInst@2
$LN140@DecodeInst@2:

; 549  :           {
; 550  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_CMPScalarShiftLeftImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 74			; 0000004aH

; 551  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = -((int32)(entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)]));

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	neg	ecx
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+140], ecx
$LN139@DecodeInst@2:

; 552  :           }
; 553  :           return;

	jmp	$LN181@DecodeInst@2
$LN138@DecodeInst@2:

; 554  :         case 0x06:
; 555  :         case 0x07:
; 556  :           //unused
; 557  :           return;

	jmp	$LN181@DecodeInst@2
$LN148@DecodeInst@2:

; 558  :       }
; 559  :       return;

	jmp	$LN181@DecodeInst@2
$LN137@DecodeInst@2:

; 560  :     case 0x03:
; 561  :       //and
; 562  :       entry->packetInfo |= andFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx

; 563  : 
; 564  :       switch(*(iPtr + 3) >> 5)

	mov	eax, DWORD PTR _iPtr$[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	sar	ecx, 5
	mov	DWORD PTR tv549[ebp], ecx
	cmp	DWORD PTR tv549[ebp], 7
	ja	$LN135@DecodeInst@2
	mov	edx, DWORD PTR tv549[ebp]
	jmp	DWORD PTR $LN187@DecodeInst@2[edx*4]
$LN134@DecodeInst@2:

; 565  :       {
; 566  :         case 0x00:
; 567  :           //and Si, Sj, Sk
; 568  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ANDScalar;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 76			; 0000004cH

; 569  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [ecx+136], edx

; 570  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 571  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+144], eax

; 572  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 573  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 574  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 575  :           return;

	jmp	$LN181@DecodeInst@2
$LN133@DecodeInst@2:

; 576  :         case 0x01:
; 577  :           //and #n, Sj, Sk
; 578  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ANDImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 75			; 0000004bH

; 579  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 580  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+144], eax

; 581  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 582  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 583  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 584  :           if(*immExt == 0)

	mov	edx, DWORD PTR _immExt$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN132@DecodeInst@2

; 585  :           {
; 586  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = ((int32)(field_3E00000 << 27)) >> 27; //#n

	mov	eax, DWORD PTR _field_3E00000$[ebp]
	shl	eax, 27					; 0000001bH
	sar	eax, 27					; 0000001bH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 587  :           }
; 588  :           else

	jmp	SHORT $LN131@DecodeInst@2
$LN132@DecodeInst@2:

; 589  :           {
; 590  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (*immExt << 5) | field_3E00000;

	mov	edx, DWORD PTR _immExt$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 5
	or	eax, DWORD PTR _field_3E00000$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax
$LN131@DecodeInst@2:

; 591  :           }
; 592  :           return;

	jmp	$LN181@DecodeInst@2
$LN130@DecodeInst@2:

; 593  :         case 0x02:
; 594  :           //and #n, <>#m, Sk
; 595  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ANDImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 75			; 0000004bH

; 596  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = ((int32)(field_3E00000 << 27)) >> 27; //#n;

	mov	eax, DWORD PTR _field_3E00000$[ebp]
	shl	eax, 27					; 0000001bH
	sar	eax, 27					; 0000001bH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 597  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 598  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 599  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 600  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 601  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 602  :           if((field_1F & 0x10) == 0)

	mov	edx, DWORD PTR _field_1F$[ebp]
	and	edx, 16					; 00000010H
	jne	SHORT $LN129@DecodeInst@2

; 603  :           {
; 604  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = _lrotr(entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)], field_1F);

	mov	eax, DWORD PTR _field_1F$[ebp]
	push	eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	call	__lrotr
	add	esp, 8
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 605  :           }
; 606  :           else

	jmp	SHORT $LN128@DecodeInst@2
$LN129@DecodeInst@2:

; 607  :           {
; 608  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = _lrotl(entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)], 32 - field_1F);

	mov	edx, 32					; 00000020H
	sub	edx, DWORD PTR _field_1F$[ebp]
	push	edx
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	push	ecx
	call	__lrotl
	add	esp, 8
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+136], eax
$LN128@DecodeInst@2:

; 609  :           }
; 610  :           return;

	jmp	$LN181@DecodeInst@2
$LN127@DecodeInst@2:

; 611  :         case 0x03:
; 612  :           //and #n, >>Sj, Sk
; 613  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ANDImmediateShiftScalar;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 77			; 0000004dH

; 614  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+140], edx

; 615  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+144], ecx

; 616  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 617  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 618  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 619  :           if(*immExt)

	mov	edx, DWORD PTR _immExt$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN126@DecodeInst@2

; 620  :           {
; 621  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (*immExt << 5) | field_1F;

	mov	eax, DWORD PTR _immExt$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 5
	or	ecx, DWORD PTR _field_1F$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+136], ecx

; 622  :           }
; 623  :           else

	jmp	SHORT $LN125@DecodeInst@2
$LN126@DecodeInst@2:

; 624  :           {
; 625  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = ((int32)(field_1F << 27)) >> 27;

	mov	eax, DWORD PTR _field_1F$[ebp]
	shl	eax, 27					; 0000001bH
	sar	eax, 27					; 0000001bH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax
$LN125@DecodeInst@2:

; 626  :           }
; 627  :           return;

	jmp	$LN181@DecodeInst@2
$LN124@DecodeInst@2:

; 628  :         case 0x04:
; 629  :           //and Si, >>#m, Sk
; 630  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [edx+136], eax

; 631  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = ((int32)(field_1F << 27)) >> 27;;

	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	ecx, 27					; 0000001bH
	sar	ecx, 27					; 0000001bH
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+140], ecx

; 632  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+144], ecx

; 633  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 634  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 635  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 636  :           if(((int32)entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)]) >= 0)

	mov	edx, DWORD PTR _entry$[ebp]
	cmp	DWORD PTR [edx+140], 0
	jl	SHORT $LN123@DecodeInst@2

; 637  :           {
; 638  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ANDScalarShiftRightImmediate;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 78			; 0000004eH

; 639  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] &= 0x3FUL;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+140]
	and	edx, 63					; 0000003fH
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+140], edx

; 640  :           }
; 641  :           else

	jmp	SHORT $LN122@DecodeInst@2
$LN123@DecodeInst@2:

; 642  :           {
; 643  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ANDScalarShiftLeftImmediate;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+128], 79			; 0000004fH

; 644  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = -((int32)(entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)])) & 0x3FUL;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+140]
	neg	eax
	and	eax, 63					; 0000003fH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+140], eax
$LN122@DecodeInst@2:

; 645  :           }
; 646  :           return;

	jmp	$LN181@DecodeInst@2
$LN121@DecodeInst@2:

; 647  :         case 0x05:
; 648  :           //and Si, >>Sj, Sk
; 649  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ANDScalarShiftScalar;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 80			; 00000050H

; 650  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 651  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 652  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 653  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000) | SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 654  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 655  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 656  :           return;

	jmp	$LN181@DecodeInst@2
$LN120@DecodeInst@2:

; 657  :         case 0x06:
; 658  :           //and Si, <>Sj, Sk
; 659  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ANDScalarRotateScalar;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 81			; 00000051H

; 660  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 661  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 662  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 663  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000) | SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 664  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 665  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 666  :           return;

	jmp	$LN181@DecodeInst@2
$LN119@DecodeInst@2:

; 667  :         case 0x07:
; 668  :           //unused
; 669  :           return;

	jmp	$LN181@DecodeInst@2
$LN135@DecodeInst@2:

; 670  :       }
; 671  :       break;

	jmp	$LN181@DecodeInst@2
$LN118@DecodeInst@2:

; 672  :     case 0x04:
; 673  :       //ftst
; 674  :       entry->packetInfo |= ftstFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 675  : 
; 676  :       switch(*(iPtr + 3) >> 5)

	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+3]
	sar	eax, 5
	mov	DWORD PTR tv734[ebp], eax
	cmp	DWORD PTR tv734[ebp], 7
	ja	$LN116@DecodeInst@2
	mov	ecx, DWORD PTR tv734[ebp]
	jmp	DWORD PTR $LN188@DecodeInst@2[ecx*4]
$LN115@DecodeInst@2:

; 677  :       {
; 678  :         case 0x00:
; 679  :           //ftst Si, Sj
; 680  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_FTSTScalar;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 83			; 00000053H

; 681  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 682  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 683  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 684  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 425984		; 00068000H

; 685  :           return;

	jmp	$LN181@DecodeInst@2
$LN114@DecodeInst@2:

; 686  :         case 0x01:
; 687  :           //ftst #n, Sj, Sk
; 688  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_FTSTImmediate;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 82			; 00000052H

; 689  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+140], edx

; 690  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [eax+144], ecx

; 691  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 692  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 425984		; 00068000H

; 693  :           if(*immExt == 0)

	mov	eax, DWORD PTR _immExt$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN113@DecodeInst@2

; 694  :           {
; 695  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = ((int32)(field_3E00000 << 27)) >> 27; //#n

	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	ecx, 27					; 0000001bH
	sar	ecx, 27					; 0000001bH
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+136], ecx

; 696  :           }
; 697  :           else

	jmp	SHORT $LN112@DecodeInst@2
$LN113@DecodeInst@2:

; 698  :           {
; 699  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (*immExt << 5) | field_3E00000;

	mov	eax, DWORD PTR _immExt$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 5
	or	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+136], ecx
$LN112@DecodeInst@2:

; 700  :           }
; 701  :           return;

	jmp	$LN181@DecodeInst@2
$LN111@DecodeInst@2:

; 702  :         case 0x02:
; 703  :           //ftst #n, <>#m, Sk
; 704  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_FTSTImmediate;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 82			; 00000052H

; 705  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = ((int32)(field_3E00000 << 27)) >> 27; //#n

	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	ecx, 27					; 0000001bH
	sar	ecx, 27					; 0000001bH
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+136], ecx

; 706  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 707  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+144], eax

; 708  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 709  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 710  :           if((field_1F & 0x10) == 0)

	mov	edx, DWORD PTR _field_1F$[ebp]
	and	edx, 16					; 00000010H
	jne	SHORT $LN110@DecodeInst@2

; 711  :           {
; 712  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = _lrotr(entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)], field_1F);

	mov	eax, DWORD PTR _field_1F$[ebp]
	push	eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	call	__lrotr
	add	esp, 8
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 713  :           }
; 714  :           else

	jmp	SHORT $LN109@DecodeInst@2
$LN110@DecodeInst@2:

; 715  :           {
; 716  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = _lrotl(entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)], 32 - field_1F);

	mov	edx, 32					; 00000020H
	sub	edx, DWORD PTR _field_1F$[ebp]
	push	edx
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	push	ecx
	call	__lrotl
	add	esp, 8
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+136], eax
$LN109@DecodeInst@2:

; 717  :           }
; 718  :           return;

	jmp	$LN181@DecodeInst@2
$LN108@DecodeInst@2:

; 719  :         case 0x03:
; 720  :           //ftst #n, >>Sj, Sk
; 721  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_FTSTImmediateShiftScalar;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 84			; 00000054H

; 722  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000; //>>Sj

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+140], edx

; 723  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_3E00000; //Sk

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+144], ecx

; 724  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 725  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 425984		; 00068000H

; 726  :           if(*immExt)

	mov	eax, DWORD PTR _immExt$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN107@DecodeInst@2

; 727  :           {
; 728  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (*immExt << 5) | field_1F;

	mov	ecx, DWORD PTR _immExt$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 5
	or	edx, DWORD PTR _field_1F$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+136], edx

; 729  :           }
; 730  :           else

	jmp	SHORT $LN106@DecodeInst@2
$LN107@DecodeInst@2:

; 731  :           {
; 732  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = ((int32)(field_1F << 27)) >> 27;

	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	ecx, 27					; 0000001bH
	sar	ecx, 27					; 0000001bH
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+136], ecx
$LN106@DecodeInst@2:

; 733  :           }
; 734  :           return;

	jmp	$LN181@DecodeInst@2
$LN105@DecodeInst@2:

; 735  :         case 0x04:
; 736  :           //ftst Si, >>#m, Sk
; 737  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000; //Si

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 738  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = ((int32)(field_1F << 27)) >> 27;  //>>#m

	mov	edx, DWORD PTR _field_1F$[ebp]
	shl	edx, 27					; 0000001bH
	sar	edx, 27					; 0000001bH
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+140], edx

; 739  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000; //Sk

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 740  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 741  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 425984		; 00068000H

; 742  :           if(((int32)entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)]) >= 0)

	mov	eax, DWORD PTR _entry$[ebp]
	cmp	DWORD PTR [eax+140], 0
	jl	SHORT $LN104@DecodeInst@2

; 743  :           {
; 744  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_FTSTScalarShiftRightImmediate;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+128], 85			; 00000055H

; 745  :           }
; 746  :           else

	jmp	SHORT $LN103@DecodeInst@2
$LN104@DecodeInst@2:

; 747  :           {
; 748  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_FTSTScalarShiftLeftImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 86			; 00000056H

; 749  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = -((int32)(entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)])) & 0x3FUL;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	neg	ecx
	and	ecx, 63					; 0000003fH
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+140], ecx
$LN103@DecodeInst@2:

; 750  :           }
; 751  :           return;

	jmp	$LN181@DecodeInst@2
$LN102@DecodeInst@2:

; 752  :         case 0x05:
; 753  :           //ftst Si, >>Sj, Sk
; 754  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_FTSTScalarShiftScalar;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 87			; 00000057H

; 755  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000; //Si

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [ecx+136], edx

; 756  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000; //>>Sj

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 757  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F; //Sk

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+144], eax

; 758  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000) | SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 759  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 425984		; 00068000H

; 760  :           return;

	jmp	$LN181@DecodeInst@2
$LN101@DecodeInst@2:

; 761  :         case 0x06:
; 762  :           //ftst Si, <>Sj, Sk
; 763  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_FTSTScalarRotateScalar;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 88			; 00000058H

; 764  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000; //Si

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [ecx+136], edx

; 765  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000; //<>Sj

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 766  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F; //Sk

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+144], eax

; 767  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000) | SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 768  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 425984		; 00068000H

; 769  :           return;

	jmp	$LN181@DecodeInst@2
$LN100@DecodeInst@2:

; 770  :         case 0x07:
; 771  :           //unused
; 772  :           return;

	jmp	$LN181@DecodeInst@2
$LN116@DecodeInst@2:

; 773  :       }
; 774  :       return;

	jmp	$LN181@DecodeInst@2
$LN99@DecodeInst@2:

; 775  :     case 0x05:
; 776  :       //or
; 777  : 
; 778  : 
; 779  :       switch(*(iPtr + 3) >> 5)

	mov	eax, DWORD PTR _iPtr$[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	sar	ecx, 5
	mov	DWORD PTR tv890[ebp], ecx
	cmp	DWORD PTR tv890[ebp], 7
	ja	$LN97@DecodeInst@2
	mov	edx, DWORD PTR tv890[ebp]
	jmp	DWORD PTR $LN189@DecodeInst@2[edx*4]
$LN96@DecodeInst@2:

; 780  :       {
; 781  :         case 0x00:
; 782  :           //or Si, Sj, Sk
; 783  :           entry->packetInfo |= orFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx

; 784  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ORScalar;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 90			; 0000005aH

; 785  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [ecx+136], edx

; 786  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 787  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+144], eax

; 788  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 789  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 790  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 791  :           return;

	jmp	$LN181@DecodeInst@2
$LN95@DecodeInst@2:

; 792  :         case 0x01:
; 793  :           //or #n, Sj, Sk
; 794  :           entry->packetInfo |= orImmediateFlags;            

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 795  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ORImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 89			; 00000059H

; 796  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 797  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+144], eax

; 798  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 799  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 800  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 801  :           if(*immExt == 0)

	mov	edx, DWORD PTR _immExt$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN94@DecodeInst@2

; 802  :           {
; 803  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = ((int32)(field_3E00000 << 27)) >> 27; //#n

	mov	eax, DWORD PTR _field_3E00000$[ebp]
	shl	eax, 27					; 0000001bH
	sar	eax, 27					; 0000001bH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 804  :           }
; 805  :           else

	jmp	SHORT $LN93@DecodeInst@2
$LN94@DecodeInst@2:

; 806  :           {
; 807  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (*immExt << 5) | field_3E00000;

	mov	edx, DWORD PTR _immExt$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 5
	or	eax, DWORD PTR _field_3E00000$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax
$LN93@DecodeInst@2:

; 808  :           }
; 809  :           return;

	jmp	$LN181@DecodeInst@2
$LN92@DecodeInst@2:

; 810  :         case 0x02:
; 811  :           //or #n, <>#m, Sk
; 812  :           entry->packetInfo |= orImmediateFlags;            

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 813  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ORImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 89			; 00000059H

; 814  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = ((int32)(field_3E00000 << 27)) >> 27; //#n;

	mov	eax, DWORD PTR _field_3E00000$[ebp]
	shl	eax, 27					; 0000001bH
	sar	eax, 27					; 0000001bH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 815  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 816  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 817  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 818  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 819  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 820  :           if((field_1F & 0x10) == 0)

	mov	edx, DWORD PTR _field_1F$[ebp]
	and	edx, 16					; 00000010H
	jne	SHORT $LN91@DecodeInst@2

; 821  :           {
; 822  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = _lrotr(entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)], field_1F);

	mov	eax, DWORD PTR _field_1F$[ebp]
	push	eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	call	__lrotr
	add	esp, 8
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 823  :           }
; 824  :           else

	jmp	SHORT $LN90@DecodeInst@2
$LN91@DecodeInst@2:

; 825  :           {
; 826  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = _lrotl(entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)], 32 - field_1F);

	mov	edx, 32					; 00000020H
	sub	edx, DWORD PTR _field_1F$[ebp]
	push	edx
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	push	ecx
	call	__lrotl
	add	esp, 8
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+136], eax
$LN90@DecodeInst@2:

; 827  :           }
; 828  :           return;

	jmp	$LN181@DecodeInst@2
$LN89@DecodeInst@2:

; 829  :         case 0x03:
; 830  :           //or #n, >>Sj, Sk
; 831  :           entry->packetInfo |= orImmediateFlags;            

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx

; 832  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ORImmediateShiftScalar;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 91			; 0000005bH

; 833  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000; //>>Sj

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+140], edx

; 834  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_3E00000; //Sk

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+144], ecx

; 835  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 836  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 837  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 838  :           if(*immExt)

	mov	edx, DWORD PTR _immExt$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN88@DecodeInst@2

; 839  :           {
; 840  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (*immExt << 5) | field_1F;

	mov	eax, DWORD PTR _immExt$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 5
	or	ecx, DWORD PTR _field_1F$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+136], ecx

; 841  :           }
; 842  :           else

	jmp	SHORT $LN87@DecodeInst@2
$LN88@DecodeInst@2:

; 843  :           {
; 844  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = ((int32)(field_1F << 27)) >> 27;

	mov	eax, DWORD PTR _field_1F$[ebp]
	shl	eax, 27					; 0000001bH
	sar	eax, 27					; 0000001bH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax
$LN87@DecodeInst@2:

; 845  :           }
; 846  :           return;

	jmp	$LN181@DecodeInst@2
$LN86@DecodeInst@2:

; 847  :         case 0x04:
; 848  :           //or Si, >>#m, Sk
; 849  :           entry->packetInfo |= orFlags;            

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 850  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [edx+136], eax

; 851  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = ((int32)(field_1F << 27)) >> 27;;

	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	ecx, 27					; 0000001bH
	sar	ecx, 27					; 0000001bH
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+140], ecx

; 852  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+144], ecx

; 853  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 854  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 855  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 856  :           if(((int32)entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)]) >= 0)

	mov	edx, DWORD PTR _entry$[ebp]
	cmp	DWORD PTR [edx+140], 0
	jl	SHORT $LN85@DecodeInst@2

; 857  :           {
; 858  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ORScalarShiftRightImmediate;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 92			; 0000005cH

; 859  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] &= 0x3FUL;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+140]
	and	edx, 63					; 0000003fH
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+140], edx

; 860  :           }
; 861  :           else

	jmp	SHORT $LN84@DecodeInst@2
$LN85@DecodeInst@2:

; 862  :           {
; 863  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ORScalarShiftLeftImmediate;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+128], 93			; 0000005dH

; 864  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = -((int32)(entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)])) & 0x3FUL;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+140]
	neg	eax
	and	eax, 63					; 0000003fH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+140], eax
$LN84@DecodeInst@2:

; 865  :           }
; 866  :           return;

	jmp	$LN181@DecodeInst@2
$LN83@DecodeInst@2:

; 867  :         case 0x05:
; 868  :           //or Si, >>Sj, Sk
; 869  :           entry->packetInfo |= orFlags;            

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 870  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ORScalarShiftScalar;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 94			; 0000005eH

; 871  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 872  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 873  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 874  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000) | SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 875  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 876  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 877  :           return;

	jmp	$LN181@DecodeInst@2
$LN82@DecodeInst@2:

; 878  :         case 0x06:
; 879  :           //or Si, <>Sj, Sk
; 880  :           entry->packetInfo |= orFlags;            

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 881  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ORScalarRotateScalar;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 95			; 0000005fH

; 882  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 883  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 884  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 885  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000) | SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 886  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 887  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 888  :           return;

	jmp	$LN181@DecodeInst@2
$LN81@DecodeInst@2:

; 889  :         case 0x07:
; 890  :           //unused
; 891  :           return;

	jmp	$LN181@DecodeInst@2
$LN97@DecodeInst@2:

; 892  :       }
; 893  :       return;

	jmp	$LN181@DecodeInst@2
$LN80@DecodeInst@2:

; 894  :     case 0x06:
; 895  : 
; 896  :       //eor
; 897  :       switch(*(iPtr + 3) >> 5)

	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+3]
	sar	eax, 5
	mov	DWORD PTR tv1087[ebp], eax
	cmp	DWORD PTR tv1087[ebp], 7
	ja	$LN78@DecodeInst@2
	mov	ecx, DWORD PTR tv1087[ebp]
	jmp	DWORD PTR $LN190@DecodeInst@2[ecx*4]
$LN77@DecodeInst@2:

; 898  :       {
; 899  :         case 0x00:
; 900  :           //eor Si, Sj, Sk
; 901  :           entry->packetInfo |= eorFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 902  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_EORScalar;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 97			; 00000061H

; 903  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 904  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 905  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 906  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 907  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 908  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 909  :           return;

	jmp	$LN181@DecodeInst@2
$LN76@DecodeInst@2:

; 910  :         case 0x01:
; 911  :           //eor #n, Sj, Sk
; 912  :           entry->packetInfo |= eorImmediateFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 913  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_EORImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 96			; 00000060H

; 914  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 915  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+144], eax

; 916  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 917  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 918  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 919  :           if(*immExt == 0)

	mov	edx, DWORD PTR _immExt$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN75@DecodeInst@2

; 920  :           {
; 921  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = ((int32)(field_3E00000 << 27)) >> 27; //#n

	mov	eax, DWORD PTR _field_3E00000$[ebp]
	shl	eax, 27					; 0000001bH
	sar	eax, 27					; 0000001bH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 922  :           }
; 923  :           else

	jmp	SHORT $LN74@DecodeInst@2
$LN75@DecodeInst@2:

; 924  :           {
; 925  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (*immExt << 5) | field_3E00000;

	mov	edx, DWORD PTR _immExt$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 5
	or	eax, DWORD PTR _field_3E00000$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax
$LN74@DecodeInst@2:

; 926  :           }
; 927  :           return;

	jmp	$LN181@DecodeInst@2
$LN73@DecodeInst@2:

; 928  :         case 0x02:
; 929  :           //eor #n, <>#m, Sk
; 930  :           entry->packetInfo |= eorImmediateFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 931  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_EORImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 96			; 00000060H

; 932  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = ((int32)(field_3E00000 << 27)) >> 27; //#n;

	mov	eax, DWORD PTR _field_3E00000$[ebp]
	shl	eax, 27					; 0000001bH
	sar	eax, 27					; 0000001bH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 933  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 934  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 935  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 936  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 937  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 938  :           if((field_1F & 0x10) == 0)

	mov	edx, DWORD PTR _field_1F$[ebp]
	and	edx, 16					; 00000010H
	jne	SHORT $LN72@DecodeInst@2

; 939  :           {
; 940  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = _lrotr(entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)], field_1F);

	mov	eax, DWORD PTR _field_1F$[ebp]
	push	eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	call	__lrotr
	add	esp, 8
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 941  :           }
; 942  :           else

	jmp	SHORT $LN71@DecodeInst@2
$LN72@DecodeInst@2:

; 943  :           {
; 944  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = _lrotl(entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)], 32 - field_1F);

	mov	edx, 32					; 00000020H
	sub	edx, DWORD PTR _field_1F$[ebp]
	push	edx
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	push	ecx
	call	__lrotl
	add	esp, 8
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+136], eax
$LN71@DecodeInst@2:

; 945  :           }
; 946  :           return;

	jmp	$LN181@DecodeInst@2
$LN70@DecodeInst@2:

; 947  :         case 0x03:
; 948  :           //eor #n, >>Sj, Sk
; 949  :           entry->packetInfo |= eorImmediateFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx

; 950  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_EORImmediateShiftScalar;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 98			; 00000062H

; 951  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000; //>>Sj

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+140], edx

; 952  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_3E00000; //Sk

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+144], ecx

; 953  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 954  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 955  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 956  :           if(*immExt)

	mov	edx, DWORD PTR _immExt$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN69@DecodeInst@2

; 957  :           {
; 958  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (*immExt << 5) | field_1F;

	mov	eax, DWORD PTR _immExt$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 5
	or	ecx, DWORD PTR _field_1F$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+136], ecx

; 959  :           }
; 960  :           else

	jmp	SHORT $LN68@DecodeInst@2
$LN69@DecodeInst@2:

; 961  :           {
; 962  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = ((int32)(field_1F << 27)) >> 27;

	mov	eax, DWORD PTR _field_1F$[ebp]
	shl	eax, 27					; 0000001bH
	sar	eax, 27					; 0000001bH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax
$LN68@DecodeInst@2:

; 963  :           }
; 964  :           return;

	jmp	$LN181@DecodeInst@2
$LN67@DecodeInst@2:

; 965  :         case 0x04:
; 966  :           //eor Si, >>#m, Sk
; 967  :           entry->packetInfo |= eorFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 968  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000; //Si

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [edx+136], eax

; 969  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = ((int32)(field_1F << 27)) >> 27;;

	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	ecx, 27					; 0000001bH
	sar	ecx, 27					; 0000001bH
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+140], ecx

; 970  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000; //Sk

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+144], ecx

; 971  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 972  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 973  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 974  :           if(((int32)entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)]) >= 0)

	mov	edx, DWORD PTR _entry$[ebp]
	cmp	DWORD PTR [edx+140], 0
	jl	SHORT $LN66@DecodeInst@2

; 975  :           {
; 976  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_EORScalarShiftRightImmediate;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 99			; 00000063H

; 977  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] &= 0x3FUL;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+140]
	and	edx, 63					; 0000003fH
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+140], edx

; 978  :           }
; 979  :           else

	jmp	SHORT $LN65@DecodeInst@2
$LN66@DecodeInst@2:

; 980  :           {
; 981  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_EORScalarShiftLeftImmediate;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+128], 100		; 00000064H

; 982  :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = -((int32)(entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)])) & 0x3FUL;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+140]
	neg	eax
	and	eax, 63					; 0000003fH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+140], eax
$LN65@DecodeInst@2:

; 983  :           }
; 984  :           return;

	jmp	$LN181@DecodeInst@2
$LN64@DecodeInst@2:

; 985  :         case 0x05:
; 986  :           //eor Si, >>Sj, Sk
; 987  :           entry->packetInfo |= eorFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 988  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_EORScalarShiftScalar;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 101		; 00000065H

; 989  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 990  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 991  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 992  :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000) | SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 993  :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 994  :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 995  :           return;

	jmp	$LN181@DecodeInst@2
$LN63@DecodeInst@2:

; 996  :         case 0x06:
; 997  :           //eor Si, <>Sj, Sk
; 998  :           entry->packetInfo |= eorFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 999  :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_EORScalarRotateScalar;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 102		; 00000066H

; 1000 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 1001 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 1002 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 1003 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000) | SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 1004 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1005 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 1006 :           return;

	jmp	$LN181@DecodeInst@2
$LN62@DecodeInst@2:

; 1007 :         case 0x07:
; 1008 :           //unused
; 1009 :           return;

	jmp	$LN181@DecodeInst@2
$LN78@DecodeInst@2:

; 1010 :       }
; 1011 :       return;

	jmp	$LN181@DecodeInst@2
$LN61@DecodeInst@2:

; 1012 :     case 0x07:
; 1013 :       //as,asl,asr,lsr,ls,rot
; 1014 :       switch(*(iPtr + 3) >> 5)

	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+3]
	sar	eax, 5
	mov	DWORD PTR tv1284[ebp], eax
	cmp	DWORD PTR tv1284[ebp], 7
	ja	$LN59@DecodeInst@2
	mov	ecx, DWORD PTR tv1284[ebp]
	jmp	DWORD PTR $LN191@DecodeInst@2[ecx*4]
$LN58@DecodeInst@2:

; 1015 :       {
; 1016 :         case 0x00:
; 1017 :           //as >>Sj, Si, Sk
; 1018 :           entry->packetInfo |= asFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 1019 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_AS;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 49			; 00000031H

; 1020 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_3E00000; //Si

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 1021 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_1F0000; //>>Sj

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+136], eax

; 1022 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;  // Sk

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 1023 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 1024 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1025 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 1026 :           return;

	jmp	$LN181@DecodeInst@2
$LN57@DecodeInst@2:

; 1027 :         case 0x01:
; 1028 :           //asl #m, Si, Sk
; 1029 :           entry->packetInfo |= aslFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 1030 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ASL;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 50			; 00000032H

; 1031 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_3E00000; //Si

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 1032 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = 32UL - field_1F; //#m

	mov	edx, 32					; 00000020H
	sub	edx, DWORD PTR _field_1F$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+136], edx

; 1033 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;  // Sk

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 1034 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 1035 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1036 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 1037 :           return;

	jmp	$LN181@DecodeInst@2
$LN56@DecodeInst@2:

; 1038 :         case 0x02:
; 1039 :           //asr #m, Si, Sk
; 1040 :           entry->packetInfo |= asrFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 1041 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ASR;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 51			; 00000033H

; 1042 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_3E00000; //Si

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 1043 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_1F; //>>#m

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+136], eax

; 1044 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;  // Sk

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 1045 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 1046 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1047 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 1048 :           return;

	jmp	$LN181@DecodeInst@2
$LN55@DecodeInst@2:

; 1049 :         case 0x03:
; 1050 :           //ls >>Sj, Si, Sk
; 1051 :           entry->packetInfo |= lsFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 1052 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_LS;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 52			; 00000034H

; 1053 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_3E00000; //Si

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 1054 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_1F0000; //>>Sj

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+136], eax

; 1055 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;  // Sk

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 1056 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 1057 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1058 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 1059 :           return;

	jmp	$LN181@DecodeInst@2
$LN54@DecodeInst@2:

; 1060 :         case 0x04:
; 1061 :           //lsr #m, Si, Sk
; 1062 :           entry->packetInfo |= lsrFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 1063 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_LSR;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 53			; 00000035H

; 1064 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_3E00000; //Si

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 1065 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_1F; //#m

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+136], eax

; 1066 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;  // Sk

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 1067 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 1068 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1069 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 1070 :           return;

	jmp	$LN181@DecodeInst@2
$LN53@DecodeInst@2:

; 1071 :         case 0x05:
; 1072 :           //rot <>Sj, Si, Sk
; 1073 :           entry->packetInfo |= rotFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 1074 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ROT;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 54			; 00000036H

; 1075 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_3E00000; //Si

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 1076 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_1F0000; //<>Sj

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+136], eax

; 1077 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;  // Sk

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 1078 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 1079 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1080 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 1081 :           return;

	jmp	$LN181@DecodeInst@2
$LN52@DecodeInst@2:

; 1082 :         case 0x06:
; 1083 :           //rot <>#m, Si, Sk:
; 1084 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ROT;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 54			; 00000036H

; 1085 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_3E00000; //Si

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 1086 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;  // Sk

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+144], eax

; 1087 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 1088 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1089 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 425984		; 00068000H

; 1090 :           if(field_1F & 0x10UL)

	mov	edx, DWORD PTR _field_1F$[ebp]
	and	edx, 16					; 00000010H
	je	SHORT $LN51@DecodeInst@2

; 1091 :           {
; 1092 :             entry->packetInfo |= rolFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx

; 1093 :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = 32 - field_1F;

	mov	eax, 32					; 00000020H
	sub	eax, DWORD PTR _field_1F$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 1094 :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ROL;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 55			; 00000037H

; 1095 :             return;

	jmp	$LN181@DecodeInst@2

; 1096 :           }
; 1097 :           else

	jmp	SHORT $LN50@DecodeInst@2
$LN51@DecodeInst@2:

; 1098 :           {
; 1099 :             entry->packetInfo |= rorFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx

; 1100 :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_1F;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 1101 :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ROR;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 56			; 00000038H
$LN50@DecodeInst@2:

; 1102 :           }
; 1103 :           return;

	jmp	$LN181@DecodeInst@2
$LN49@DecodeInst@2:

; 1104 :         case 0x07:
; 1105 :           //unused
; 1106 :           return;

	jmp	$LN181@DecodeInst@2
$LN59@DecodeInst@2:

; 1107 :       }
; 1108 :       return;

	jmp	$LN181@DecodeInst@2
$LN48@DecodeInst@2:

; 1109 :     case 0x08:
; 1110 :       //bits,butt,sat,msb
; 1111 :       switch(*(iPtr + 3) >> 5)

	mov	eax, DWORD PTR _iPtr$[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	sar	ecx, 5
	mov	DWORD PTR tv1435[ebp], ecx
	cmp	DWORD PTR tv1435[ebp], 7
	ja	$LN46@DecodeInst@2
	mov	edx, DWORD PTR tv1435[ebp]
	jmp	DWORD PTR $LN192@DecodeInst@2[edx*4]
$LN45@DecodeInst@2:

; 1112 :       {
; 1113 :         case 0x00:
; 1114 :           //bits #n, >>Si, Sk
; 1115 :           entry->packetInfo |= bitsFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx

; 1116 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_BITSScalar;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 42			; 0000002aH

; 1117 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_INFO)] = field_1F;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+132], edx

; 1118 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = 0xFFFFFFFFUL >> (31 - field_1F); // mask ($FFFFFFFF >> (31 - #n))

	mov	ecx, 31					; 0000001fH
	sub	ecx, DWORD PTR _field_1F$[ebp]
	or	eax, -1
	shr	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 1119 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000; // >>Si

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 1120 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_3E00000; //Sk

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 1121 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 1122 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1123 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 294912		; 00048000H

; 1124 :           return;

	jmp	$LN181@DecodeInst@2
$LN44@DecodeInst@2:

; 1125 :         case 0x01:
; 1126 :           //bits #n, >>#m, Sk
; 1127 :           entry->packetInfo |= bitsFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 1128 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_BITSImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 43			; 0000002bH

; 1129 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_INFO)] = field_1F;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [eax+132], ecx

; 1130 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = 0xFFFFFFFFUL >> (31 - field_1F); // mask ($FFFFFFFF >> (31 - #n))

	mov	ecx, 31					; 0000001fH
	sub	ecx, DWORD PTR _field_1F$[ebp]
	or	edx, -1
	shr	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+136], edx

; 1131 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000; // >>#m

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+140], edx

; 1132 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_3E00000; //Sk

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+144], ecx

; 1133 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 1134 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1135 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 294912		; 00048000H

; 1136 :           return;

	jmp	$LN181@DecodeInst@2
$LN43@DecodeInst@2:

; 1137 :         case 0x02:
; 1138 :           //butt Si, Sj, Sk
; 1139 :           entry->packetInfo |= buttFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 1140 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_BUTT;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 45			; 0000002dH

; 1141 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000; // Si

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 1142 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000; // Sj

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 1143 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F; //Sk

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 1144 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 1145 :           entry->scalarOutputDependencies[SLOT_ALU] = BUTTERFLY_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 3
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1146 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 491520		; 00078000H

; 1147 :           return;

	jmp	$LN181@DecodeInst@2
$LN42@DecodeInst@2:

; 1148 :         case 0x03:
; 1149 :           //sat #n, Si, Sk
; 1150 :           entry->packetInfo |= satFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 1151 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SAT;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 48			; 00000030H

; 1152 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000; //Si

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 1153 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F; // #n

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+140], eax

; 1154 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000; //Sk

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 1155 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 1156 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1157 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 294912		; 00048000H

; 1158 :           return;

	jmp	$LN181@DecodeInst@2
$LN41@DecodeInst@2:

; 1159 :         case 0x04:
; 1160 :         case 0x05:
; 1161 :         case 0x06:
; 1162 :         case 0x07:
; 1163 :           //unused
; 1164 :           return;

	jmp	$LN181@DecodeInst@2
$LN46@DecodeInst@2:

; 1165 :       }
; 1166 :       return;

	jmp	$LN181@DecodeInst@2
$LN40@DecodeInst@2:

; 1167 :     case 0x09:
; 1168 :       //msb Si, Sk
; 1169 :       entry->packetInfo |= msbFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 1170 :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_MSB;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 47			; 0000002fH

; 1171 :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_1F0000; //Si

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 1172 :       entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_3E00000; //Sk

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [edx+144], eax

; 1173 :       entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 1174 :       entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1175 :       entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NZ;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+256], 294912		; 00048000H

; 1176 :       return;

	jmp	$LN181@DecodeInst@2
$LN39@DecodeInst@2:

; 1177 :     case 0x0C:
; 1178 :       //addwc
; 1179 :       entry->packetInfo |= addwcFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx

; 1180 : 
; 1181 :       switch(*(iPtr + 3) >> 5)

	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+3]
	sar	eax, 5
	mov	DWORD PTR tv1542[ebp], eax
	cmp	DWORD PTR tv1542[ebp], 7
	ja	$LN37@DecodeInst@2
	mov	ecx, DWORD PTR tv1542[ebp]
	jmp	DWORD PTR $LN193@DecodeInst@2[ecx*4]
$LN36@DecodeInst@2:

; 1182 :       {
; 1183 :         case 0x00:
; 1184 :           //addwc Si, Sj, Sk
; 1185 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ADDWCScalar;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 103		; 00000067H

; 1186 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 1187 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 1188 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 1189 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 1190 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1191 :           entry->miscInputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_C;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+216], 65536		; 00010000H

; 1192 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 491520		; 00078000H

; 1193 :           return;

	jmp	$LN181@DecodeInst@2
$LN35@DecodeInst@2:

; 1194 :         case 0x01:
; 1195 :           //addwc #nnnn, Sj, Sk
; 1196 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ADDWCImmediate;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 104		; 00000068H

; 1197 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (*immExt << 5) | field_3E00000;

	mov	ecx, DWORD PTR _immExt$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 5
	or	edx, DWORD PTR _field_3E00000$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+136], edx

; 1198 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+140], edx

; 1199 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [eax+144], ecx

; 1200 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 1201 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1202 :           entry->miscInputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_C;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+216], 65536		; 00010000H

; 1203 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 491520		; 00078000H

; 1204 :           return;

	jmp	$LN181@DecodeInst@2
$LN34@DecodeInst@2:

; 1205 :         case 0x02:
; 1206 :           //addwc #nn, Sk
; 1207 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ADDWCImmediate;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 104		; 00000068H

; 1208 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (field_1F << 5) | field_3E00000;

	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	ecx, 5
	or	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+136], ecx

; 1209 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 1210 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+144], eax

; 1211 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 1212 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1213 :           entry->miscInputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_C;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+216], 65536		; 00010000H

; 1214 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 491520		; 00078000H

; 1215 :           return;

	jmp	$LN181@DecodeInst@2
$LN33@DecodeInst@2:

; 1216 :         case 0x03:
; 1217 :           //addwc #n, >>#m, Sk
; 1218 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ADDWCImmediate;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 104		; 00000068H

; 1219 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [ecx+136], edx

; 1220 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 1221 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+144], eax

; 1222 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 1223 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1224 :           entry->miscInputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_C;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+216], 65536		; 00010000H

; 1225 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 491520		; 00078000H

; 1226 :           if(field_1F)

	cmp	DWORD PTR _field_1F$[ebp], 0
	je	SHORT $LN32@DecodeInst@2

; 1227 :           {
; 1228 :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] >>= (32 - field_1F);

	mov	ecx, 32					; 00000020H
	sub	ecx, DWORD PTR _field_1F$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [eax+136]
	shr	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+136], edx
$LN32@DecodeInst@2:

; 1229 :           }
; 1230 :           return;

	jmp	$LN181@DecodeInst@2
$LN31@DecodeInst@2:

; 1231 :         case 0x04:
; 1232 :           //unused
; 1233 :           return;

	jmp	$LN181@DecodeInst@2
$LN30@DecodeInst@2:

; 1234 :         case 0x05:
; 1235 :           //addwc Si, >>#m, Sk
; 1236 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [ecx+136], edx

; 1237 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = ((int32)(field_1F << 27)) >> 27;;

	mov	eax, DWORD PTR _field_1F$[ebp]
	shl	eax, 27					; 0000001bH
	sar	eax, 27					; 0000001bH
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+140], eax

; 1238 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+144], eax

; 1239 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 1240 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1241 :           entry->miscInputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_C;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+216], 65536		; 00010000H

; 1242 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 491520		; 00078000H

; 1243 :           if(((int32)entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)]) >= 0)

	mov	eax, DWORD PTR _entry$[ebp]
	cmp	DWORD PTR [eax+140], 0
	jl	SHORT $LN29@DecodeInst@2

; 1244 :           {
; 1245 :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ADDWCScalarShiftRightImmediate;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+128], 105		; 00000069H

; 1246 :           }
; 1247 :           else

	jmp	SHORT $LN28@DecodeInst@2
$LN29@DecodeInst@2:

; 1248 :           {
; 1249 :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_ADDWCScalarShiftLeftImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 106		; 0000006aH

; 1250 :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = -((int32)(entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)]));

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	neg	ecx
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+140], ecx
$LN28@DecodeInst@2:

; 1251 :           }
; 1252 :           return;

	jmp	$LN181@DecodeInst@2
$LN27@DecodeInst@2:

; 1253 :         case 0x06:
; 1254 :         case 0x07:
; 1255 :           //unused
; 1256 :           return;

	jmp	$LN181@DecodeInst@2
$LN37@DecodeInst@2:

; 1257 :       }
; 1258 :       return;

	jmp	$LN181@DecodeInst@2
$LN26@DecodeInst@2:

; 1259 :     case 0x0D:
; 1260 :       //subwc
; 1261 :       entry->packetInfo |= subwcFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx

; 1262 : 
; 1263 :       switch(*(iPtr + 3) >> 5)

	mov	eax, DWORD PTR _iPtr$[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	sar	ecx, 5
	mov	DWORD PTR tv1665[ebp], ecx
	cmp	DWORD PTR tv1665[ebp], 7
	ja	$LN24@DecodeInst@2
	mov	edx, DWORD PTR tv1665[ebp]
	jmp	DWORD PTR $LN194@DecodeInst@2[edx*4]
$LN23@DecodeInst@2:

; 1264 :       {
; 1265 :         case 0x00:
; 1266 :           //subwc Si, Sj, Sk
; 1267 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUBWCScalar;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 107		; 0000006bH

; 1268 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [ecx+136], edx

; 1269 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 1270 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [edx+144], eax

; 1271 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 1272 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1273 :           entry->miscInputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_C;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+216], 65536		; 00010000H

; 1274 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 491520		; 00078000H

; 1275 :           return;

	jmp	$LN181@DecodeInst@2
$LN22@DecodeInst@2:

; 1276 :         case 0x01:
; 1277 :           //subwc #nnnn, Sj, Sk
; 1278 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUBWCImmediate;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 108		; 0000006cH

; 1279 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (*immExt << 5) | field_3E00000;

	mov	ecx, DWORD PTR _immExt$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 5
	or	edx, DWORD PTR _field_3E00000$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+136], edx

; 1280 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+140], edx

; 1281 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [eax+144], ecx

; 1282 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 1283 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1284 :           entry->miscInputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_C;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+216], 65536		; 00010000H

; 1285 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 491520		; 00078000H

; 1286 :           return;

	jmp	$LN181@DecodeInst@2
$LN21@DecodeInst@2:

; 1287 :         case 0x02:
; 1288 :           //subwc #nn, Sk
; 1289 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUBWCImmediate;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 108		; 0000006cH

; 1290 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (field_1F << 5) | field_3E00000;

	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	ecx, 5
	or	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+136], ecx

; 1291 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 1292 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+144], eax

; 1293 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 1294 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1295 :           entry->miscInputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_C;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+216], 65536		; 00010000H

; 1296 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 491520		; 00078000H

; 1297 :           return;

	jmp	$LN181@DecodeInst@2
$LN20@DecodeInst@2:

; 1298 :         case 0x03:
; 1299 :           //subwc #n, >>#m, Sk
; 1300 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUBWCImmediate;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 108		; 0000006cH

; 1301 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [ecx+136], edx

; 1302 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 1303 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+144], eax

; 1304 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 1305 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1306 :           entry->miscInputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_C;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+216], 65536		; 00010000H

; 1307 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 491520		; 00078000H

; 1308 :           if(field_1F)

	cmp	DWORD PTR _field_1F$[ebp], 0
	je	SHORT $LN19@DecodeInst@2

; 1309 :           {
; 1310 :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] >>= (32 - field_1F);

	mov	ecx, 32					; 00000020H
	sub	ecx, DWORD PTR _field_1F$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [eax+136]
	shr	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+136], edx
$LN19@DecodeInst@2:

; 1311 :           }
; 1312 :           return;

	jmp	$LN181@DecodeInst@2
$LN18@DecodeInst@2:

; 1313 :         case 0x04:
; 1314 :           //subwc Si, #nnnnn, Sk
; 1315 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUBWCImmediateReverse;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+128], 109		; 0000006dH

; 1316 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [edx+136], eax

; 1317 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = (*immExt << 5) | field_1F0000;

	mov	ecx, DWORD PTR _immExt$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 5
	or	edx, DWORD PTR _field_1F0000$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+140], edx

; 1318 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 1319 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 1320 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1321 :           entry->miscInputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_C;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+216], 65536		; 00010000H

; 1322 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 491520		; 00078000H

; 1323 :           return;

	jmp	$LN181@DecodeInst@2
$LN17@DecodeInst@2:

; 1324 :         case 0x05:
; 1325 :           //subwc Si, >>#m, Sk
; 1326 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+136], ecx

; 1327 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = ((int32)(field_1F << 27)) >> 27;;

	mov	edx, DWORD PTR _field_1F$[ebp]
	shl	edx, 27					; 0000001bH
	sar	edx, 27					; 0000001bH
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+140], edx

; 1328 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+144], edx

; 1329 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	or	eax, edx
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 1330 :           entry->scalarOutputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+236], edx

; 1331 :           entry->miscInputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_C;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+216], 65536		; 00010000H

; 1332 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 491520		; 00078000H

; 1333 :           if(((int32)entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)]) >= 0)

	mov	eax, DWORD PTR _entry$[ebp]
	cmp	DWORD PTR [eax+140], 0
	jl	SHORT $LN16@DecodeInst@2

; 1334 :           {
; 1335 :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUBWCScalarShiftRightImmediate;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+128], 110		; 0000006eH

; 1336 :           }
; 1337 :           else

	jmp	SHORT $LN15@DecodeInst@2
$LN16@DecodeInst@2:

; 1338 :           {
; 1339 :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_SUBWCScalarShiftLeftImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 111		; 0000006fH

; 1340 :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = -((int32)(entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)]));

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	neg	ecx
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+140], ecx
$LN15@DecodeInst@2:

; 1341 :           }
; 1342 :           return;

	jmp	$LN181@DecodeInst@2
$LN14@DecodeInst@2:

; 1343 :         case 0x06:
; 1344 :         case 0x07:
; 1345 :           //unused
; 1346 :           return;

	jmp	$LN181@DecodeInst@2
$LN24@DecodeInst@2:

; 1347 :       }
; 1348 :       return;

	jmp	$LN181@DecodeInst@2
$LN13@DecodeInst@2:

; 1349 :     case 0x0E:
; 1350 :       //cmpwc
; 1351 :       entry->packetInfo |= cmpwcFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx

; 1352 : 
; 1353 :       switch(*(iPtr + 3) >> 5)

	mov	eax, DWORD PTR _iPtr$[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	sar	ecx, 5
	mov	DWORD PTR tv1808[ebp], ecx
	cmp	DWORD PTR tv1808[ebp], 7
	ja	$LN181@DecodeInst@2
	mov	edx, DWORD PTR tv1808[ebp]
	jmp	DWORD PTR $LN195@DecodeInst@2[edx*4]
$LN10@DecodeInst@2:

; 1354 :       {
; 1355 :         case 0x00:
; 1356 :           //cmpwc Si, Sj
; 1357 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_CMPWCScalar;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 112		; 00000070H

; 1358 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [ecx+136], edx

; 1359 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 1360 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 1361 :           entry->miscInputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_C;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+216], 65536		; 00010000H

; 1362 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+256], 491520		; 00078000H

; 1363 :           return;

	jmp	$LN181@DecodeInst@2
$LN9@DecodeInst@2:

; 1364 :         case 0x01:
; 1365 :           //cmpwc #nnnn, Sj
; 1366 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_CMPWCImmediate;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+128], 113		; 00000071H

; 1367 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (*immExt << 5) | field_3E00000;

	mov	edx, DWORD PTR _immExt$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 5
	or	eax, DWORD PTR _field_3E00000$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+136], eax

; 1368 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [edx+140], eax

; 1369 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 1370 :           entry->miscInputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_C;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+216], 65536		; 00010000H

; 1371 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 491520		; 00078000H

; 1372 :           return;

	jmp	$LN181@DecodeInst@2
$LN8@DecodeInst@2:

; 1373 :         case 0x02:
; 1374 :           //cmpwc #nn, Sq (the SDK lists cmpwc #n, Sj too but its the same instruction)
; 1375 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_CMPWCImmediate;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 113		; 00000071H

; 1376 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = (field_1F << 5) | field_3E00000;

	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	ecx, 5
	or	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+136], ecx

; 1377 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 1378 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 1379 :           entry->miscInputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_C;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+216], 65536		; 00010000H

; 1380 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 491520		; 00078000H

; 1381 :           return;

	jmp	$LN181@DecodeInst@2
$LN7@DecodeInst@2:

; 1382 :         case 0x03:
; 1383 :           //cmpwc #n, >>#m, Sq
; 1384 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_CMPWCImmediate;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 113		; 00000071H

; 1385 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [ecx+136], edx

; 1386 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = field_1F0000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+140], ecx

; 1387 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+196], edx

; 1388 :           entry->miscInputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_C;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+216], 65536		; 00010000H

; 1389 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+256], 491520		; 00078000H

; 1390 :           if(field_1F)

	cmp	DWORD PTR _field_1F$[ebp], 0
	je	SHORT $LN6@DecodeInst@2

; 1391 :           {
; 1392 :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] >>= (32 - field_1F);

	mov	ecx, 32					; 00000020H
	sub	ecx, DWORD PTR _field_1F$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [eax+136]
	shr	edx, cl
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+136], edx
$LN6@DecodeInst@2:

; 1393 :           }
; 1394 :           return;

	jmp	$LN181@DecodeInst@2
$LN5@DecodeInst@2:

; 1395 :         case 0x04:
; 1396 :           //cmpwc Si, #nn or cmpwc Si, #nnnn
; 1397 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_CMPWCImmediateReverse;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+128], 114		; 00000072H

; 1398 :           entry->miscInputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_C;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+216], 65536		; 00010000H

; 1399 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+256], 491520		; 00078000H

; 1400 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [ecx+136], edx

; 1401 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = (*immExt << 5) | field_1F0000;

	mov	eax, DWORD PTR _immExt$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 5
	or	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+140], ecx

; 1402 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], eax

; 1403 :           return;

	jmp	$LN181@DecodeInst@2
$LN4@DecodeInst@2:

; 1404 :         case 0x05:
; 1405 :           //cmpwc Si, >>#m, Sq
; 1406 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC1)] = field_3E00000; //Si

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [edx+136], eax

; 1407 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = ((int32)(field_1F << 27)) >> 27; //#m

	mov	ecx, DWORD PTR _field_1F$[ebp]
	shl	ecx, 27					; 0000001bH
	sar	ecx, 27					; 0000001bH
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+140], ecx

; 1408 :           entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_DEST)] = field_1F0000; //Sq

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [eax+144], ecx

; 1409 :           entry->scalarInputDependencies[SLOT_ALU] = SCALAR_REG_DEPENDENCY_MASK(field_3E00000) | SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	edx, 1
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	shl	edx, cl
	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	or	edx, eax
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+196], edx

; 1410 :           entry->miscInputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_C;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+216], 65536		; 00010000H

; 1411 :           entry->miscOutputDependencies[SLOT_ALU] = DEPENDENCY_FLAG_NVCZ;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+256], 491520		; 00078000H

; 1412 :           if(((int32)entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)]) >= 0)

	mov	ecx, DWORD PTR _entry$[ebp]
	cmp	DWORD PTR [ecx+140], 0
	jl	SHORT $LN3@DecodeInst@2

; 1413 :           {
; 1414 :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_CMPWCScalarShiftRightImmediate;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+128], 115		; 00000073H

; 1415 :           }
; 1416 :           else

	jmp	SHORT $LN181@DecodeInst@2
$LN3@DecodeInst@2:

; 1417 :           {
; 1418 :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_HANDLER)] = Handler_CMPWCScalarShiftLeftImmediate;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+128], 116		; 00000074H

; 1419 :             entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)] = -((int32)(entry->nuances[FIXED_FIELD(SLOT_ALU,FIELD_ALU_SRC2)]));

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+140]
	neg	edx
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+140], edx
$LN181@DecodeInst@2:

; 1420 :           }
; 1421 :           return;
; 1422 :         case 0x06:
; 1423 :         case 0x07:
; 1424 :           //unused
; 1425 :           return;
; 1426 :       }
; 1427 :       return;
; 1428 :   }
; 1429 : }

	pop	edi
	add	esp, 68					; 00000044H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN183@DecodeInst@2:
	DD	$LN178@DecodeInst@2
	DD	$LN164@DecodeInst@2
	DD	$LN150@DecodeInst@2
	DD	$LN137@DecodeInst@2
	DD	$LN118@DecodeInst@2
	DD	$LN99@DecodeInst@2
	DD	$LN80@DecodeInst@2
	DD	$LN61@DecodeInst@2
	DD	$LN48@DecodeInst@2
	DD	$LN40@DecodeInst@2
	DD	$LN181@DecodeInst@2
	DD	$LN181@DecodeInst@2
	DD	$LN39@DecodeInst@2
	DD	$LN26@DecodeInst@2
	DD	$LN13@DecodeInst@2
$LN184@DecodeInst@2:
	DD	$LN175@DecodeInst@2
	DD	$LN174@DecodeInst@2
	DD	$LN173@DecodeInst@2
	DD	$LN172@DecodeInst@2
	DD	$LN170@DecodeInst@2
	DD	$LN169@DecodeInst@2
	DD	$LN166@DecodeInst@2
	DD	$LN165@DecodeInst@2
$LN185@DecodeInst@2:
	DD	$LN161@DecodeInst@2
	DD	$LN160@DecodeInst@2
	DD	$LN159@DecodeInst@2
	DD	$LN158@DecodeInst@2
	DD	$LN156@DecodeInst@2
	DD	$LN155@DecodeInst@2
	DD	$LN152@DecodeInst@2
	DD	$LN151@DecodeInst@2
$LN186@DecodeInst@2:
	DD	$LN145@DecodeInst@2
	DD	$LN144@DecodeInst@2
	DD	$LN142@DecodeInst@2
	DD	$LN141@DecodeInst@2
	DD	$LN138@DecodeInst@2
	DD	$LN138@DecodeInst@2
$LN187@DecodeInst@2:
	DD	$LN134@DecodeInst@2
	DD	$LN133@DecodeInst@2
	DD	$LN130@DecodeInst@2
	DD	$LN127@DecodeInst@2
	DD	$LN124@DecodeInst@2
	DD	$LN121@DecodeInst@2
	DD	$LN120@DecodeInst@2
	DD	$LN119@DecodeInst@2
$LN188@DecodeInst@2:
	DD	$LN115@DecodeInst@2
	DD	$LN114@DecodeInst@2
	DD	$LN111@DecodeInst@2
	DD	$LN108@DecodeInst@2
	DD	$LN105@DecodeInst@2
	DD	$LN102@DecodeInst@2
	DD	$LN101@DecodeInst@2
	DD	$LN100@DecodeInst@2
$LN189@DecodeInst@2:
	DD	$LN96@DecodeInst@2
	DD	$LN95@DecodeInst@2
	DD	$LN92@DecodeInst@2
	DD	$LN89@DecodeInst@2
	DD	$LN86@DecodeInst@2
	DD	$LN83@DecodeInst@2
	DD	$LN82@DecodeInst@2
	DD	$LN81@DecodeInst@2
$LN190@DecodeInst@2:
	DD	$LN77@DecodeInst@2
	DD	$LN76@DecodeInst@2
	DD	$LN73@DecodeInst@2
	DD	$LN70@DecodeInst@2
	DD	$LN67@DecodeInst@2
	DD	$LN64@DecodeInst@2
	DD	$LN63@DecodeInst@2
	DD	$LN62@DecodeInst@2
$LN191@DecodeInst@2:
	DD	$LN58@DecodeInst@2
	DD	$LN57@DecodeInst@2
	DD	$LN56@DecodeInst@2
	DD	$LN55@DecodeInst@2
	DD	$LN54@DecodeInst@2
	DD	$LN53@DecodeInst@2
	DD	$LN52@DecodeInst@2
	DD	$LN49@DecodeInst@2
$LN192@DecodeInst@2:
	DD	$LN45@DecodeInst@2
	DD	$LN44@DecodeInst@2
	DD	$LN43@DecodeInst@2
	DD	$LN42@DecodeInst@2
	DD	$LN41@DecodeInst@2
	DD	$LN41@DecodeInst@2
	DD	$LN41@DecodeInst@2
	DD	$LN41@DecodeInst@2
$LN193@DecodeInst@2:
	DD	$LN36@DecodeInst@2
	DD	$LN35@DecodeInst@2
	DD	$LN34@DecodeInst@2
	DD	$LN33@DecodeInst@2
	DD	$LN31@DecodeInst@2
	DD	$LN30@DecodeInst@2
	DD	$LN27@DecodeInst@2
	DD	$LN27@DecodeInst@2
$LN194@DecodeInst@2:
	DD	$LN23@DecodeInst@2
	DD	$LN22@DecodeInst@2
	DD	$LN21@DecodeInst@2
	DD	$LN20@DecodeInst@2
	DD	$LN18@DecodeInst@2
	DD	$LN17@DecodeInst@2
	DD	$LN14@DecodeInst@2
	DD	$LN14@DecodeInst@2
$LN195@DecodeInst@2:
	DD	$LN10@DecodeInst@2
	DD	$LN9@DecodeInst@2
	DD	$LN8@DecodeInst@2
	DD	$LN7@DecodeInst@2
	DD	$LN5@DecodeInst@2
	DD	$LN4@DecodeInst@2
	DD	$LN181@DecodeInst@2
	DD	$LN181@DecodeInst@2
?DecodeInstruction_ALU32@MPE@@QAEXPAEPAVInstructionCacheEntry@@PAI@Z ENDP ; MPE::DecodeInstruction_ALU32
_TEXT	ENDS
END
