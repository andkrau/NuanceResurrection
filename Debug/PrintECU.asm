; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	c:\NuanceExperimental\PrintECU.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG4431	DB	'ne', 00H
$SG4504	DB	00H
$SG4433	DB	'c0eq', 00H
$SG4514	DB	00H
$SG4524	DB	00H
$SG4534	DB	00H
$SG4435	DB	'c1eq', 00H
$SG4544	DB	00H
$SG4554	DB	00H
$SG4564	DB	00H
$SG4437	DB	'cc', 00H
$SG4574	DB	00H
$SG4439	DB	'eq ', 00H
$SG4441	DB	'cs', 00H
$SG4584	DB	00H
$SG4443	DB	'vc', 00H
$SG4594	DB	00H
$SG4445	DB	'vs', 00H
$SG4604	DB	00H
$SG4447	DB	'lt', 00H
$SG4614	DB	00H
$SG4449	DB	'mvc', 00H
$SG4451	DB	'mvs', 00H
$SG4453	DB	'hi', 00H
$SG4624	DB	00H
$SG4455	DB	'le', 00H
$SG4634	DB	00H
$SG4457	DB	'ls', 00H
$SG4644	DB	00H
$SG4459	DB	'pl', 00H
$SG4654	DB	00H
$SG4461	DB	'mi', 00H
$SG4664	DB	00H
$SG4463	DB	'gt', 00H
$SG4674	DB	00H
$SG4465	DB	't', 00H
$SG4684	DB	00H
$SG4694	DB	00H
$SG4467	DB	'modmi', 00H
$SG4704	DB	00H
$SG4714	DB	00H
$SG4469	DB	'modpl', 00H
$SG4724	DB	00H
$SG4734	DB	00H
$SG4471	DB	'ge', 00H
$SG4744	DB	00H
$SG4473	DB	'modge', 00H
$SG4754	DB	00H
	ORG $+1
$SG4475	DB	'modlt', 00H
	ORG $+2
$SG4477	DB	'???', 00H
$SG4479	DB	'c0ne', 00H
	ORG $+3
$SG4481	DB	'???', 00H
$SG4483	DB	'???', 00H
$SG4485	DB	'cf0lo', 00H
	ORG $+2
$SG4487	DB	'c1ne', 00H
	ORG $+3
$SG4489	DB	'cf0hi', 00H
	ORG $+2
$SG4491	DB	'cf1lo', 00H
	ORG $+2
$SG4493	DB	'cf1hi', 00H
	ORG $+2
$SG4495	DB	'???', 00H
$SG4502	DB	'ecu_nop', 00H
$SG4503	DB	0aH, 00H
	ORG $+2
$SG4505	DB	'%s%s', 00H
	ORG $+3
$SG4512	DB	'halt', 00H
	ORG $+3
$SG4513	DB	0aH, 00H
	ORG $+2
$SG4515	DB	'%s%s', 00H
	ORG $+3
$SG4522	DB	'bra $%8.8lX', 00H
$SG4523	DB	0aH, 00H
	ORG $+2
$SG4525	DB	'%s%s', 00H
	ORG $+3
$SG4532	DB	'bra $%8.8lX, nop', 00H
	ORG $+3
$SG4533	DB	0aH, 00H
	ORG $+2
$SG4535	DB	'%s%s', 00H
	ORG $+3
$SG4542	DB	'bra %s, $%8.8lX', 00H
$SG4543	DB	0aH, 00H
	ORG $+2
$SG4545	DB	'%s%s', 00H
	ORG $+3
$SG4552	DB	'bra %s, $%8.8lX, nop', 00H
	ORG $+3
$SG4553	DB	0aH, 00H
	ORG $+2
$SG4555	DB	'%s%s', 00H
	ORG $+3
$SG4562	DB	'jmp (r%lu)', 00H
	ORG $+1
$SG4563	DB	0aH, 00H
	ORG $+2
$SG4565	DB	'%s%s', 00H
	ORG $+3
$SG4572	DB	'jmp (r%lu), nop', 00H
$SG4573	DB	0aH, 00H
	ORG $+2
$SG4575	DB	'%s%s', 00H
	ORG $+3
$SG4582	DB	'jmp %s, (r%lu)', 00H
	ORG $+1
$SG4583	DB	0aH, 00H
	ORG $+2
$SG4585	DB	'%s%s', 00H
	ORG $+3
$SG4592	DB	'jmp %s, (r%lu), nop', 00H
$SG4593	DB	0aH, 00H
	ORG $+2
$SG4595	DB	'%s%s', 00H
	ORG $+3
$SG4602	DB	'jsr $%8.8lX [$%8.8lX,$%8.8lX]', 00H
	ORG $+2
$SG4603	DB	0aH, 00H
	ORG $+2
$SG4605	DB	'%s%s', 00H
	ORG $+3
$SG4612	DB	'jsr $%8.8lX, nop [$%8.8lX,$%8.8lX]', 00H
	ORG $+1
$SG4613	DB	0aH, 00H
	ORG $+2
$SG4615	DB	'%s%s', 00H
	ORG $+3
$SG4622	DB	'jsr %s, $%8.8lX [$%8.8lX,$%8.8lX]', 00H
	ORG $+2
$SG4623	DB	0aH, 00H
	ORG $+2
$SG4625	DB	'%s%s', 00H
	ORG $+3
$SG4632	DB	'jsr %s, $%8.8lX, nop [$%8.8lX,$%8.8lX]', 00H
	ORG $+1
$SG4633	DB	0aH, 00H
	ORG $+2
$SG4635	DB	'%s%s', 00H
	ORG $+3
$SG4642	DB	'jsr (r%lu) [$%8.8lX,$%8.8lX]', 00H
	ORG $+3
$SG4643	DB	0aH, 00H
	ORG $+2
$SG4645	DB	'%s%s', 00H
	ORG $+3
$SG4652	DB	'jsr (r%lu), nop [$%8.8lX,$%8.8lX]', 00H
	ORG $+2
$SG4653	DB	0aH, 00H
	ORG $+2
$SG4655	DB	'%s%s', 00H
	ORG $+3
$SG4662	DB	'jsr %s, (r%lu) [$%8.8lX,$%8.8lX]', 00H
	ORG $+3
$SG4663	DB	0aH, 00H
	ORG $+2
$SG4665	DB	'%s%s', 00H
	ORG $+3
$SG4672	DB	'jsr %s, (r%lu), nop [$%8.8lX,$%8.8lX]', 00H
	ORG $+2
$SG4673	DB	0aH, 00H
	ORG $+2
$SG4675	DB	'%s%s', 00H
	ORG $+3
$SG4682	DB	'rts', 00H
$SG4683	DB	0aH, 00H
	ORG $+2
$SG4685	DB	'%s%s', 00H
	ORG $+3
$SG4692	DB	'rts, nop', 00H
	ORG $+3
$SG4693	DB	0aH, 00H
	ORG $+2
$SG4695	DB	'%s%s', 00H
	ORG $+3
$SG4702	DB	'rts %s', 00H
	ORG $+1
$SG4703	DB	0aH, 00H
	ORG $+2
$SG4705	DB	'%s%s', 00H
	ORG $+3
$SG4712	DB	'rts %s, nop', 00H
$SG4713	DB	0aH, 00H
	ORG $+2
$SG4715	DB	'%s%s', 00H
	ORG $+3
$SG4722	DB	'rti1 %s', 00H
$SG4723	DB	0aH, 00H
	ORG $+2
$SG4725	DB	'%s%s', 00H
	ORG $+3
$SG4732	DB	'rti1 %s, nop', 00H
	ORG $+3
$SG4733	DB	0aH, 00H
	ORG $+2
$SG4735	DB	'%s%s', 00H
	ORG $+3
$SG4742	DB	'rti2 %s', 00H
$SG4743	DB	0aH, 00H
	ORG $+2
$SG4745	DB	'%s%s', 00H
	ORG $+3
$SG4752	DB	'rti2 %s, nop', 00H
	ORG $+3
$SG4753	DB	0aH, 00H
	ORG $+2
$SG4755	DB	'%s%s', 00H
CONST	ENDS
PUBLIC	?GetConditionCode@@YAPADI@Z			; GetConditionCode
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\nuanceexperimental\printecu.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv64 = -4						; size = 4
_which$ = 8						; size = 4
?GetConditionCode@@YAPADI@Z PROC			; GetConditionCode

; 7    : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 8    :   switch(which)

	mov	eax, DWORD PTR _which$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 31			; 0000001fH
	ja	$LN1@GetConditi
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN38@GetConditi[ecx*4]
$LN33@GetConditi:

; 9    :   {
; 10   :     case 0:
; 11   :       return "ne";

	mov	eax, OFFSET $SG4431
	jmp	$LN36@GetConditi
$LN32@GetConditi:

; 12   :     case 1:
; 13   :       return "c0eq";

	mov	eax, OFFSET $SG4433
	jmp	$LN36@GetConditi
$LN31@GetConditi:

; 14   :     case 2:
; 15   :       return "c1eq";

	mov	eax, OFFSET $SG4435
	jmp	$LN36@GetConditi
$LN30@GetConditi:

; 16   :     case 3:
; 17   :       return "cc";

	mov	eax, OFFSET $SG4437
	jmp	$LN36@GetConditi
$LN29@GetConditi:

; 18   :     case 4:
; 19   :       return "eq ";

	mov	eax, OFFSET $SG4439
	jmp	$LN36@GetConditi
$LN28@GetConditi:

; 20   :     case 5:
; 21   :       return "cs";

	mov	eax, OFFSET $SG4441
	jmp	$LN36@GetConditi
$LN27@GetConditi:

; 22   :     case 6:
; 23   :       return "vc";

	mov	eax, OFFSET $SG4443
	jmp	$LN36@GetConditi
$LN26@GetConditi:

; 24   :     case 7:
; 25   :       return "vs";

	mov	eax, OFFSET $SG4445
	jmp	$LN36@GetConditi
$LN25@GetConditi:

; 26   :     case 8:
; 27   :       return "lt";

	mov	eax, OFFSET $SG4447
	jmp	$LN36@GetConditi
$LN24@GetConditi:

; 28   :     case 9:
; 29   :       return "mvc";

	mov	eax, OFFSET $SG4449
	jmp	$LN36@GetConditi
$LN23@GetConditi:

; 30   :     case 10:
; 31   :       return "mvs";

	mov	eax, OFFSET $SG4451
	jmp	$LN36@GetConditi
$LN22@GetConditi:

; 32   :     case 11:
; 33   :       return "hi";

	mov	eax, OFFSET $SG4453
	jmp	$LN36@GetConditi
$LN21@GetConditi:

; 34   :     case 12:
; 35   :       return "le";

	mov	eax, OFFSET $SG4455
	jmp	$LN36@GetConditi
$LN20@GetConditi:

; 36   :     case 13:
; 37   :       return "ls";

	mov	eax, OFFSET $SG4457
	jmp	$LN36@GetConditi
$LN19@GetConditi:

; 38   :     case 14:
; 39   :       return "pl";

	mov	eax, OFFSET $SG4459
	jmp	SHORT $LN36@GetConditi
$LN18@GetConditi:

; 40   :     case 15:
; 41   :       return "mi";

	mov	eax, OFFSET $SG4461
	jmp	SHORT $LN36@GetConditi
$LN17@GetConditi:

; 42   :     case 16:
; 43   :       return "gt";

	mov	eax, OFFSET $SG4463
	jmp	SHORT $LN36@GetConditi
$LN16@GetConditi:

; 44   :     case 17:
; 45   :       return "t";

	mov	eax, OFFSET $SG4465
	jmp	SHORT $LN36@GetConditi
$LN15@GetConditi:

; 46   :     case 18:
; 47   :       return "modmi";

	mov	eax, OFFSET $SG4467
	jmp	SHORT $LN36@GetConditi
$LN14@GetConditi:

; 48   :     case 19:
; 49   :       return "modpl";

	mov	eax, OFFSET $SG4469
	jmp	SHORT $LN36@GetConditi
$LN13@GetConditi:

; 50   :     case 20:
; 51   :       return "ge";

	mov	eax, OFFSET $SG4471
	jmp	SHORT $LN36@GetConditi
$LN12@GetConditi:

; 52   :     case 21:
; 53   :       return "modge";

	mov	eax, OFFSET $SG4473
	jmp	SHORT $LN36@GetConditi
$LN11@GetConditi:

; 54   :     case 22:
; 55   :       return "modlt";

	mov	eax, OFFSET $SG4475
	jmp	SHORT $LN36@GetConditi
$LN10@GetConditi:

; 56   :     case 23:
; 57   :       return "???";

	mov	eax, OFFSET $SG4477
	jmp	SHORT $LN36@GetConditi
$LN9@GetConditi:

; 58   :     case 24:
; 59   :       return "c0ne";

	mov	eax, OFFSET $SG4479
	jmp	SHORT $LN36@GetConditi
$LN8@GetConditi:

; 60   :     case 25:
; 61   :       return "???";

	mov	eax, OFFSET $SG4481
	jmp	SHORT $LN36@GetConditi
$LN7@GetConditi:

; 62   :     case 26:
; 63   :       return "???";

	mov	eax, OFFSET $SG4483
	jmp	SHORT $LN36@GetConditi
$LN6@GetConditi:

; 64   :     case 27:
; 65   :       return "cf0lo";

	mov	eax, OFFSET $SG4485
	jmp	SHORT $LN36@GetConditi
$LN5@GetConditi:

; 66   :     case 28:
; 67   :       return "c1ne";

	mov	eax, OFFSET $SG4487
	jmp	SHORT $LN36@GetConditi
$LN4@GetConditi:

; 68   :     case 29:
; 69   :       return "cf0hi";

	mov	eax, OFFSET $SG4489
	jmp	SHORT $LN36@GetConditi
$LN3@GetConditi:

; 70   :     case 30:
; 71   :       return "cf1lo";

	mov	eax, OFFSET $SG4491
	jmp	SHORT $LN36@GetConditi
$LN2@GetConditi:

; 72   :     case 31:
; 73   :       return "cf1hi";

	mov	eax, OFFSET $SG4493
	jmp	SHORT $LN36@GetConditi
$LN1@GetConditi:

; 74   :     default:
; 75   :       return "???";

	mov	eax, OFFSET $SG4495
$LN36@GetConditi:

; 76   :   }
; 77   : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN38@GetConditi:
	DD	$LN33@GetConditi
	DD	$LN32@GetConditi
	DD	$LN31@GetConditi
	DD	$LN30@GetConditi
	DD	$LN29@GetConditi
	DD	$LN28@GetConditi
	DD	$LN27@GetConditi
	DD	$LN26@GetConditi
	DD	$LN25@GetConditi
	DD	$LN24@GetConditi
	DD	$LN23@GetConditi
	DD	$LN22@GetConditi
	DD	$LN21@GetConditi
	DD	$LN20@GetConditi
	DD	$LN19@GetConditi
	DD	$LN18@GetConditi
	DD	$LN17@GetConditi
	DD	$LN16@GetConditi
	DD	$LN15@GetConditi
	DD	$LN14@GetConditi
	DD	$LN13@GetConditi
	DD	$LN12@GetConditi
	DD	$LN11@GetConditi
	DD	$LN10@GetConditi
	DD	$LN9@GetConditi
	DD	$LN8@GetConditi
	DD	$LN7@GetConditi
	DD	$LN6@GetConditi
	DD	$LN5@GetConditi
	DD	$LN4@GetConditi
	DD	$LN3@GetConditi
	DD	$LN2@GetConditi
?GetConditionCode@@YAPADI@Z ENDP			; GetConditionCode
_TEXT	ENDS
PUBLIC	?Print_ECU_NOP@@YAIPADAAVNuance@@_N@Z		; Print_ECU_NOP
EXTRN	_strlen:PROC
EXTRN	_sprintf:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv72 = -20						; size = 4
_tempStr$ = -12						; size = 8
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ECU_NOP@@YAIPADAAVNuance@@_N@Z PROC		; Print_ECU_NOP

; 80   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 81   :   char tempStr[] = "ecu_nop";

	mov	eax, DWORD PTR $SG4502
	mov	DWORD PTR _tempStr$[ebp], eax
	mov	ecx, DWORD PTR $SG4502+4
	mov	DWORD PTR _tempStr$[ebp+4], ecx

; 82   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_ECU_
	mov	DWORD PTR tv72[ebp], OFFSET $SG4503
	jmp	SHORT $LN4@Print_ECU_
$LN3@Print_ECU_:
	mov	DWORD PTR tv72[ebp], OFFSET $SG4504
$LN4@Print_ECU_:
	mov	eax, DWORD PTR tv72[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG4505
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 83   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 84   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ECU_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_ECU_:
	DD	1
	DD	$LN6@Print_ECU_
$LN6@Print_ECU_:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN5@Print_ECU_
$LN5@Print_ECU_:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ECU_NOP@@YAIPADAAVNuance@@_N@Z ENDP		; Print_ECU_NOP
_TEXT	ENDS
PUBLIC	?Print_Halt@@YAIPADAAVNuance@@_N@Z		; Print_Halt
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv72 = -20						; size = 4
_tempStr$ = -12						; size = 5
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_Halt@@YAIPADAAVNuance@@_N@Z PROC			; Print_Halt

; 87   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 88   :   char tempStr[] = "halt";

	mov	eax, DWORD PTR $SG4512
	mov	DWORD PTR _tempStr$[ebp], eax
	mov	cl, BYTE PTR $SG4512+4
	mov	BYTE PTR _tempStr$[ebp+4], cl

; 89   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_Halt
	mov	DWORD PTR tv72[ebp], OFFSET $SG4513
	jmp	SHORT $LN4@Print_Halt
$LN3@Print_Halt:
	mov	DWORD PTR tv72[ebp], OFFSET $SG4514
$LN4@Print_Halt:
	mov	eax, DWORD PTR tv72[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG4515
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 90   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 91   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_Halt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_Halt:
	DD	1
	DD	$LN6@Print_Halt
$LN6@Print_Halt:
	DD	-12					; fffffff4H
	DD	5
	DD	$LN5@Print_Halt
$LN5@Print_Halt:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_Halt@@YAIPADAAVNuance@@_N@Z ENDP			; Print_Halt
_TEXT	ENDS
PUBLIC	?Print_BRAAlways@@YAIPADAAVNuance@@_N@Z		; Print_BRAAlways
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv71 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_BRAAlways@@YAIPADAAVNuance@@_N@Z PROC		; Print_BRAAlways

; 94   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 95   :   char tempStr[512];
; 96   :   sprintf(tempStr,"bra $%8.8lX",nuance.fields[FIELD_ECU_ADDRESS]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG4522
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 97   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_BRAA
	mov	DWORD PTR tv71[ebp], OFFSET $SG4523
	jmp	SHORT $LN4@Print_BRAA
$LN3@Print_BRAA:
	mov	DWORD PTR tv71[ebp], OFFSET $SG4524
$LN4@Print_BRAA:
	mov	ecx, DWORD PTR tv71[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4525
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 98   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 99   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_BRAA
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Print_BRAA:
	DD	1
	DD	$LN6@Print_BRAA
$LN6@Print_BRAA:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_BRAA
$LN5@Print_BRAA:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_BRAAlways@@YAIPADAAVNuance@@_N@Z ENDP		; Print_BRAAlways
_TEXT	ENDS
PUBLIC	?Print_BRAAlways_NOP@@YAIPADAAVNuance@@_N@Z	; Print_BRAAlways_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv71 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_BRAAlways_NOP@@YAIPADAAVNuance@@_N@Z PROC	; Print_BRAAlways_NOP

; 102  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 103  :   char tempStr[512];
; 104  :   sprintf(tempStr,"bra $%8.8lX, nop",nuance.fields[FIELD_ECU_ADDRESS]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG4532
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 105  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_BRAA@2
	mov	DWORD PTR tv71[ebp], OFFSET $SG4533
	jmp	SHORT $LN4@Print_BRAA@2
$LN3@Print_BRAA@2:
	mov	DWORD PTR tv71[ebp], OFFSET $SG4534
$LN4@Print_BRAA@2:
	mov	ecx, DWORD PTR tv71[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4535
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 106  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 107  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_BRAA@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Print_BRAA@2:
	DD	1
	DD	$LN6@Print_BRAA@2
$LN6@Print_BRAA@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_BRAA@2
$LN5@Print_BRAA@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_BRAAlways_NOP@@YAIPADAAVNuance@@_N@Z ENDP	; Print_BRAAlways_NOP
_TEXT	ENDS
PUBLIC	?Print_BRAConditional@@YAIPADAAVNuance@@_N@Z	; Print_BRAConditional
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_BRAConditional@@YAIPADAAVNuance@@_N@Z PROC	; Print_BRAConditional

; 110  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 111  :   char tempStr[512];
; 112  :   sprintf(tempStr,"bra %s, $%8.8lX",GetConditionCode(nuance.fields[FIELD_ECU_CONDITION]),nuance.fields[FIELD_ECU_ADDRESS]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?GetConditionCode@@YAPADI@Z		; GetConditionCode
	add	esp, 4
	push	eax
	push	OFFSET $SG4542
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 113  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_BRAC
	mov	DWORD PTR tv75[ebp], OFFSET $SG4543
	jmp	SHORT $LN4@Print_BRAC
$LN3@Print_BRAC:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4544
$LN4@Print_BRAC:
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG4545
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 114  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 115  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_BRAC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Print_BRAC:
	DD	1
	DD	$LN6@Print_BRAC
$LN6@Print_BRAC:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_BRAC
$LN5@Print_BRAC:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_BRAConditional@@YAIPADAAVNuance@@_N@Z ENDP	; Print_BRAConditional
_TEXT	ENDS
PUBLIC	?Print_BRAConditional_NOP@@YAIPADAAVNuance@@_N@Z ; Print_BRAConditional_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_BRAConditional_NOP@@YAIPADAAVNuance@@_N@Z PROC	; Print_BRAConditional_NOP

; 118  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 119  :   char tempStr[512];
; 120  :   sprintf(tempStr,"bra %s, $%8.8lX, nop",GetConditionCode(nuance.fields[FIELD_ECU_CONDITION]),nuance.fields[FIELD_ECU_ADDRESS]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?GetConditionCode@@YAPADI@Z		; GetConditionCode
	add	esp, 4
	push	eax
	push	OFFSET $SG4552
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 121  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_BRAC@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG4553
	jmp	SHORT $LN4@Print_BRAC@2
$LN3@Print_BRAC@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4554
$LN4@Print_BRAC@2:
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG4555
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 122  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 123  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_BRAC@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Print_BRAC@2:
	DD	1
	DD	$LN6@Print_BRAC@2
$LN6@Print_BRAC@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_BRAC@2
$LN5@Print_BRAC@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_BRAConditional_NOP@@YAIPADAAVNuance@@_N@Z ENDP	; Print_BRAConditional_NOP
_TEXT	ENDS
PUBLIC	?Print_JMPAlwaysIndirect@@YAIPADAAVNuance@@_N@Z	; Print_JMPAlwaysIndirect
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv71 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_JMPAlwaysIndirect@@YAIPADAAVNuance@@_N@Z PROC	; Print_JMPAlwaysIndirect

; 126  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 127  :   char tempStr[512];
; 128  :   sprintf(tempStr,"jmp (r%lu)",nuance.fields[FIELD_ECU_ADDRESS]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG4562
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 129  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_JMPA
	mov	DWORD PTR tv71[ebp], OFFSET $SG4563
	jmp	SHORT $LN4@Print_JMPA
$LN3@Print_JMPA:
	mov	DWORD PTR tv71[ebp], OFFSET $SG4564
$LN4@Print_JMPA:
	mov	ecx, DWORD PTR tv71[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4565
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 130  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 131  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_JMPA
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Print_JMPA:
	DD	1
	DD	$LN6@Print_JMPA
$LN6@Print_JMPA:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_JMPA
$LN5@Print_JMPA:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_JMPAlwaysIndirect@@YAIPADAAVNuance@@_N@Z ENDP	; Print_JMPAlwaysIndirect
_TEXT	ENDS
PUBLIC	?Print_JMPAlwaysIndirect_NOP@@YAIPADAAVNuance@@_N@Z ; Print_JMPAlwaysIndirect_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv71 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_JMPAlwaysIndirect_NOP@@YAIPADAAVNuance@@_N@Z PROC ; Print_JMPAlwaysIndirect_NOP

; 134  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 135  :   char tempStr[512];
; 136  :   sprintf(tempStr,"jmp (r%lu), nop",nuance.fields[FIELD_ECU_ADDRESS]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG4572
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 137  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_JMPA@2
	mov	DWORD PTR tv71[ebp], OFFSET $SG4573
	jmp	SHORT $LN4@Print_JMPA@2
$LN3@Print_JMPA@2:
	mov	DWORD PTR tv71[ebp], OFFSET $SG4574
$LN4@Print_JMPA@2:
	mov	ecx, DWORD PTR tv71[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4575
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 138  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 139  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_JMPA@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Print_JMPA@2:
	DD	1
	DD	$LN6@Print_JMPA@2
$LN6@Print_JMPA@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_JMPA@2
$LN5@Print_JMPA@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_JMPAlwaysIndirect_NOP@@YAIPADAAVNuance@@_N@Z ENDP ; Print_JMPAlwaysIndirect_NOP
_TEXT	ENDS
PUBLIC	?Print_JMPConditionalIndirect@@YAIPADAAVNuance@@_N@Z ; Print_JMPConditionalIndirect
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_JMPConditionalIndirect@@YAIPADAAVNuance@@_N@Z PROC ; Print_JMPConditionalIndirect

; 142  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 143  :   char tempStr[512];
; 144  :   sprintf(tempStr,"jmp %s, (r%lu)",GetConditionCode(nuance.fields[FIELD_ECU_CONDITION]),nuance.fields[FIELD_ECU_ADDRESS]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?GetConditionCode@@YAPADI@Z		; GetConditionCode
	add	esp, 4
	push	eax
	push	OFFSET $SG4582
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 145  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_JMPC
	mov	DWORD PTR tv75[ebp], OFFSET $SG4583
	jmp	SHORT $LN4@Print_JMPC
$LN3@Print_JMPC:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4584
$LN4@Print_JMPC:
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG4585
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 146  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 147  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_JMPC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Print_JMPC:
	DD	1
	DD	$LN6@Print_JMPC
$LN6@Print_JMPC:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_JMPC
$LN5@Print_JMPC:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_JMPConditionalIndirect@@YAIPADAAVNuance@@_N@Z ENDP ; Print_JMPConditionalIndirect
_TEXT	ENDS
PUBLIC	?Print_JMPConditionalIndirect_NOP@@YAIPADAAVNuance@@_N@Z ; Print_JMPConditionalIndirect_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_JMPConditionalIndirect_NOP@@YAIPADAAVNuance@@_N@Z PROC ; Print_JMPConditionalIndirect_NOP

; 150  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 151  :   char tempStr[512];
; 152  :   sprintf(tempStr,"jmp %s, (r%lu), nop",GetConditionCode(nuance.fields[FIELD_ECU_CONDITION]),nuance.fields[FIELD_ECU_ADDRESS]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?GetConditionCode@@YAPADI@Z		; GetConditionCode
	add	esp, 4
	push	eax
	push	OFFSET $SG4592
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 153  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_JMPC@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG4593
	jmp	SHORT $LN4@Print_JMPC@2
$LN3@Print_JMPC@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4594
$LN4@Print_JMPC@2:
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG4595
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 154  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 155  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_JMPC@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Print_JMPC@2:
	DD	1
	DD	$LN6@Print_JMPC@2
$LN6@Print_JMPC@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_JMPC@2
$LN5@Print_JMPC@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_JMPConditionalIndirect_NOP@@YAIPADAAVNuance@@_N@Z ENDP ; Print_JMPConditionalIndirect_NOP
_TEXT	ENDS
PUBLIC	?Print_JSRAlways@@YAIPADAAVNuance@@_N@Z		; Print_JSRAlways
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_JSRAlways@@YAIPADAAVNuance@@_N@Z PROC		; Print_JSRAlways

; 158  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 159  :   char tempStr[512];
; 160  :   sprintf(tempStr,"jsr $%8.8lX [$%8.8lX,$%8.8lX]",nuance.fields[FIELD_ECU_ADDRESS],nuance.fields[FIELD_ECU_PCROUTE],nuance.fields[FIELD_ECU_PCFETCHNEXT]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4602
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 161  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_JSRA
	mov	DWORD PTR tv75[ebp], OFFSET $SG4603
	jmp	SHORT $LN4@Print_JSRA
$LN3@Print_JSRA:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4604
$LN4@Print_JSRA:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4605
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 162  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 163  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_JSRA
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_JSRA:
	DD	1
	DD	$LN6@Print_JSRA
$LN6@Print_JSRA:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_JSRA
$LN5@Print_JSRA:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_JSRAlways@@YAIPADAAVNuance@@_N@Z ENDP		; Print_JSRAlways
_TEXT	ENDS
PUBLIC	?Print_JSRAlways_NOP@@YAIPADAAVNuance@@_N@Z	; Print_JSRAlways_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_JSRAlways_NOP@@YAIPADAAVNuance@@_N@Z PROC	; Print_JSRAlways_NOP

; 166  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 167  :   char tempStr[512];
; 168  :   sprintf(tempStr,"jsr $%8.8lX, nop [$%8.8lX,$%8.8lX]",nuance.fields[FIELD_ECU_ADDRESS],nuance.fields[FIELD_ECU_PCROUTE],nuance.fields[FIELD_ECU_PCFETCHNEXT]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4612
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 169  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_JSRA@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG4613
	jmp	SHORT $LN4@Print_JSRA@2
$LN3@Print_JSRA@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4614
$LN4@Print_JSRA@2:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4615
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 170  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 171  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_JSRA@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_JSRA@2:
	DD	1
	DD	$LN6@Print_JSRA@2
$LN6@Print_JSRA@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_JSRA@2
$LN5@Print_JSRA@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_JSRAlways_NOP@@YAIPADAAVNuance@@_N@Z ENDP	; Print_JSRAlways_NOP
_TEXT	ENDS
PUBLIC	?Print_JSRConditional@@YAIPADAAVNuance@@_N@Z	; Print_JSRConditional
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv79 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_JSRConditional@@YAIPADAAVNuance@@_N@Z PROC	; Print_JSRConditional

; 174  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 175  :   char tempStr[512];
; 176  :   sprintf(tempStr,"jsr %s, $%8.8lX [$%8.8lX,$%8.8lX]",GetConditionCode(nuance.fields[FIELD_ECU_CONDITION]),nuance.fields[FIELD_ECU_ADDRESS],nuance.fields[FIELD_ECU_PCROUTE],nuance.fields[FIELD_ECU_PCFETCHNEXT]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?GetConditionCode@@YAPADI@Z		; GetConditionCode
	add	esp, 4
	push	eax
	push	OFFSET $SG4622
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 177  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_JSRC
	mov	DWORD PTR tv79[ebp], OFFSET $SG4623
	jmp	SHORT $LN4@Print_JSRC
$LN3@Print_JSRC:
	mov	DWORD PTR tv79[ebp], OFFSET $SG4624
$LN4@Print_JSRC:
	mov	ecx, DWORD PTR tv79[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4625
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 178  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 179  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_JSRC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_JSRC:
	DD	1
	DD	$LN6@Print_JSRC
$LN6@Print_JSRC:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_JSRC
$LN5@Print_JSRC:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_JSRConditional@@YAIPADAAVNuance@@_N@Z ENDP	; Print_JSRConditional
_TEXT	ENDS
PUBLIC	?Print_JSRConditional_NOP@@YAIPADAAVNuance@@_N@Z ; Print_JSRConditional_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv79 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_JSRConditional_NOP@@YAIPADAAVNuance@@_N@Z PROC	; Print_JSRConditional_NOP

; 182  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 183  :   char tempStr[512];
; 184  :   sprintf(tempStr,"jsr %s, $%8.8lX, nop [$%8.8lX,$%8.8lX]",GetConditionCode(nuance.fields[FIELD_ECU_CONDITION]),nuance.fields[FIELD_ECU_ADDRESS],nuance.fields[FIELD_ECU_PCROUTE],nuance.fields[FIELD_ECU_PCFETCHNEXT]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?GetConditionCode@@YAPADI@Z		; GetConditionCode
	add	esp, 4
	push	eax
	push	OFFSET $SG4632
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 185  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_JSRC@2
	mov	DWORD PTR tv79[ebp], OFFSET $SG4633
	jmp	SHORT $LN4@Print_JSRC@2
$LN3@Print_JSRC@2:
	mov	DWORD PTR tv79[ebp], OFFSET $SG4634
$LN4@Print_JSRC@2:
	mov	ecx, DWORD PTR tv79[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4635
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 186  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 187  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_JSRC@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_JSRC@2:
	DD	1
	DD	$LN6@Print_JSRC@2
$LN6@Print_JSRC@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_JSRC@2
$LN5@Print_JSRC@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_JSRConditional_NOP@@YAIPADAAVNuance@@_N@Z ENDP	; Print_JSRConditional_NOP
_TEXT	ENDS
PUBLIC	?Print_JSRAlwaysIndirect@@YAIPADAAVNuance@@_N@Z	; Print_JSRAlwaysIndirect
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_JSRAlwaysIndirect@@YAIPADAAVNuance@@_N@Z PROC	; Print_JSRAlwaysIndirect

; 190  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 191  :   char tempStr[512];
; 192  :   sprintf(tempStr,"jsr (r%lu) [$%8.8lX,$%8.8lX]",nuance.fields[FIELD_ECU_ADDRESS],nuance.fields[FIELD_ECU_PCROUTE],nuance.fields[FIELD_ECU_PCFETCHNEXT]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4642
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 193  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_JSRA@3
	mov	DWORD PTR tv75[ebp], OFFSET $SG4643
	jmp	SHORT $LN4@Print_JSRA@3
$LN3@Print_JSRA@3:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4644
$LN4@Print_JSRA@3:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4645
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 194  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 195  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_JSRA@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_JSRA@3:
	DD	1
	DD	$LN6@Print_JSRA@3
$LN6@Print_JSRA@3:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_JSRA@3
$LN5@Print_JSRA@3:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_JSRAlwaysIndirect@@YAIPADAAVNuance@@_N@Z ENDP	; Print_JSRAlwaysIndirect
_TEXT	ENDS
PUBLIC	?Print_JSRAlwaysIndirect_NOP@@YAIPADAAVNuance@@_N@Z ; Print_JSRAlwaysIndirect_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_JSRAlwaysIndirect_NOP@@YAIPADAAVNuance@@_N@Z PROC ; Print_JSRAlwaysIndirect_NOP

; 198  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 199  :   char tempStr[512];
; 200  :   sprintf(tempStr,"jsr (r%lu), nop [$%8.8lX,$%8.8lX]",nuance.fields[FIELD_ECU_ADDRESS],nuance.fields[FIELD_ECU_PCROUTE],nuance.fields[FIELD_ECU_PCFETCHNEXT]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4652
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 201  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_JSRA@4
	mov	DWORD PTR tv75[ebp], OFFSET $SG4653
	jmp	SHORT $LN4@Print_JSRA@4
$LN3@Print_JSRA@4:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4654
$LN4@Print_JSRA@4:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4655
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 202  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 203  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_JSRA@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_JSRA@4:
	DD	1
	DD	$LN6@Print_JSRA@4
$LN6@Print_JSRA@4:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_JSRA@4
$LN5@Print_JSRA@4:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_JSRAlwaysIndirect_NOP@@YAIPADAAVNuance@@_N@Z ENDP ; Print_JSRAlwaysIndirect_NOP
_TEXT	ENDS
PUBLIC	?Print_JSRConditionalIndirect@@YAIPADAAVNuance@@_N@Z ; Print_JSRConditionalIndirect
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv79 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_JSRConditionalIndirect@@YAIPADAAVNuance@@_N@Z PROC ; Print_JSRConditionalIndirect

; 206  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 207  :   char tempStr[512];
; 208  :   sprintf(tempStr,"jsr %s, (r%lu) [$%8.8lX,$%8.8lX]",GetConditionCode(nuance.fields[FIELD_ECU_CONDITION]),nuance.fields[FIELD_ECU_ADDRESS],nuance.fields[FIELD_ECU_PCROUTE],nuance.fields[FIELD_ECU_PCFETCHNEXT]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?GetConditionCode@@YAPADI@Z		; GetConditionCode
	add	esp, 4
	push	eax
	push	OFFSET $SG4662
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 209  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_JSRC@3
	mov	DWORD PTR tv79[ebp], OFFSET $SG4663
	jmp	SHORT $LN4@Print_JSRC@3
$LN3@Print_JSRC@3:
	mov	DWORD PTR tv79[ebp], OFFSET $SG4664
$LN4@Print_JSRC@3:
	mov	ecx, DWORD PTR tv79[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4665
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 210  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 211  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_JSRC@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_JSRC@3:
	DD	1
	DD	$LN6@Print_JSRC@3
$LN6@Print_JSRC@3:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_JSRC@3
$LN5@Print_JSRC@3:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_JSRConditionalIndirect@@YAIPADAAVNuance@@_N@Z ENDP ; Print_JSRConditionalIndirect
_TEXT	ENDS
PUBLIC	?Print_JSRConditionalIndirect_NOP@@YAIPADAAVNuance@@_N@Z ; Print_JSRConditionalIndirect_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv79 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_JSRConditionalIndirect_NOP@@YAIPADAAVNuance@@_N@Z PROC ; Print_JSRConditionalIndirect_NOP

; 214  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 215  :   char tempStr[512];
; 216  :   sprintf(tempStr,"jsr %s, (r%lu), nop [$%8.8lX,$%8.8lX]",GetConditionCode(nuance.fields[FIELD_ECU_CONDITION]),nuance.fields[FIELD_ECU_ADDRESS],nuance.fields[FIELD_ECU_PCROUTE],nuance.fields[FIELD_ECU_PCFETCHNEXT]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?GetConditionCode@@YAPADI@Z		; GetConditionCode
	add	esp, 4
	push	eax
	push	OFFSET $SG4672
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 217  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_JSRC@4
	mov	DWORD PTR tv79[ebp], OFFSET $SG4673
	jmp	SHORT $LN4@Print_JSRC@4
$LN3@Print_JSRC@4:
	mov	DWORD PTR tv79[ebp], OFFSET $SG4674
$LN4@Print_JSRC@4:
	mov	ecx, DWORD PTR tv79[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4675
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 218  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 219  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_JSRC@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_JSRC@4:
	DD	1
	DD	$LN6@Print_JSRC@4
$LN6@Print_JSRC@4:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_JSRC@4
$LN5@Print_JSRC@4:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_JSRConditionalIndirect_NOP@@YAIPADAAVNuance@@_N@Z ENDP ; Print_JSRConditionalIndirect_NOP
_TEXT	ENDS
PUBLIC	?Print_RTSAlways@@YAIPADAAVNuance@@_N@Z		; Print_RTSAlways
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv72 = -16						; size = 4
_tempStr$ = -8						; size = 4
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_RTSAlways@@YAIPADAAVNuance@@_N@Z PROC		; Print_RTSAlways

; 222  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 223  :   char tempStr[] = "rts";

	mov	eax, DWORD PTR $SG4682
	mov	DWORD PTR _tempStr$[ebp], eax

; 224  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_RTSA
	mov	DWORD PTR tv72[ebp], OFFSET $SG4683
	jmp	SHORT $LN4@Print_RTSA
$LN3@Print_RTSA:
	mov	DWORD PTR tv72[ebp], OFFSET $SG4684
$LN4@Print_RTSA:
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4685
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 225  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 226  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_RTSA
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_RTSA:
	DD	1
	DD	$LN6@Print_RTSA
$LN6@Print_RTSA:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@Print_RTSA
$LN5@Print_RTSA:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_RTSAlways@@YAIPADAAVNuance@@_N@Z ENDP		; Print_RTSAlways
_TEXT	ENDS
PUBLIC	?Print_RTSAlways_NOP@@YAIPADAAVNuance@@_N@Z	; Print_RTSAlways_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv72 = -24						; size = 4
_tempStr$ = -16						; size = 9
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_RTSAlways_NOP@@YAIPADAAVNuance@@_N@Z PROC	; Print_RTSAlways_NOP

; 229  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 230  :   char tempStr[] = "rts, nop";

	mov	eax, DWORD PTR $SG4692
	mov	DWORD PTR _tempStr$[ebp], eax
	mov	ecx, DWORD PTR $SG4692+4
	mov	DWORD PTR _tempStr$[ebp+4], ecx
	mov	dl, BYTE PTR $SG4692+8
	mov	BYTE PTR _tempStr$[ebp+8], dl

; 231  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_RTSA@2
	mov	DWORD PTR tv72[ebp], OFFSET $SG4693
	jmp	SHORT $LN4@Print_RTSA@2
$LN3@Print_RTSA@2:
	mov	DWORD PTR tv72[ebp], OFFSET $SG4694
$LN4@Print_RTSA@2:
	mov	ecx, DWORD PTR tv72[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4695
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 232  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 233  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_RTSA@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_RTSA@2:
	DD	1
	DD	$LN6@Print_RTSA@2
$LN6@Print_RTSA@2:
	DD	-16					; fffffff0H
	DD	9
	DD	$LN5@Print_RTSA@2
$LN5@Print_RTSA@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_RTSAlways_NOP@@YAIPADAAVNuance@@_N@Z ENDP	; Print_RTSAlways_NOP
_TEXT	ENDS
PUBLIC	?Print_RTSConditional@@YAIPADAAVNuance@@_N@Z	; Print_RTSConditional
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_RTSConditional@@YAIPADAAVNuance@@_N@Z PROC	; Print_RTSConditional

; 236  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 237  :   char tempStr[512];
; 238  :   sprintf(tempStr,"rts %s",GetConditionCode(nuance.fields[FIELD_ECU_CONDITION]));

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?GetConditionCode@@YAPADI@Z		; GetConditionCode
	add	esp, 4
	push	eax
	push	OFFSET $SG4702
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 239  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_RTSC
	mov	DWORD PTR tv73[ebp], OFFSET $SG4703
	jmp	SHORT $LN4@Print_RTSC
$LN3@Print_RTSC:
	mov	DWORD PTR tv73[ebp], OFFSET $SG4704
$LN4@Print_RTSC:
	mov	ecx, DWORD PTR tv73[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4705
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 240  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 241  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_RTSC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_RTSC:
	DD	1
	DD	$LN6@Print_RTSC
$LN6@Print_RTSC:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_RTSC
$LN5@Print_RTSC:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_RTSConditional@@YAIPADAAVNuance@@_N@Z ENDP	; Print_RTSConditional
_TEXT	ENDS
PUBLIC	?Print_RTSConditional_NOP@@YAIPADAAVNuance@@_N@Z ; Print_RTSConditional_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_RTSConditional_NOP@@YAIPADAAVNuance@@_N@Z PROC	; Print_RTSConditional_NOP

; 244  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 245  :   char tempStr[512];
; 246  :   sprintf(tempStr,"rts %s, nop",GetConditionCode(nuance.fields[FIELD_ECU_CONDITION]));

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?GetConditionCode@@YAPADI@Z		; GetConditionCode
	add	esp, 4
	push	eax
	push	OFFSET $SG4712
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 247  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_RTSC@2
	mov	DWORD PTR tv73[ebp], OFFSET $SG4713
	jmp	SHORT $LN4@Print_RTSC@2
$LN3@Print_RTSC@2:
	mov	DWORD PTR tv73[ebp], OFFSET $SG4714
$LN4@Print_RTSC@2:
	mov	ecx, DWORD PTR tv73[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4715
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 248  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 249  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_RTSC@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_RTSC@2:
	DD	1
	DD	$LN6@Print_RTSC@2
$LN6@Print_RTSC@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_RTSC@2
$LN5@Print_RTSC@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_RTSConditional_NOP@@YAIPADAAVNuance@@_N@Z ENDP	; Print_RTSConditional_NOP
_TEXT	ENDS
PUBLIC	?Print_RTI1Conditional@@YAIPADAAVNuance@@_N@Z	; Print_RTI1Conditional
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_RTI1Conditional@@YAIPADAAVNuance@@_N@Z PROC	; Print_RTI1Conditional

; 252  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 253  :   char tempStr[512];
; 254  :   sprintf(tempStr,"rti1 %s",GetConditionCode(nuance.fields[FIELD_ECU_CONDITION]));

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?GetConditionCode@@YAPADI@Z		; GetConditionCode
	add	esp, 4
	push	eax
	push	OFFSET $SG4722
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 255  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_RTI1
	mov	DWORD PTR tv73[ebp], OFFSET $SG4723
	jmp	SHORT $LN4@Print_RTI1
$LN3@Print_RTI1:
	mov	DWORD PTR tv73[ebp], OFFSET $SG4724
$LN4@Print_RTI1:
	mov	ecx, DWORD PTR tv73[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4725
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 256  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 257  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_RTI1
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_RTI1:
	DD	1
	DD	$LN6@Print_RTI1
$LN6@Print_RTI1:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_RTI1
$LN5@Print_RTI1:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_RTI1Conditional@@YAIPADAAVNuance@@_N@Z ENDP	; Print_RTI1Conditional
_TEXT	ENDS
PUBLIC	?Print_RTI1Conditional_NOP@@YAIPADAAVNuance@@_N@Z ; Print_RTI1Conditional_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_RTI1Conditional_NOP@@YAIPADAAVNuance@@_N@Z PROC	; Print_RTI1Conditional_NOP

; 260  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 261  :   char tempStr[512];
; 262  :   sprintf(tempStr,"rti1 %s, nop",GetConditionCode(nuance.fields[FIELD_ECU_CONDITION]));

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?GetConditionCode@@YAPADI@Z		; GetConditionCode
	add	esp, 4
	push	eax
	push	OFFSET $SG4732
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 263  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_RTI1@2
	mov	DWORD PTR tv73[ebp], OFFSET $SG4733
	jmp	SHORT $LN4@Print_RTI1@2
$LN3@Print_RTI1@2:
	mov	DWORD PTR tv73[ebp], OFFSET $SG4734
$LN4@Print_RTI1@2:
	mov	ecx, DWORD PTR tv73[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4735
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 264  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 265  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_RTI1@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_RTI1@2:
	DD	1
	DD	$LN6@Print_RTI1@2
$LN6@Print_RTI1@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_RTI1@2
$LN5@Print_RTI1@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_RTI1Conditional_NOP@@YAIPADAAVNuance@@_N@Z ENDP	; Print_RTI1Conditional_NOP
_TEXT	ENDS
PUBLIC	?Print_RTI2Conditional@@YAIPADAAVNuance@@_N@Z	; Print_RTI2Conditional
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_RTI2Conditional@@YAIPADAAVNuance@@_N@Z PROC	; Print_RTI2Conditional

; 268  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 269  :   char tempStr[512];
; 270  :   sprintf(tempStr,"rti2 %s",GetConditionCode(nuance.fields[FIELD_ECU_CONDITION]));

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?GetConditionCode@@YAPADI@Z		; GetConditionCode
	add	esp, 4
	push	eax
	push	OFFSET $SG4742
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 271  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_RTI2
	mov	DWORD PTR tv73[ebp], OFFSET $SG4743
	jmp	SHORT $LN4@Print_RTI2
$LN3@Print_RTI2:
	mov	DWORD PTR tv73[ebp], OFFSET $SG4744
$LN4@Print_RTI2:
	mov	ecx, DWORD PTR tv73[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4745
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 272  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 273  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_RTI2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_RTI2:
	DD	1
	DD	$LN6@Print_RTI2
$LN6@Print_RTI2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_RTI2
$LN5@Print_RTI2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_RTI2Conditional@@YAIPADAAVNuance@@_N@Z ENDP	; Print_RTI2Conditional
_TEXT	ENDS
PUBLIC	?Print_RTI2Conditional_NOP@@YAIPADAAVNuance@@_N@Z ; Print_RTI2Conditional_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_RTI2Conditional_NOP@@YAIPADAAVNuance@@_N@Z PROC	; Print_RTI2Conditional_NOP

; 275  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 276  :   char tempStr[512];
; 277  :   sprintf(tempStr,"rti2 %s, nop",GetConditionCode(nuance.fields[FIELD_ECU_CONDITION]));

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?GetConditionCode@@YAPADI@Z		; GetConditionCode
	add	esp, 4
	push	eax
	push	OFFSET $SG4752
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 278  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_RTI2@2
	mov	DWORD PTR tv73[ebp], OFFSET $SG4753
	jmp	SHORT $LN4@Print_RTI2@2
$LN3@Print_RTI2@2:
	mov	DWORD PTR tv73[ebp], OFFSET $SG4754
$LN4@Print_RTI2@2:
	mov	ecx, DWORD PTR tv73[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4755
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 279  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 280  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_RTI2@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_RTI2@2:
	DD	1
	DD	$LN6@Print_RTI2@2
$LN6@Print_RTI2@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_RTI2@2
$LN5@Print_RTI2@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_RTI2Conditional_NOP@@YAIPADAAVNuance@@_N@Z ENDP	; Print_RTI2Conditional_NOP
_TEXT	ENDS
END
