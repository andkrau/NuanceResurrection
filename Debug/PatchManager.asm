; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	c:\NuanceExperimental\PatchManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?ApplyPatches@PatchManager@@QAEXXZ		; PatchManager::ApplyPatches
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\nuanceexperimental\patchmanager.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv70 = -12						; size = 4
_i$ = -8						; size = 4
_this$ = -4						; size = 4
?ApplyPatches@PatchManager@@QAEXXZ PROC			; PatchManager::ApplyPatches
; _this$ = ecx

; 5    : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 6    :   uint32 i;
; 7    : 
; 8    :   for(i = 0; i < numPatches; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN11@ApplyPatch
$LN10@ApplyPatch:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN11@ApplyPatch:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR [ecx+1280]
	jae	$LN12@ApplyPatch

; 9    :   {
; 10   :     switch(patchData[i].patchType)

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+12]
	mov	DWORD PTR tv70[ebp], edx
	cmp	DWORD PTR tv70[ebp], 4
	ja	$LN7@ApplyPatch
	mov	eax, DWORD PTR tv70[ebp]
	jmp	DWORD PTR $LN14@ApplyPatch[eax*4]
$LN6@ApplyPatch:

; 11   :     {
; 12   :       case PatchType_Rel8:
; 13   :         *((uint8 *)(patchData[i].patchPtr)) = (uint8)(labelPointers[patchData[i].destLabel] - patchData[i].basePtr);

	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+eax*4+1024]
	sub	eax, DWORD PTR [esi+ecx+4]
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx]
	mov	BYTE PTR [ecx], al

; 14   :         break;

	jmp	$LN7@ApplyPatch
$LN5@ApplyPatch:

; 15   :       case PatchType_Rel16:
; 16   :         *((uint16 *)(patchData[i].patchPtr)) = (uint16)(labelPointers[patchData[i].destLabel] - patchData[i].basePtr);

	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+8]
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+ecx*4+1024]
	sub	ecx, DWORD PTR [esi+edx+4]
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+edx]
	mov	WORD PTR [edx], cx

; 17   :         break;

	jmp	SHORT $LN7@ApplyPatch
$LN4@ApplyPatch:

; 18   :       case PatchType_Rel32:
; 19   :         *((uint32 *)(patchData[i].patchPtr)) = (uint32)(labelPointers[patchData[i].destLabel] - patchData[i].basePtr);

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+edx*4+1024]
	sub	edx, DWORD PTR [esi+eax+4]
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax]
	mov	DWORD PTR [eax], edx

; 20   :         break;

	jmp	SHORT $LN7@ApplyPatch

; 21   :       case PatchType_Rel64:
; 22   :         //*((uint64 *)(patchData[i].patchPtr)) = (uint64)(labelPointers[patchData[i].destLabel] - patchData[i].basePtr);
; 23   :         break;

	jmp	SHORT $LN7@ApplyPatch
$LN2@ApplyPatch:

; 24   :       case PatchType_Abs32:
; 25   :         *((uint32 *)(patchData[i].patchPtr)) = (uint32)(labelPointers[patchData[i].destLabel]);

	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+eax*4+1024]
	mov	DWORD PTR [ecx], eax
$LN7@ApplyPatch:

; 26   :         break;
; 27   :       case PatchType_Abs64:
; 28   :         //*((uint64 *)(patchData[i].patchPtr)) = (uint32)(labelPointers[patchData[i].destLabel]);
; 29   :         break;
; 30   :     }
; 31   :   }

	jmp	$LN10@ApplyPatch
$LN12@ApplyPatch:

; 32   : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN14@ApplyPatch:
	DD	$LN6@ApplyPatch
	DD	$LN5@ApplyPatch
	DD	$LN4@ApplyPatch
	DD	$LN7@ApplyPatch
	DD	$LN2@ApplyPatch
?ApplyPatches@PatchManager@@QAEXXZ ENDP			; PatchManager::ApplyPatches
_TEXT	ENDS
END
