; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	c:\NuanceExperimental\NuanceMain.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?picMPE1LED@@3PAUHWND__@@A			; picMPE1LED
PUBLIC	?textMPE1Pcexec@@3PAUHWND__@@A			; textMPE1Pcexec
PUBLIC	?textMPE1@@3PAUHWND__@@A			; textMPE1
PUBLIC	?bRun@@3_NA					; bRun
PUBLIC	?textMPE2Pcexec@@3PAUHWND__@@A			; textMPE2Pcexec
PUBLIC	?display@@3PAVGLWindow@@A			; display
PUBLIC	?cbDumpMPEs@@3PAUHWND__@@A			; cbDumpMPEs
PUBLIC	?ofn@@3UtagOFNA@@A				; ofn
PUBLIC	?openFileName@@3PADA				; openFileName
PUBLIC	?textMPE0@@3PAUHWND__@@A			; textMPE0
PUBLIC	?bmpLEDOn@@3PAUHBITMAP__@@A			; bmpLEDOn
PUBLIC	?cbRun@@3PAUHWND__@@A				; cbRun
PUBLIC	?textMPE3Pcexec@@3PAUHWND__@@A			; textMPE3Pcexec
PUBLIC	?cbCommStatus@@3PAUHWND__@@A			; cbCommStatus
PUBLIC	?picMPE3LED@@3PAUHWND__@@A			; picMPE3LED
PUBLIC	?picMPE0LED@@3PAUHWND__@@A			; picMPE0LED
PUBLIC	?reTermDisplay@@3PAUHWND__@@A			; reTermDisplay
PUBLIC	?cbLoadFile@@3PAUHWND__@@A			; cbLoadFile
PUBLIC	?textMPE3@@3PAUHWND__@@A			; textMPE3
PUBLIC	?bClosingApplication@@3_NA			; bClosingApplication
PUBLIC	?picMPE2LED@@3PAUHWND__@@A			; picMPE2LED
PUBLIC	?iconApp@@3PAUHICON__@@A			; iconApp
PUBLIC	?cbSingleStep@@3PAUHWND__@@A			; cbSingleStep
PUBLIC	?reStatus@@3PAUHWND__@@A			; reStatus
PUBLIC	?cbStop@@3PAUHWND__@@A				; cbStop
PUBLIC	?cbDisplayStatus@@3PAUHWND__@@A			; cbDisplayStatus
PUBLIC	?bmpLEDOff@@3PAUHBITMAP__@@A			; bmpLEDOff
PUBLIC	?textMPE0Pcexec@@3PAUHWND__@@A			; textMPE0Pcexec
PUBLIC	?textMPE2@@3PAUHWND__@@A			; textMPE2
PUBLIC	?cbReset@@3PAUHWND__@@A				; cbReset
PUBLIC	?cbMPEStatus@@3PAUHWND__@@A			; cbMPEStatus
PUBLIC	?nuonEnv@@3PAVNuonEnvironment@@A		; nuonEnv
PUBLIC	?csVideoDisplay@@3PAVCriticalSection@@A		; csVideoDisplay
PUBLIC	?csDebugDisplay@@3PAVCriticalSection@@A		; csDebugDisplay
PUBLIC	?pArgs@@3PAPADA					; pArgs
PUBLIC	?bQuit@@3_NA					; bQuit
PUBLIC	?whichController@@3KA				; whichController
PUBLIC	?disassemblyMPE@@3KA				; disassemblyMPE
PUBLIC	?whichStatus@@3KA				; whichStatus
PUBLIC	?displayWindowTitle@@3PADA			; displayWindowTitle
_BSS	SEGMENT
?picMPE1LED@@3PAUHWND__@@A DD 01H DUP (?)		; picMPE1LED
?textMPE1Pcexec@@3PAUHWND__@@A DD 01H DUP (?)		; textMPE1Pcexec
?textMPE1@@3PAUHWND__@@A DD 01H DUP (?)			; textMPE1
?bRun@@3_NA DB	01H DUP (?)				; bRun
	ALIGN	4

?textMPE2Pcexec@@3PAUHWND__@@A DD 01H DUP (?)		; textMPE2Pcexec
?display@@3PAVGLWindow@@A DD 01H DUP (?)		; display
?cbDumpMPEs@@3PAUHWND__@@A DD 01H DUP (?)		; cbDumpMPEs
?ofn@@3UtagOFNA@@A DB 04cH DUP (?)			; ofn
?openFileName@@3PADA DB 0200H DUP (?)			; openFileName
?textMPE0@@3PAUHWND__@@A DD 01H DUP (?)			; textMPE0
?bmpLEDOn@@3PAUHBITMAP__@@A DD 01H DUP (?)		; bmpLEDOn
?cbRun@@3PAUHWND__@@A DD 01H DUP (?)			; cbRun
?textMPE3Pcexec@@3PAUHWND__@@A DD 01H DUP (?)		; textMPE3Pcexec
?cbCommStatus@@3PAUHWND__@@A DD 01H DUP (?)		; cbCommStatus
?picMPE3LED@@3PAUHWND__@@A DD 01H DUP (?)		; picMPE3LED
?picMPE0LED@@3PAUHWND__@@A DD 01H DUP (?)		; picMPE0LED
?reTermDisplay@@3PAUHWND__@@A DD 01H DUP (?)		; reTermDisplay
?cbLoadFile@@3PAUHWND__@@A DD 01H DUP (?)		; cbLoadFile
?textMPE3@@3PAUHWND__@@A DD 01H DUP (?)			; textMPE3
?bClosingApplication@@3_NA DB 01H DUP (?)		; bClosingApplication
	ALIGN	4

?picMPE2LED@@3PAUHWND__@@A DD 01H DUP (?)		; picMPE2LED
?iconApp@@3PAUHICON__@@A DD 01H DUP (?)			; iconApp
?cbSingleStep@@3PAUHWND__@@A DD 01H DUP (?)		; cbSingleStep
?reStatus@@3PAUHWND__@@A DD 01H DUP (?)			; reStatus
?cbStop@@3PAUHWND__@@A DD 01H DUP (?)			; cbStop
?cbDisplayStatus@@3PAUHWND__@@A DD 01H DUP (?)		; cbDisplayStatus
?bmpLEDOff@@3PAUHBITMAP__@@A DD 01H DUP (?)		; bmpLEDOff
?textMPE0Pcexec@@3PAUHWND__@@A DD 01H DUP (?)		; textMPE0Pcexec
?textMPE2@@3PAUHWND__@@A DD 01H DUP (?)			; textMPE2
?cbReset@@3PAUHWND__@@A DD 01H DUP (?)			; cbReset
?cbMPEStatus@@3PAUHWND__@@A DD 01H DUP (?)		; cbMPEStatus
?nuonEnv@@3PAVNuonEnvironment@@A DD 01H DUP (?)		; nuonEnv
?csVideoDisplay@@3PAVCriticalSection@@A DD 01H DUP (?)	; csVideoDisplay
?csDebugDisplay@@3PAVCriticalSection@@A DD 01H DUP (?)	; csDebugDisplay
?pArgs@@3PAPADA DD 01H DUP (?)				; pArgs
?bQuit@@3_NA DB	01H DUP (?)				; bQuit
	ALIGN	4

?whichStatus@@3KA DD 01H DUP (?)			; whichStatus
_BSS	ENDS
_DATA	SEGMENT
__bad_alloc_Message DD FLAT:$SG73326
?whichController@@3KA DD 01H				; whichController
?disassemblyMPE@@3KA DD 03H				; disassemblyMPE
?displayWindowTitle@@3PADA DB 'Nuance Video Display', 00H ; displayWindowTitle
_DATA	ENDS
CONST	SEGMENT
$SG73326 DB	'bad allocation', 00H
	ORG $+1
$SG77795 DB	'Pending Comm Requests = %lu', 0aH, 00H
	ORG $+3
$SG77796 DB	'MPE0 commctl = $%8.8lx, commxmit0 = $%lx, commrecv0 = $%'
	DB	'lx, comminfo = $%lx', 0aH, 00H
	ORG $+3
$SG77797 DB	'MPE1 commctl = $%8.8lx, commxmit0 = $%lx, commrecv0 = $%'
	DB	'lx, comminfo = $%lx', 0aH, 00H
	ORG $+3
$SG77798 DB	'MPE2 commctl = $%8.8lx, commxmit0 = $%lx, commrecv0 = $%'
	DB	'lx, comminfo = $%lx', 0aH, 00H
	ORG $+3
$SG77799 DB	'MPE3 commctl = $%8.8lx, commxmit0 = $%lx, commrecv0 = $%'
	DB	'lx, comminfo = $%lx', 0aH, 00H
	ORG $+3
$SG77802 DB	'ON', 00H
	ORG $+1
$SG77803 DB	'OFF', 00H
$SG77804 DB	'ON', 00H
	ORG $+1
$SG77805 DB	'OFF', 00H
$SG77806 DB	'Main Channel = %s : Overlay Channel = %s', 0aH, 00H
	ORG $+6
$SG77807 DB	'Main Channel texture coordinates = (%.3f %.3f), (%.3f %.'
	DB	'3f), (%.3f %.3f), (%.3f %.3f)', 0aH, 00H
	ORG $+1
$SG77808 DB	'Overlay Channel texture coordinates = (%.3f %.3f), (%.3f'
	DB	' %.3f), (%.3f %.3f), (%.3f %.3f)', 0aH, 00H
	ORG $+6
$SG77809 DB	'Main Channel pixel type = %lu, Overlay Channel pixel typ'
	DB	'e = %lu', 0aH, 00H
	ORG $+3
$SG77810 DB	'Main Channel base = $%8.8lx, Overlay Channel base = $%8.'
	DB	'8lx', 0aH, 00H
	ORG $+3
$SG77811 DB	'Main Channel src_width = %lu, Main Channel src_height = '
	DB	'%lu', 0aH, 00H
	ORG $+3
$SG77812 DB	'Main Channel dest_width = %lu, Main Channel dest_height '
	DB	'= %lu', 0aH, 00H
	ORG $+1
$SG77813 DB	'Main Channel src_xoff = %lu, Main Channel src_yoff = %lu'
	DB	0aH, 00H
	ORG $+2
$SG77814 DB	'Main Channel dest_xoff = %lu, Main Channel dest_yoff = %'
	DB	'lu', 0aH, 00H
$SG77822 DB	'Non-compilable packets: (%d, %d, %d, %d)', 0aH, 00H
	ORG $+2
$SG77815 DB	'Overlay Channel src_width = %lu, Overlay Channel src_hei'
	DB	'ght = %lu', 0aH, 00H
	ORG $+5
$SG77816 DB	'Overlay Channel dest_width = %lu, Overlay Channel dest_h'
	DB	'eight = %lu', 0aH, 00H
	ORG $+3
$SG77817 DB	'Overlay Channel src_xoff = %lu, Overlay Channel src_yoff'
	DB	' = %lu', 0aH, 00H
$SG77818 DB	'Overlay Channel dest_xoff = %lu, Overlay Channel dest_yo'
	DB	'ff = %lu', 0aH, 00H
	ORG $+2
$SG77820 DB	'Interpreter cache flushes: (%d, %d, %d, %d)', 0aH, 00H
	ORG $+3
$SG77821 DB	'Native code cache flushes: (%d, %d, %d, %d)', 0aH, 00H
	ORG $+3
$SG77823 DB	'Overlays in use: (%d, %d, %d, %d)', 0aH, 00H
	ORG $+1
$SG77824 DB	'MPE3 invec1 = $%8.8lx, intvec2 = $%8.8lx', 0aH, 00H
	ORG $+2
$SG77825 DB	'MPE3 intctl = $%8.8lx, inten1 = $%8.8lx, inten2sel = $%8'
	DB	'.8lx', 0aH, 00H
	ORG $+2
$SG77826 DB	'MPE3 intsrc = $%8.8lx, excepsrc = $%8.8lx', 0aH, 00H
	ORG $+1
$SG77827 DB	'MPE2 invec1 = $%8.8lx, intvec2 = $%8.8lx', 0aH, 00H
	ORG $+2
$SG77828 DB	'MPE2 intctl = $%8.8lx, inten1 = $%8.8lx, inten2sel = $%8'
	DB	'.8lx', 0aH, 00H
	ORG $+2
$SG77829 DB	'MPE2 intsrc = $%8.8lx, excepsrc = $%8.8lx', 0aH, 00H
	ORG $+1
$SG77830 DB	'MPE1 invec1 = $%8.8lx, intvec2 = $%8.8lx', 0aH, 00H
	ORG $+2
$SG77831 DB	'MPE1 intctl = $%8.8lx, inten1 = $%8.8lx, inten2sel = $%8'
	DB	'.8lx', 0aH, 00H
	ORG $+2
$SG77832 DB	'MPE1 intsrc = $%8.8lx, excepsrc = $%8.8lx', 0aH, 00H
	ORG $+1
$SG77833 DB	'MPE0 invec1 = $%8.8lx, intvec2 = $%8.8lx', 0aH, 00H
	ORG $+2
$SG77834 DB	'MPE0 intctl = $%8.8lx, inten1 = $%8.8lx, inten2sel = $%8'
	DB	'.8lx', 0aH, 00H
	ORG $+2
$SG77835 DB	'MPE0 intsrc = $%8.8lx, excepsrc = $%8.8lx', 0aH, 00H
	ORG $+1
$SG77836 DB	'Stack pointers = [$%8.8lx, $%8.8lx, $%8.8lx, $%8.8lx]', 0aH
	DB	00H
	ORG $+1
$SG77837 DB	'v0: = ($%8.8lx, $%8.8lx, $%8.8lx, $%8.8lx}', 0aH, 00H
$SG77838 DB	'v1: = ($%8.8lx, $%8.8lx, $%8.8lx, $%8.8lx}', 0aH, 00H
$SG77839 DB	'v2: = ($%8.8lx, $%8.8lx, $%8.8lx, $%8.8lx}', 0aH, 00H
$SG77840 DB	'v7: = ($%8.8lx, $%8.8lx, $%8.8lx, $%8.8lx}', 0aH, 00H
$SG77841 DB	'rx/ry/ru/rv: = ($%8.8lx, $%8.8lx, $%8.8lx, $%8.8lx}', 0aH
	DB	00H
	ORG $+3
$SG77842 DB	'rz/rzi1/rzi2: = ($%8.8lx, $%8.8lx, $%8.8lx}', 0aH, 00H
	ORG $+3
$SG77856 DB	'$%8.8lX', 00H
$SG77857 DB	'mpe%lu: $%8.8X', 0aH, '{', 0aH, 00H
	ORG $+2
$SG77858 DB	'}', 0aH, 00H
	ORG $+1
$SG77905 DB	'wb', 00H
	ORG $+1
$SG77906 DB	'mpe0.bin', 00H
	ORG $+3
$SG77909 DB	'wb', 00H
	ORG $+1
$SG77910 DB	'mpe1.bin', 00H
	ORG $+3
$SG77913 DB	'wb', 00H
	ORG $+1
$SG77914 DB	'mpe2.bin', 00H
	ORG $+3
$SG77917 DB	'wb', 00H
	ORG $+1
$SG77918 DB	'mpe3.bin', 00H
	ORG $+3
$SG77949 DB	'r', 00H
	ORG $+2
$SG77950 DB	'breakpoint.txt', 00H
	ORG $+1
$SG77952 DB	'%x', 00H
	ORG $+1
$SG77971 DB	'Invalid COFF or NUONROM-DISK file', 00H
	ORG $+2
$SG78128 DB	'Error', 00H
	ORG $+2
$SG78130 DB	'Riched20.dll', 00H
CONST	ENDS
PUBLIC	?GetMPERunStatus@@YA_NI@Z			; GetMPERunStatus
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\nuanceexperimental\nuancemain.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_which$ = 8						; size = 4
?GetMPERunStatus@@YA_NI@Z PROC				; GetMPERunStatus

; 73   : {

	push	ebp
	mov	ebp, esp

; 74   :   return (nuonEnv->mpe[which & 0x03]->mpectl & MPECTRL_MPEGO) != 0;

	mov	eax, DWORD PTR _which$[ebp]
	and	eax, 3
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+384]
	and	eax, 2
	neg	eax
	sbb	eax, eax
	neg	eax

; 75   : }

	pop	ebp
	ret	0
?GetMPERunStatus@@YA_NI@Z ENDP				; GetMPERunStatus
_TEXT	ENDS
PUBLIC	?SetMPERunStatus@@YAXI_N@Z			; SetMPERunStatus
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_which$ = 8						; size = 4
_bRun$ = 12						; size = 1
?SetMPERunStatus@@YAXI_N@Z PROC				; SetMPERunStatus

; 78   : {

	push	ebp
	mov	ebp, esp

; 79   :   if(bRun)

	movzx	eax, BYTE PTR _bRun$[ebp]
	test	eax, eax
	je	SHORT $LN2@SetMPERunS

; 80   :   {
; 81   :     nuonEnv->mpe[which & 0x03]->mpectl |= MPECTRL_MPEGO;

	mov	ecx, DWORD PTR _which$[ebp]
	and	ecx, 3
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR [eax+384]
	or	ecx, 2
	mov	edx, DWORD PTR _which$[ebp]
	and	edx, 3
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [edx+384], ecx

; 82   :   }
; 83   :   else

	jmp	SHORT $LN3@SetMPERunS
$LN2@SetMPERunS:

; 84   :   {
; 85   :     nuonEnv->mpe[which & 0x03]->mpectl &= ~MPECTRL_MPEGO;

	mov	eax, DWORD PTR _which$[ebp]
	and	eax, 3
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+384]
	and	eax, -3					; fffffffdH
	mov	ecx, DWORD PTR _which$[ebp]
	and	ecx, 3
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR [ecx+384], eax
$LN3@SetMPERunS:

; 86   :   }
; 87   : }

	pop	ebp
	ret	0
?SetMPERunStatus@@YAXI_N@Z ENDP				; SetMPERunStatus
_TEXT	ENDS
PUBLIC	?GetOverlaysInUse@OverlayManager@@QAEIXZ	; OverlayManager::GetOverlaysInUse
PUBLIC	?UpdateStatusWindowDisplay@@YAXXZ		; UpdateStatusWindowDisplay
EXTRN	?structMainChannel@@3UVidChannel@@A:BYTE	; structMainChannel
EXTRN	?structOverlayChannel@@3UVidChannel@@A:BYTE	; structOverlayChannel
EXTRN	?videoTexInfo@@3UvidTexInfo@@A:BYTE		; videoTexInfo
EXTRN	?bMainChannelActive@@3_NA:BYTE			; bMainChannelActive
EXTRN	?bOverlayChannelActive@@3_NA:BYTE		; bOverlayChannelActive
EXTRN	__imp__SendMessageA@16:PROC
EXTRN	_sprintf:PROC
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
;	COMDAT ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
_BSS	SEGMENT
?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA DB 0400H DUP (?) ; `UpdateStatusWindowDisplay'::`2'::buf
; Function compile flags: /Odtp /RTCsu
_BSS	ENDS
_TEXT	SEGMENT
tv197 = -8						; size = 4
tv193 = -4						; size = 4
?UpdateStatusWindowDisplay@@YAXXZ PROC			; UpdateStatusWindowDisplay

; 90   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 91   :   static char buf[1024];
; 92   : 
; 93   :   if(whichStatus == 0)

	cmp	DWORD PTR ?whichStatus@@3KA, 0		; whichStatus
	jne	$LN4@UpdateStat

; 94   :   {
; 95   :     sprintf(buf,"Pending Comm Requests = %lu\n",nuonEnv->pendingCommRequests);

	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	push	OFFSET $SG77795
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 12					; 0000000cH

; 96   :     SendMessage(reStatus,WM_SETTEXT,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	12					; 0000000cH
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 97   :     sprintf(buf,"MPE0 commctl = $%8.8lx, commxmit0 = $%lx, commrecv0 = $%lx, comminfo = $%lx\n",nuonEnv->mpe[0]->commctl,nuonEnv->mpe[0]->commxmit0,nuonEnv->mpe[0]->commrecv0,nuonEnv->mpe[0]->comminfo);

	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+488]
	push	edx
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+512]
	push	edx
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+496]
	push	edx
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+492]
	push	edx
	push	OFFSET $SG77796
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 24					; 00000018H

; 98   :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 99   :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 100  :     sprintf(buf,"MPE1 commctl = $%8.8lx, commxmit0 = $%lx, commrecv0 = $%lx, comminfo = $%lx\n",nuonEnv->mpe[1]->commctl,nuonEnv->mpe[1]->commxmit0,nuonEnv->mpe[1]->commrecv0,nuonEnv->mpe[1]->comminfo);

	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+488]
	push	ecx
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+512]
	push	ecx
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+496]
	push	ecx
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+492]
	push	ecx
	push	OFFSET $SG77797
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 24					; 00000018H

; 101  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 102  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 103  :     sprintf(buf,"MPE2 commctl = $%8.8lx, commxmit0 = $%lx, commrecv0 = $%lx, comminfo = $%lx\n",nuonEnv->mpe[2]->commctl,nuonEnv->mpe[2]->commxmit0,nuonEnv->mpe[2]->commrecv0,nuonEnv->mpe[2]->comminfo);

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+488]
	push	eax
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+512]
	push	eax
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+496]
	push	eax
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+492]
	push	eax
	push	OFFSET $SG77798
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 24					; 00000018H

; 104  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 105  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 106  :     sprintf(buf,"MPE3 commctl = $%8.8lx, commxmit0 = $%lx, commrecv0 = $%lx, comminfo = $%lx\n",nuonEnv->mpe[3]->commctl,nuonEnv->mpe[3]->commxmit0,nuonEnv->mpe[3]->commrecv0,nuonEnv->mpe[3]->comminfo);

	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+488]
	push	edx
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+512]
	push	edx
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+496]
	push	edx
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+492]
	push	edx
	push	OFFSET $SG77799
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 24					; 00000018H

; 107  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 108  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN1@UpdateStat
$LN4@UpdateStat:

; 109  :   }
; 110  :   else if(whichStatus == 1)

	cmp	DWORD PTR ?whichStatus@@3KA, 1		; whichStatus
	jne	$LN2@UpdateStat

; 111  :   {
; 112  :     sprintf(buf,"Main Channel = %s : Overlay Channel = %s\n",bMainChannelActive ? "ON" : "OFF",bOverlayChannelActive ? "ON" : "OFF");

	movzx	edx, BYTE PTR ?bOverlayChannelActive@@3_NA ; bOverlayChannelActive
	test	edx, edx
	je	SHORT $LN7@UpdateStat
	mov	DWORD PTR tv193[ebp], OFFSET $SG77802
	jmp	SHORT $LN8@UpdateStat
$LN7@UpdateStat:
	mov	DWORD PTR tv193[ebp], OFFSET $SG77803
$LN8@UpdateStat:
	movzx	eax, BYTE PTR ?bMainChannelActive@@3_NA	; bMainChannelActive
	test	eax, eax
	je	SHORT $LN9@UpdateStat
	mov	DWORD PTR tv197[ebp], OFFSET $SG77804
	jmp	SHORT $LN10@UpdateStat
$LN9@UpdateStat:
	mov	DWORD PTR tv197[ebp], OFFSET $SG77805
$LN10@UpdateStat:
	mov	ecx, DWORD PTR tv193[ebp]
	push	ecx
	mov	edx, DWORD PTR tv197[ebp]
	push	edx
	push	OFFSET $SG77806
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 113  :     SendMessage(reStatus,WM_SETTEXT,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	12					; 0000000cH
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 114  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 115  :     sprintf(buf,"Main Channel texture coordinates = (%.3f %.3f), (%.3f %.3f), (%.3f %.3f), (%.3f %.3f)\n",
; 116  :       videoTexInfo.mainTexCoords[0],videoTexInfo.mainTexCoords[1],
; 117  :       videoTexInfo.mainTexCoords[2],videoTexInfo.mainTexCoords[3],
; 118  :       videoTexInfo.mainTexCoords[4],videoTexInfo.mainTexCoords[5],
; 119  :       videoTexInfo.mainTexCoords[6],videoTexInfo.mainTexCoords[7]);

	fld	DWORD PTR ?videoTexInfo@@3UvidTexInfo@@A+96
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR ?videoTexInfo@@3UvidTexInfo@@A+92
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR ?videoTexInfo@@3UvidTexInfo@@A+88
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR ?videoTexInfo@@3UvidTexInfo@@A+84
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR ?videoTexInfo@@3UvidTexInfo@@A+80
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR ?videoTexInfo@@3UvidTexInfo@@A+76
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR ?videoTexInfo@@3UvidTexInfo@@A+72
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR ?videoTexInfo@@3UvidTexInfo@@A+68
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG77807
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 72					; 00000048H

; 120  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 121  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 122  :     sprintf(buf,"Overlay Channel texture coordinates = (%.3f %.3f), (%.3f %.3f), (%.3f %.3f), (%.3f %.3f)\n",
; 123  :       videoTexInfo.osdTexCoords[0],videoTexInfo.osdTexCoords[1],
; 124  :       videoTexInfo.osdTexCoords[2],videoTexInfo.osdTexCoords[3],
; 125  :       videoTexInfo.osdTexCoords[4],videoTexInfo.osdTexCoords[5],
; 126  :       videoTexInfo.osdTexCoords[6],videoTexInfo.osdTexCoords[7]);

	fld	DWORD PTR ?videoTexInfo@@3UvidTexInfo@@A+128
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR ?videoTexInfo@@3UvidTexInfo@@A+124
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR ?videoTexInfo@@3UvidTexInfo@@A+120
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR ?videoTexInfo@@3UvidTexInfo@@A+116
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR ?videoTexInfo@@3UvidTexInfo@@A+112
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR ?videoTexInfo@@3UvidTexInfo@@A+108
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR ?videoTexInfo@@3UvidTexInfo@@A+104
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR ?videoTexInfo@@3UvidTexInfo@@A+100
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG77808
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 72					; 00000048H

; 127  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 128  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 129  :     sprintf(buf,"Main Channel pixel type = %lu, Overlay Channel pixel type = %lu\n",(structMainChannel.dmaflags >> 4) & 0xF,(structOverlayChannel.dmaflags >> 4) & 0xF);

	mov	eax, DWORD PTR ?structOverlayChannel@@3UVidChannel@@A
	sar	eax, 4
	and	eax, 15					; 0000000fH
	push	eax
	mov	ecx, DWORD PTR ?structMainChannel@@3UVidChannel@@A
	sar	ecx, 4
	and	ecx, 15					; 0000000fH
	push	ecx
	push	OFFSET $SG77809
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 130  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 131  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 132  :     sprintf(buf,"Main Channel base = $%8.8lx, Overlay Channel base = $%8.8lx\n",(structMainChannel.base),(structOverlayChannel.base));

	mov	ecx, DWORD PTR ?structOverlayChannel@@3UVidChannel@@A+4
	push	ecx
	mov	edx, DWORD PTR ?structMainChannel@@3UVidChannel@@A+4
	push	edx
	push	OFFSET $SG77810
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 133  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 134  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 135  :     sprintf(buf,"Main Channel src_width = %lu, Main Channel src_height = %lu\n",(structMainChannel.src_width),(structMainChannel.src_height));

	mov	edx, DWORD PTR ?structMainChannel@@3UVidChannel@@A+36
	push	edx
	mov	eax, DWORD PTR ?structMainChannel@@3UVidChannel@@A+32
	push	eax
	push	OFFSET $SG77811
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 136  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 137  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 138  :     sprintf(buf,"Main Channel dest_width = %lu, Main Channel dest_height = %lu\n",(structMainChannel.dest_width),(structMainChannel.dest_height));

	mov	eax, DWORD PTR ?structMainChannel@@3UVidChannel@@A+20
	push	eax
	mov	ecx, DWORD PTR ?structMainChannel@@3UVidChannel@@A+16
	push	ecx
	push	OFFSET $SG77812
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 139  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 140  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 141  :     sprintf(buf,"Main Channel src_xoff = %lu, Main Channel src_yoff = %lu\n",(structMainChannel.src_xoff),(structMainChannel.src_yoff));

	mov	ecx, DWORD PTR ?structMainChannel@@3UVidChannel@@A+28
	push	ecx
	mov	edx, DWORD PTR ?structMainChannel@@3UVidChannel@@A+24
	push	edx
	push	OFFSET $SG77813
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 142  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 143  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 144  :     sprintf(buf,"Main Channel dest_xoff = %lu, Main Channel dest_yoff = %lu\n",(structMainChannel.dest_xoff),(structMainChannel.dest_yoff));

	mov	edx, DWORD PTR ?structMainChannel@@3UVidChannel@@A+12
	push	edx
	mov	eax, DWORD PTR ?structMainChannel@@3UVidChannel@@A+8
	push	eax
	push	OFFSET $SG77814
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 145  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 146  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 147  :     sprintf(buf,"Overlay Channel src_width = %lu, Overlay Channel src_height = %lu\n",(structOverlayChannel.src_width),(structOverlayChannel.src_height));

	mov	eax, DWORD PTR ?structOverlayChannel@@3UVidChannel@@A+36
	push	eax
	mov	ecx, DWORD PTR ?structOverlayChannel@@3UVidChannel@@A+32
	push	ecx
	push	OFFSET $SG77815
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 148  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 149  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 150  :     sprintf(buf,"Overlay Channel dest_width = %lu, Overlay Channel dest_height = %lu\n",(structOverlayChannel.dest_width),(structOverlayChannel.dest_height));

	mov	ecx, DWORD PTR ?structOverlayChannel@@3UVidChannel@@A+20
	push	ecx
	mov	edx, DWORD PTR ?structOverlayChannel@@3UVidChannel@@A+16
	push	edx
	push	OFFSET $SG77816
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 151  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 152  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 153  :     sprintf(buf,"Overlay Channel src_xoff = %lu, Overlay Channel src_yoff = %lu\n",(structOverlayChannel.src_xoff),(structOverlayChannel.src_yoff));

	mov	edx, DWORD PTR ?structOverlayChannel@@3UVidChannel@@A+28
	push	edx
	mov	eax, DWORD PTR ?structOverlayChannel@@3UVidChannel@@A+24
	push	eax
	push	OFFSET $SG77817
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 154  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 155  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 156  :     sprintf(buf,"Overlay Channel dest_xoff = %lu, Overlay Channel dest_yoff = %lu\n",(structOverlayChannel.dest_xoff),(structOverlayChannel.dest_yoff));

	mov	eax, DWORD PTR ?structOverlayChannel@@3UVidChannel@@A+12
	push	eax
	mov	ecx, DWORD PTR ?structOverlayChannel@@3UVidChannel@@A+8
	push	ecx
	push	OFFSET $SG77818
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 157  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 158  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 159  :   }
; 160  :   else

	jmp	$LN1@UpdateStat
$LN2@UpdateStat:

; 161  :   {
; 162  :     sprintf(buf,"Interpreter cache flushes: (%d, %d, %d, %d)\n",
; 163  :       nuonEnv->mpe[0]->numInterpreterCacheFlushes,
; 164  :       nuonEnv->mpe[1]->numInterpreterCacheFlushes,
; 165  :       nuonEnv->mpe[2]->numInterpreterCacheFlushes,
; 166  :       nuonEnv->mpe[3]->numInterpreterCacheFlushes);

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+644]
	push	eax
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+644]
	push	eax
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+644]
	push	eax
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+644]
	push	eax
	push	OFFSET $SG77820
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 24					; 00000018H

; 167  :     SendMessage(reStatus,WM_SETTEXT,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	12					; 0000000cH
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 168  :     sprintf(buf,"Native code cache flushes: (%d, %d, %d, %d)\n",
; 169  :       nuonEnv->mpe[0]->numNativeCodeCacheFlushes,
; 170  :       nuonEnv->mpe[1]->numNativeCodeCacheFlushes,
; 171  :       nuonEnv->mpe[2]->numNativeCodeCacheFlushes,
; 172  :       nuonEnv->mpe[3]->numNativeCodeCacheFlushes);

	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+648]
	push	ecx
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+648]
	push	ecx
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+648]
	push	ecx
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+648]
	push	ecx
	push	OFFSET $SG77821
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 24					; 00000018H

; 173  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 174  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 175  :     sprintf(buf,"Non-compilable packets: (%d, %d, %d, %d)\n",
; 176  :       nuonEnv->mpe[0]->numNonCompilablePackets,
; 177  :       nuonEnv->mpe[1]->numNonCompilablePackets,
; 178  :       nuonEnv->mpe[2]->numNonCompilablePackets,
; 179  :       nuonEnv->mpe[3]->numNonCompilablePackets);

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+652]
	push	eax
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+652]
	push	eax
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+652]
	push	eax
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+652]
	push	eax
	push	OFFSET $SG77822
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 24					; 00000018H

; 180  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 181  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 182  :     sprintf(buf,"Overlays in use: (%d, %d, %d, %d)\n",
; 183  :       nuonEnv->mpe[0]->overlayManager->GetOverlaysInUse(),
; 184  :       nuonEnv->mpe[1]->overlayManager->GetOverlaysInUse(),
; 185  :       nuonEnv->mpe[2]->overlayManager->GetOverlaysInUse(),
; 186  :       nuonEnv->mpe[3]->overlayManager->GetOverlaysInUse());     

	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [ecx+684]
	call	?GetOverlaysInUse@OverlayManager@@QAEIXZ ; OverlayManager::GetOverlaysInUse
	push	eax
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+684]
	call	?GetOverlaysInUse@OverlayManager@@QAEIXZ ; OverlayManager::GetOverlaysInUse
	push	eax
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+684]
	call	?GetOverlaysInUse@OverlayManager@@QAEIXZ ; OverlayManager::GetOverlaysInUse
	push	eax
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+684]
	call	?GetOverlaysInUse@OverlayManager@@QAEIXZ ; OverlayManager::GetOverlaysInUse
	push	eax
	push	OFFSET $SG77823
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 24					; 00000018H

; 187  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 188  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 189  :     sprintf(buf,"MPE3 invec1 = $%8.8lx, intvec2 = $%8.8lx\n",nuonEnv->mpe[3]->intvec1,nuonEnv->mpe[3]->intvec2);

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+416]
	push	eax
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+412]
	push	eax
	push	OFFSET $SG77824
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 190  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 191  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 192  :     sprintf(buf,"MPE3 intctl = $%8.8lx, inten1 = $%8.8lx, inten2sel = $%8.8lx\n",nuonEnv->mpe[3]->intctl,nuonEnv->mpe[3]->inten1,nuonEnv->mpe[3]->inten2sel);

	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+444]
	push	edx
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+432]
	push	edx
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+428]
	push	edx
	push	OFFSET $SG77825
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 20					; 00000014H

; 193  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 194  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 195  :     sprintf(buf,"MPE3 intsrc = $%8.8lx, excepsrc = $%8.8lx\n",nuonEnv->mpe[3]->intsrc,nuonEnv->mpe[3]->excepsrc);

	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+388]
	push	ecx
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+420]
	push	ecx
	push	OFFSET $SG77826
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 196  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 197  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 198  :     sprintf(buf,"MPE2 invec1 = $%8.8lx, intvec2 = $%8.8lx\n",nuonEnv->mpe[2]->intvec1,nuonEnv->mpe[2]->intvec2);

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+416]
	push	eax
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+412]
	push	eax
	push	OFFSET $SG77827
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 199  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 200  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 201  :     sprintf(buf,"MPE2 intctl = $%8.8lx, inten1 = $%8.8lx, inten2sel = $%8.8lx\n",nuonEnv->mpe[2]->intctl,nuonEnv->mpe[2]->inten1,nuonEnv->mpe[2]->inten2sel);

	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+444]
	push	edx
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+432]
	push	edx
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+428]
	push	edx
	push	OFFSET $SG77828
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 20					; 00000014H

; 202  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 203  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 204  :     sprintf(buf,"MPE2 intsrc = $%8.8lx, excepsrc = $%8.8lx\n",nuonEnv->mpe[2]->intsrc,nuonEnv->mpe[2]->excepsrc);

	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+388]
	push	ecx
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+420]
	push	ecx
	push	OFFSET $SG77829
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 205  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 206  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 207  :     sprintf(buf,"MPE1 invec1 = $%8.8lx, intvec2 = $%8.8lx\n",nuonEnv->mpe[1]->intvec1,nuonEnv->mpe[1]->intvec2);

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+416]
	push	eax
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+412]
	push	eax
	push	OFFSET $SG77830
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 208  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 209  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 210  :     sprintf(buf,"MPE1 intctl = $%8.8lx, inten1 = $%8.8lx, inten2sel = $%8.8lx\n",nuonEnv->mpe[1]->intctl,nuonEnv->mpe[1]->inten1,nuonEnv->mpe[1]->inten2sel);

	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+444]
	push	edx
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+432]
	push	edx
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+428]
	push	edx
	push	OFFSET $SG77831
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 20					; 00000014H

; 211  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 212  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 213  :     sprintf(buf,"MPE1 intsrc = $%8.8lx, excepsrc = $%8.8lx\n",nuonEnv->mpe[1]->intsrc,nuonEnv->mpe[1]->excepsrc);

	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+388]
	push	ecx
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+420]
	push	ecx
	push	OFFSET $SG77832
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 214  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 215  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 216  :     sprintf(buf,"MPE0 invec1 = $%8.8lx, intvec2 = $%8.8lx\n",nuonEnv->mpe[0]->intvec1,nuonEnv->mpe[0]->intvec2);

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+416]
	push	eax
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+412]
	push	eax
	push	OFFSET $SG77833
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 217  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 218  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 219  :     sprintf(buf,"MPE0 intctl = $%8.8lx, inten1 = $%8.8lx, inten2sel = $%8.8lx\n",nuonEnv->mpe[0]->intctl,nuonEnv->mpe[0]->inten1,nuonEnv->mpe[0]->inten2sel);

	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+444]
	push	edx
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+432]
	push	edx
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+428]
	push	edx
	push	OFFSET $SG77834
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 20					; 00000014H

; 220  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 221  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 222  :     sprintf(buf,"MPE0 intsrc = $%8.8lx, excepsrc = $%8.8lx\n",nuonEnv->mpe[0]->intsrc,nuonEnv->mpe[0]->excepsrc);

	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+388]
	push	ecx
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+420]
	push	ecx
	push	OFFSET $SG77835
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 223  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 224  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 225  :     sprintf(buf,"Stack pointers = [$%8.8lx, $%8.8lx, $%8.8lx, $%8.8lx]\n",nuonEnv->mpe[0]->sp,nuonEnv->mpe[1]->sp,nuonEnv->mpe[2]->sp,nuonEnv->mpe[3]->sp);

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+464]
	push	eax
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+464]
	push	eax
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+464]
	push	eax
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+464]
	push	eax
	push	OFFSET $SG77836
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 24					; 00000018H

; 226  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 227  :     sprintf(buf,"v0: = ($%8.8lx, $%8.8lx, $%8.8lx, $%8.8lx}\n",nuonEnv->mpe[disassemblyMPE]->regs[0],nuonEnv->mpe[disassemblyMPE]->regs[1],nuonEnv->mpe[disassemblyMPE]->regs[2],nuonEnv->mpe[disassemblyMPE]->regs[3]);

	mov	edx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET $SG77837
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 24					; 00000018H

; 228  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 229  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 230  :     sprintf(buf,"v1: = ($%8.8lx, $%8.8lx, $%8.8lx, $%8.8lx}\n",nuonEnv->mpe[disassemblyMPE]->regs[4],nuonEnv->mpe[disassemblyMPE]->regs[5],nuonEnv->mpe[disassemblyMPE]->regs[6],nuonEnv->mpe[disassemblyMPE]->regs[7]);

	mov	edx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	push	OFFSET $SG77838
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 24					; 00000018H

; 231  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 232  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 233  :     sprintf(buf,"v2: = ($%8.8lx, $%8.8lx, $%8.8lx, $%8.8lx}\n",nuonEnv->mpe[disassemblyMPE]->regs[8],nuonEnv->mpe[disassemblyMPE]->regs[9],nuonEnv->mpe[disassemblyMPE]->regs[10],nuonEnv->mpe[disassemblyMPE]->regs[11]);

	mov	edx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	mov	eax, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+40]
	push	eax
	mov	ecx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	push	OFFSET $SG77839
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 24					; 00000018H

; 234  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 235  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 236  :     sprintf(buf,"v7: = ($%8.8lx, $%8.8lx, $%8.8lx, $%8.8lx}\n",nuonEnv->mpe[disassemblyMPE]->regs[28],nuonEnv->mpe[disassemblyMPE]->regs[29],nuonEnv->mpe[disassemblyMPE]->regs[30],nuonEnv->mpe[disassemblyMPE]->regs[31]);

	mov	edx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	mov	eax, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+120]
	push	eax
	mov	ecx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR [eax+116]
	push	ecx
	mov	edx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR [ecx+112]
	push	edx
	push	OFFSET $SG77840
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 24					; 00000018H

; 237  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 238  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 239  :     sprintf(buf,"rx/ry/ru/rv: = ($%8.8lx, $%8.8lx, $%8.8lx, $%8.8lx}\n",nuonEnv->mpe[disassemblyMPE]->rx,nuonEnv->mpe[disassemblyMPE]->ry,nuonEnv->mpe[disassemblyMPE]->ru,nuonEnv->mpe[disassemblyMPE]->rv);

	mov	edx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR [ecx+152]
	push	edx
	mov	eax, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+148]
	push	eax
	mov	ecx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR [eax+144]
	push	ecx
	mov	edx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR [ecx+140]
	push	edx
	push	OFFSET $SG77841
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 24					; 00000018H

; 240  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 241  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 242  :     sprintf(buf,"rz/rzi1/rzi2: = ($%8.8lx, $%8.8lx, $%8.8lx}\n",nuonEnv->mpe[disassemblyMPE]->rz,nuonEnv->mpe[disassemblyMPE]->rzi1,nuonEnv->mpe[disassemblyMPE]->rzi2);

	mov	edx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR [ecx+164]
	push	edx
	mov	eax, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+160]
	push	eax
	mov	ecx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR [eax+156]
	push	ecx
	push	OFFSET $SG77842
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 20					; 00000014H

; 243  :     SendMessage(reStatus,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateStatusWindowDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	edx, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 244  :     SendMessage(reStatus,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	eax, DWORD PTR ?reStatus@@3PAUHWND__@@A	; reStatus
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@UpdateStat:

; 245  : 
; 246  :   }
; 247  : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateStatusWindowDisplay@@YAXXZ ENDP			; UpdateStatusWindowDisplay
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\overlaymanager.h
_TEXT	ENDS
;	COMDAT ?GetOverlaysInUse@OverlayManager@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOverlaysInUse@OverlayManager@@QAEIXZ PROC		; OverlayManager::GetOverlaysInUse, COMDAT
; _this$ = ecx

; 13   :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 14   :     return numOverlays;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 15   :   }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetOverlaysInUse@OverlayManager@@QAEIXZ ENDP		; OverlayManager::GetOverlaysInUse
_TEXT	ENDS
PUBLIC	?UpdateControlPanelDisplay@@YAXXZ		; UpdateControlPanelDisplay
EXTRN	?PrintInstructionCachePacket@MPE@@QAEXPADI@Z:PROC ; MPE::PrintInstructionCachePacket
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ?buf@?1??UpdateControlPanelDisplay@@YAXXZ@4PADA
; File c:\nuanceexperimental\nuancemain.cpp
_BSS	SEGMENT
?buf@?1??UpdateControlPanelDisplay@@YAXXZ@4PADA DB 0400H DUP (?) ; `UpdateControlPanelDisplay'::`2'::buf
; Function compile flags: /Odtp /RTCsu
_BSS	ENDS
_TEXT	SEGMENT
_addressStr$ = -68					; size = 10
_i$ = -52						; size = 4
_pcexecHandles$ = -44					; size = 16
_ledHandles$ = -20					; size = 16
?UpdateControlPanelDisplay@@YAXXZ PROC			; UpdateControlPanelDisplay

; 250  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 251  :   HWND ledHandles[] = {picMPE0LED,picMPE1LED,picMPE2LED,picMPE3LED};

	mov	eax, DWORD PTR ?picMPE0LED@@3PAUHWND__@@A ; picMPE0LED
	mov	DWORD PTR _ledHandles$[ebp], eax
	mov	ecx, DWORD PTR ?picMPE1LED@@3PAUHWND__@@A ; picMPE1LED
	mov	DWORD PTR _ledHandles$[ebp+4], ecx
	mov	edx, DWORD PTR ?picMPE2LED@@3PAUHWND__@@A ; picMPE2LED
	mov	DWORD PTR _ledHandles$[ebp+8], edx
	mov	eax, DWORD PTR ?picMPE3LED@@3PAUHWND__@@A ; picMPE3LED
	mov	DWORD PTR _ledHandles$[ebp+12], eax

; 252  :   HWND pcexecHandles[] = {textMPE0Pcexec,textMPE1Pcexec,textMPE2Pcexec,textMPE3Pcexec};

	mov	ecx, DWORD PTR ?textMPE0Pcexec@@3PAUHWND__@@A ; textMPE0Pcexec
	mov	DWORD PTR _pcexecHandles$[ebp], ecx
	mov	edx, DWORD PTR ?textMPE1Pcexec@@3PAUHWND__@@A ; textMPE1Pcexec
	mov	DWORD PTR _pcexecHandles$[ebp+4], edx
	mov	eax, DWORD PTR ?textMPE2Pcexec@@3PAUHWND__@@A ; textMPE2Pcexec
	mov	DWORD PTR _pcexecHandles$[ebp+8], eax
	mov	ecx, DWORD PTR ?textMPE3Pcexec@@3PAUHWND__@@A ; textMPE3Pcexec
	mov	DWORD PTR _pcexecHandles$[ebp+12], ecx

; 253  : 
; 254  :   uint32 i;
; 255  :   char addressStr[10];
; 256  :   static char buf[1024];
; 257  :   
; 258  :   for(i = 0; i < 4; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@UpdateCont
$LN4@UpdateCont:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN5@UpdateCont:
	cmp	DWORD PTR _i$[ebp], 4
	jae	$LN3@UpdateCont

; 259  :   {
; 260  :     if(GetMPERunStatus(i))

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	call	?GetMPERunStatus@@YA_NI@Z		; GetMPERunStatus
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@UpdateCont

; 261  :     {
; 262  :       SendMessage(ledHandles[i],STM_SETIMAGE,IMAGE_BITMAP,LPARAM(bmpLEDOn));

	mov	esi, esp
	mov	edx, DWORD PTR ?bmpLEDOn@@3PAUHBITMAP__@@A ; bmpLEDOn
	push	edx
	push	0
	push	370					; 00000172H
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _ledHandles$[ebp+eax*4]
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 263  :     }
; 264  :     else

	jmp	SHORT $LN1@UpdateCont
$LN2@UpdateCont:

; 265  :     {
; 266  :       SendMessage(ledHandles[i],STM_SETIMAGE,IMAGE_BITMAP,LPARAM(bmpLEDOff));

	mov	esi, esp
	mov	edx, DWORD PTR ?bmpLEDOff@@3PAUHBITMAP__@@A ; bmpLEDOff
	push	edx
	push	0
	push	370					; 00000172H
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _ledHandles$[ebp+eax*4]
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@UpdateCont:

; 267  :     }
; 268  :     sprintf(addressStr,"$%8.8lX",nuonEnv->mpe[i]->pcexec);

	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR [ecx+408]
	push	edx
	push	OFFSET $SG77856
	lea	eax, DWORD PTR _addressStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 269  :     SendMessage(pcexecHandles[i],WM_SETTEXT,0,LPARAM(addressStr));

	mov	esi, esp
	lea	ecx, DWORD PTR _addressStr$[ebp]
	push	ecx
	push	0
	push	12					; 0000000cH
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _pcexecHandles$[ebp+edx*4]
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 270  :   }

	jmp	$LN4@UpdateCont
$LN3@UpdateCont:

; 271  : 
; 272  : 
; 273  :   sprintf(buf,"mpe%lu: $%8.8X\n{\n", disassemblyMPE, nuonEnv->mpe[disassemblyMPE]->pcexec);

	mov	ecx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR [eax+408]
	push	ecx
	mov	edx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	push	edx
	push	OFFSET $SG77857
	push	OFFSET ?buf@?1??UpdateControlPanelDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 274  :   SendMessage(reTermDisplay,WM_SETTEXT,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateControlPanelDisplay@@YAXXZ@4PADA
	push	0
	push	12					; 0000000cH
	mov	eax, DWORD PTR ?reTermDisplay@@3PAUHWND__@@A ; reTermDisplay
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 275  :   SendMessage(reTermDisplay,EM_SETSEL,WPARAM(-1),LPARAM(-1));

	mov	esi, esp
	push	-1
	push	-1
	push	177					; 000000b1H
	mov	ecx, DWORD PTR ?reTermDisplay@@3PAUHWND__@@A ; reTermDisplay
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 276  :   nuonEnv->mpe[disassemblyMPE]->PrintInstructionCachePacket(buf,nuonEnv->mpe[disassemblyMPE]->pcexec);

	mov	edx, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR [ecx+408]
	push	edx
	push	OFFSET ?buf@?1??UpdateControlPanelDisplay@@YAXXZ@4PADA
	mov	eax, DWORD PTR ?disassemblyMPE@@3KA	; disassemblyMPE
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [ecx+eax*4]
	call	?PrintInstructionCachePacket@MPE@@QAEXPADI@Z ; MPE::PrintInstructionCachePacket

; 277  :   SendMessage(reTermDisplay,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateControlPanelDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	edx, DWORD PTR ?reTermDisplay@@3PAUHWND__@@A ; reTermDisplay
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 278  :   sprintf(buf,"}\n");

	push	OFFSET $SG77858
	push	OFFSET ?buf@?1??UpdateControlPanelDisplay@@YAXXZ@4PADA
	call	_sprintf
	add	esp, 8

; 279  :   SendMessage(reTermDisplay,EM_REPLACESEL,NULL,LPARAM(buf));

	mov	esi, esp
	push	OFFSET ?buf@?1??UpdateControlPanelDisplay@@YAXXZ@4PADA
	push	0
	push	194					; 000000c2H
	mov	eax, DWORD PTR ?reTermDisplay@@3PAUHWND__@@A ; reTermDisplay
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 280  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@UpdateCont
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 72					; 00000048H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN12@UpdateCont:
	DD	3
	DD	$LN11@UpdateCont
$LN11@UpdateCont:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN8@UpdateCont
	DD	-44					; ffffffd4H
	DD	16					; 00000010H
	DD	$LN9@UpdateCont
	DD	-68					; ffffffbcH
	DD	10					; 0000000aH
	DD	$LN10@UpdateCont
$LN10@UpdateCont:
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN9@UpdateCont:
	DB	112					; 00000070H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	72					; 00000048H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN8@UpdateCont:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	72					; 00000048H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
?UpdateControlPanelDisplay@@YAXXZ ENDP			; UpdateControlPanelDisplay
_TEXT	ENDS
PUBLIC	?OnMPELEDDoubleClick@@YAXI@Z			; OnMPELEDDoubleClick
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_handles$ = -20						; size = 16
_which$ = 8						; size = 4
?OnMPELEDDoubleClick@@YAXI@Z PROC			; OnMPELEDDoubleClick

; 287  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 288  :   HWND handles[] = {picMPE0LED,picMPE1LED,picMPE2LED,picMPE3LED};

	mov	eax, DWORD PTR ?picMPE0LED@@3PAUHWND__@@A ; picMPE0LED
	mov	DWORD PTR _handles$[ebp], eax
	mov	ecx, DWORD PTR ?picMPE1LED@@3PAUHWND__@@A ; picMPE1LED
	mov	DWORD PTR _handles$[ebp+4], ecx
	mov	edx, DWORD PTR ?picMPE2LED@@3PAUHWND__@@A ; picMPE2LED
	mov	DWORD PTR _handles$[ebp+8], edx
	mov	eax, DWORD PTR ?picMPE3LED@@3PAUHWND__@@A ; picMPE3LED
	mov	DWORD PTR _handles$[ebp+12], eax

; 289  : 
; 290  :   which = which & 0x03;

	mov	ecx, DWORD PTR _which$[ebp]
	and	ecx, 3
	mov	DWORD PTR _which$[ebp], ecx

; 291  :   if(GetMPERunStatus(which))

	mov	edx, DWORD PTR _which$[ebp]
	push	edx
	call	?GetMPERunStatus@@YA_NI@Z		; GetMPERunStatus
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@OnMPELEDDo

; 292  :   {
; 293  :     SetMPERunStatus(which,false);

	push	0
	mov	ecx, DWORD PTR _which$[ebp]
	push	ecx
	call	?SetMPERunStatus@@YAXI_N@Z		; SetMPERunStatus
	add	esp, 8

; 294  :     SendMessage(handles[which],STM_SETIMAGE,IMAGE_BITMAP,LPARAM(bmpLEDOff));

	mov	esi, esp
	mov	edx, DWORD PTR ?bmpLEDOff@@3PAUHBITMAP__@@A ; bmpLEDOff
	push	edx
	push	0
	push	370					; 00000172H
	mov	eax, DWORD PTR _which$[ebp]
	mov	ecx, DWORD PTR _handles$[ebp+eax*4]
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 295  :   }
; 296  :   else

	jmp	SHORT $LN3@OnMPELEDDo
$LN2@OnMPELEDDo:

; 297  :   {
; 298  :     SetMPERunStatus(which,true);

	push	1
	mov	edx, DWORD PTR _which$[ebp]
	push	edx
	call	?SetMPERunStatus@@YAXI_N@Z		; SetMPERunStatus
	add	esp, 8

; 299  :     SendMessage(handles[which],STM_SETIMAGE,IMAGE_BITMAP,LPARAM(bmpLEDOn));

	mov	esi, esp
	mov	eax, DWORD PTR ?bmpLEDOn@@3PAUHBITMAP__@@A ; bmpLEDOn
	push	eax
	push	0
	push	370					; 00000172H
	mov	ecx, DWORD PTR _which$[ebp]
	mov	edx, DWORD PTR _handles$[ebp+ecx*4]
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@OnMPELEDDo:

; 300  :   }
; 301  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@OnMPELEDDo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@OnMPELEDDo:
	DD	1
	DD	$LN6@OnMPELEDDo
$LN6@OnMPELEDDo:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN5@OnMPELEDDo
$LN5@OnMPELEDDo:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
?OnMPELEDDoubleClick@@YAXI@Z ENDP			; OnMPELEDDoubleClick
_TEXT	ENDS
PUBLIC	?ExecuteSingleStep@@YAXXZ			; ExecuteSingleStep
EXTRN	?DoCommBusController@@YAXXZ:PROC		; DoCommBusController
EXTRN	?ExecuteSingleStep@MPE@@QAEXXZ:PROC		; MPE::ExecuteSingleStep
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?ExecuteSingleStep@@YAXXZ PROC				; ExecuteSingleStep

; 304  : {

	push	ebp
	mov	ebp, esp

; 305  :   nuonEnv->mpe[3]->ExecuteSingleStep();

	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+12]
	call	?ExecuteSingleStep@MPE@@QAEXXZ		; MPE::ExecuteSingleStep

; 306  :   nuonEnv->mpe[2]->ExecuteSingleStep();

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [ecx+8]
	call	?ExecuteSingleStep@MPE@@QAEXXZ		; MPE::ExecuteSingleStep

; 307  :   nuonEnv->mpe[1]->ExecuteSingleStep();

	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [edx+4]
	call	?ExecuteSingleStep@MPE@@QAEXXZ		; MPE::ExecuteSingleStep

; 308  :   nuonEnv->mpe[0]->ExecuteSingleStep();

	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax]
	call	?ExecuteSingleStep@MPE@@QAEXXZ		; MPE::ExecuteSingleStep

; 309  :   if(nuonEnv->pendingCommRequests)

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	cmp	DWORD PTR [ecx+44], 0
	je	SHORT $LN2@ExecuteSin

; 310  :   {
; 311  :     DoCommBusController();

	call	?DoCommBusController@@YAXXZ		; DoCommBusController
$LN2@ExecuteSin:

; 312  :   }
; 313  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?ExecuteSingleStep@@YAXXZ ENDP				; ExecuteSingleStep
_TEXT	ENDS
PUBLIC	?StatusWindowDialogProc@@YGHPAUHWND__@@IIJ@Z	; StatusWindowDialogProc
EXTRN	_fclose:PROC
EXTRN	_fwrite:PROC
EXTRN	_fopen:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv68 = -20						; size = 4
tv64 = -16						; size = 4
_outFile$ = -12						; size = 4
_hwndDlg$ = 8						; size = 4
_msg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?StatusWindowDialogProc@@YGHPAUHWND__@@IIJ@Z PROC	; StatusWindowDialogProc

; 316  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 317  :   uint32 i;
; 318  :   bool bSuccess;
; 319  :   FILE *outFile;
; 320  : 
; 321  :   switch(msg)

	mov	eax, DWORD PTR _msg$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 16			; 00000010H
	je	SHORT $LN18@StatusWind
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	SHORT $LN17@StatusWind
	jmp	$LN1@StatusWind
$LN18@StatusWind:

; 322  :   {
; 323  :     case WM_CLOSE:
; 324  :       bQuit = true;

	mov	BYTE PTR ?bQuit@@3_NA, 1		; bQuit

; 325  :       return FALSE;

	xor	eax, eax
	jmp	$LN21@StatusWind
$LN17@StatusWind:

; 326  :     case WM_COMMAND:
; 327  :       switch(HIWORD(wParam))

	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	mov	DWORD PTR tv68[ebp], edx
	cmp	DWORD PTR tv68[ebp], 0
	je	SHORT $LN14@StatusWind
	jmp	$LN2@StatusWind
$LN14@StatusWind:

; 328  :       {
; 329  :         case BN_CLICKED:
; 330  :           if((HWND)lParam == cbCommStatus)

	mov	eax, DWORD PTR _lParam$[ebp]
	cmp	eax, DWORD PTR ?cbCommStatus@@3PAUHWND__@@A ; cbCommStatus
	jne	SHORT $LN13@StatusWind

; 331  :           {
; 332  :             whichStatus = 0;

	mov	DWORD PTR ?whichStatus@@3KA, 0		; whichStatus

; 333  :             UpdateStatusWindowDisplay();

	call	?UpdateStatusWindowDisplay@@YAXXZ	; UpdateStatusWindowDisplay

; 334  :             return TRUE;

	mov	eax, 1
	jmp	$LN21@StatusWind
	jmp	$LN2@StatusWind
$LN13@StatusWind:

; 335  :           }
; 336  :           else if((HWND)lParam == cbDisplayStatus)

	mov	ecx, DWORD PTR _lParam$[ebp]
	cmp	ecx, DWORD PTR ?cbDisplayStatus@@3PAUHWND__@@A ; cbDisplayStatus
	jne	SHORT $LN11@StatusWind

; 337  :           {
; 338  :             whichStatus = 1;

	mov	DWORD PTR ?whichStatus@@3KA, 1		; whichStatus

; 339  :             UpdateStatusWindowDisplay();

	call	?UpdateStatusWindowDisplay@@YAXXZ	; UpdateStatusWindowDisplay

; 340  :             return TRUE;

	mov	eax, 1
	jmp	$LN21@StatusWind
	jmp	$LN2@StatusWind
$LN11@StatusWind:

; 341  :           }
; 342  :           else if((HWND)lParam == cbMPEStatus)

	mov	edx, DWORD PTR _lParam$[ebp]
	cmp	edx, DWORD PTR ?cbMPEStatus@@3PAUHWND__@@A ; cbMPEStatus
	jne	SHORT $LN9@StatusWind

; 343  :           {
; 344  :             whichStatus = 2;

	mov	DWORD PTR ?whichStatus@@3KA, 2		; whichStatus

; 345  :             UpdateStatusWindowDisplay();

	call	?UpdateStatusWindowDisplay@@YAXXZ	; UpdateStatusWindowDisplay

; 346  :             return TRUE;

	mov	eax, 1
	jmp	$LN21@StatusWind
	jmp	$LN2@StatusWind
$LN9@StatusWind:

; 347  :           }
; 348  :           else if((HWND)lParam == cbDumpMPEs)

	mov	eax, DWORD PTR _lParam$[ebp]
	cmp	eax, DWORD PTR ?cbDumpMPEs@@3PAUHWND__@@A ; cbDumpMPEs
	jne	$LN2@StatusWind

; 349  :           {
; 350  :             outFile = fopen("mpe0.bin","wb");

	push	OFFSET $SG77905
	push	OFFSET $SG77906
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _outFile$[ebp], eax

; 351  :             if(outFile)

	cmp	DWORD PTR _outFile$[ebp], 0
	je	SHORT $LN6@StatusWind

; 352  :             {
; 353  :               fwrite(nuonEnv->mpe[0]->dtrom,sizeof(uint8),MPE_LOCAL_MEMORY_SIZE,outFile);

	mov	ecx, DWORD PTR _outFile$[ebp]
	push	ecx
	push	8388608					; 00800000H
	push	1
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+560]
	push	ecx
	call	_fwrite
	add	esp, 16					; 00000010H

; 354  :               fclose(outFile);

	mov	edx, DWORD PTR _outFile$[ebp]
	push	edx
	call	_fclose
	add	esp, 4
$LN6@StatusWind:

; 355  :             }
; 356  :             outFile = fopen("mpe1.bin","wb");

	push	OFFSET $SG77909
	push	OFFSET $SG77910
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _outFile$[ebp], eax

; 357  :             if(outFile)

	cmp	DWORD PTR _outFile$[ebp], 0
	je	SHORT $LN5@StatusWind

; 358  :             {
; 359  :               fwrite(nuonEnv->mpe[1]->dtrom,sizeof(uint8),MPE_LOCAL_MEMORY_SIZE,outFile);

	mov	eax, DWORD PTR _outFile$[ebp]
	push	eax
	push	8388608					; 00800000H
	push	1
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+560]
	push	eax
	call	_fwrite
	add	esp, 16					; 00000010H

; 360  :               fclose(outFile);

	mov	ecx, DWORD PTR _outFile$[ebp]
	push	ecx
	call	_fclose
	add	esp, 4
$LN5@StatusWind:

; 361  :             }
; 362  :             outFile = fopen("mpe2.bin","wb");

	push	OFFSET $SG77913
	push	OFFSET $SG77914
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _outFile$[ebp], eax

; 363  :             if(outFile)

	cmp	DWORD PTR _outFile$[ebp], 0
	je	SHORT $LN4@StatusWind

; 364  :             {
; 365  :               fwrite(nuonEnv->mpe[2]->dtrom,sizeof(uint8),MPE_LOCAL_MEMORY_SIZE,outFile);

	mov	edx, DWORD PTR _outFile$[ebp]
	push	edx
	push	8388608					; 00800000H
	push	1
	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+560]
	push	edx
	call	_fwrite
	add	esp, 16					; 00000010H

; 366  :               fclose(outFile);

	mov	eax, DWORD PTR _outFile$[ebp]
	push	eax
	call	_fclose
	add	esp, 4
$LN4@StatusWind:

; 367  :             }
; 368  :             outFile = fopen("mpe3.bin","wb");

	push	OFFSET $SG77917
	push	OFFSET $SG77918
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _outFile$[ebp], eax

; 369  :             if(outFile)

	cmp	DWORD PTR _outFile$[ebp], 0
	je	SHORT $LN3@StatusWind

; 370  :             {
; 371  :               fwrite(nuonEnv->mpe[3]->dtrom,sizeof(uint8),MPE_LOCAL_MEMORY_SIZE,outFile);

	mov	ecx, DWORD PTR _outFile$[ebp]
	push	ecx
	push	8388608					; 00800000H
	push	1
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+560]
	push	ecx
	call	_fwrite
	add	esp, 16					; 00000010H

; 372  :               fclose(outFile);

	mov	edx, DWORD PTR _outFile$[ebp]
	push	edx
	call	_fclose
	add	esp, 4
$LN3@StatusWind:

; 373  :             }
; 374  :             return TRUE;

	mov	eax, 1
	jmp	SHORT $LN21@StatusWind
$LN2@StatusWind:

; 375  :           }
; 376  :         default:
; 377  :           return FALSE;

	xor	eax, eax
	jmp	SHORT $LN21@StatusWind
$LN1@StatusWind:

; 378  :       }
; 379  :     default:
; 380  :       return FALSE;

	xor	eax, eax
$LN21@StatusWind:

; 381  :   }
; 382  : }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?StatusWindowDialogProc@@YGHPAUHWND__@@IIJ@Z ENDP	; StatusWindowDialogProc
_TEXT	ENDS
PUBLIC	?Go@MPE@@QAEXXZ					; MPE::Go
PUBLIC	?ControlPanelDialogProc@@YGHPAUHWND__@@IIJ@Z	; ControlPanelDialogProc
EXTRN	?SetDVDBaseFromFileName@NuonEnvironment@@QAEXPAD@Z:PROC ; NuonEnvironment::SetDVDBaseFromFileName
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	?LoadCoffFile@MPE@@QAE_NPAD_NH@Z:PROC		; MPE::LoadCoffFile
EXTRN	?LoadNuonRomFile@MPE@@QAE_NPAD@Z:PROC		; MPE::LoadNuonRomFile
EXTRN	__imp__GetOpenFileNameA@4:PROC
EXTRN	?Reset@MPE@@QAEXXZ:PROC				; MPE::Reset
EXTRN	__imp__EnableWindow@8:PROC
EXTRN	_fscanf:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv68 = -32						; size = 4
tv64 = -28						; size = 4
_inFile$77948 = -24					; size = 4
_bpAddr$77947 = -16					; size = 4
_bSuccess$ = -5						; size = 1
_i$ = -4						; size = 4
_hwndDlg$ = 8						; size = 4
_msg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?ControlPanelDialogProc@@YGHPAUHWND__@@IIJ@Z PROC	; ControlPanelDialogProc

; 385  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 386  :   uint32 i;
; 387  :   bool bSuccess;
; 388  : 
; 389  :   switch(msg)

	mov	eax, DWORD PTR _msg$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 16			; 00000010H
	je	SHORT $LN39@ControlPan
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	SHORT $LN38@ControlPan
	jmp	$LN1@ControlPan
$LN39@ControlPan:

; 390  :   {
; 391  :     case WM_CLOSE:
; 392  :       bQuit = true;

	mov	BYTE PTR ?bQuit@@3_NA, 1		; bQuit

; 393  :       return FALSE;

	xor	eax, eax
	jmp	$LN42@ControlPan
$LN38@ControlPan:

; 394  :     case WM_COMMAND:
; 395  :       switch(HIWORD(wParam))

	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	movzx	edx, cx
	mov	DWORD PTR tv68[ebp], edx
	cmp	DWORD PTR tv68[ebp], 0
	je	SHORT $LN35@ControlPan
	cmp	DWORD PTR tv68[ebp], 1
	je	$LN9@ControlPan
	jmp	$LN1@ControlPan
$LN35@ControlPan:

; 396  :       {
; 397  :         case BN_CLICKED:
; 398  :           if((HWND)lParam == cbRun)

	mov	eax, DWORD PTR _lParam$[ebp]
	cmp	eax, DWORD PTR ?cbRun@@3PAUHWND__@@A	; cbRun
	jne	$LN34@ControlPan
$Run$77946:

; 399  :           {
; 400  : Run:
; 401  :             uint32 bpAddr = 0;

	mov	DWORD PTR _bpAddr$77947[ebp], 0

; 402  : 
; 403  :             FILE *inFile;
; 404  :             inFile = fopen("breakpoint.txt","r");

	push	OFFSET $SG77949
	push	OFFSET $SG77950
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _inFile$77948[ebp], eax

; 405  : 
; 406  :             if(inFile)

	cmp	DWORD PTR _inFile$77948[ebp], 0
	je	SHORT $LN33@ControlPan

; 407  :             {
; 408  :               fscanf(inFile,"%x",&bpAddr);

	lea	ecx, DWORD PTR _bpAddr$77947[ebp]
	push	ecx
	push	OFFSET $SG77952
	mov	edx, DWORD PTR _inFile$77948[ebp]
	push	edx
	call	_fscanf
	add	esp, 12					; 0000000cH

; 409  :               fclose(inFile);

	mov	eax, DWORD PTR _inFile$77948[ebp]
	push	eax
	call	_fclose
	add	esp, 4
$LN33@ControlPan:

; 410  :             }
; 411  : 
; 412  :             nuonEnv->mpe[0]->breakpointAddress = bpAddr;

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _bpAddr$77947[ebp]
	mov	DWORD PTR [edx+572], eax

; 413  :             nuonEnv->mpe[1]->breakpointAddress = bpAddr;

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _bpAddr$77947[ebp]
	mov	DWORD PTR [edx+572], eax

; 414  :             nuonEnv->mpe[2]->breakpointAddress = bpAddr;

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _bpAddr$77947[ebp]
	mov	DWORD PTR [edx+572], eax

; 415  :             nuonEnv->mpe[3]->breakpointAddress = bpAddr;

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _bpAddr$77947[ebp]
	mov	DWORD PTR [edx+572], eax

; 416  : 
; 417  :             EnableWindow(cbLoadFile,FALSE);

	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR ?cbLoadFile@@3PAUHWND__@@A ; cbLoadFile
	push	ecx
	call	DWORD PTR __imp__EnableWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 418  :             EnableWindow(cbRun,FALSE);

	mov	esi, esp
	push	0
	mov	edx, DWORD PTR ?cbRun@@3PAUHWND__@@A	; cbRun
	push	edx
	call	DWORD PTR __imp__EnableWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 419  :             EnableWindow(cbSingleStep,FALSE);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?cbSingleStep@@3PAUHWND__@@A ; cbSingleStep
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 420  :             EnableWindow(cbStop,TRUE);

	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR ?cbStop@@3PAUHWND__@@A	; cbStop
	push	ecx
	call	DWORD PTR __imp__EnableWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 421  :             bRun = true;

	mov	BYTE PTR ?bRun@@3_NA, 1			; bRun

; 422  :             return TRUE;

	mov	eax, 1
	jmp	$LN42@ControlPan
	jmp	$LN32@ControlPan
$LN34@ControlPan:

; 423  :           }
; 424  :           else if((HWND)lParam == cbSingleStep)

	mov	edx, DWORD PTR _lParam$[ebp]
	cmp	edx, DWORD PTR ?cbSingleStep@@3PAUHWND__@@A ; cbSingleStep
	jne	$LN31@ControlPan

; 425  :           {
; 426  :             EnableWindow(cbRun,FALSE);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?cbRun@@3PAUHWND__@@A	; cbRun
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 427  :             EnableWindow(cbSingleStep,FALSE);

	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR ?cbSingleStep@@3PAUHWND__@@A ; cbSingleStep
	push	ecx
	call	DWORD PTR __imp__EnableWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 428  :             EnableWindow(cbStop,TRUE);

	mov	esi, esp
	push	1
	mov	edx, DWORD PTR ?cbStop@@3PAUHWND__@@A	; cbStop
	push	edx
	call	DWORD PTR __imp__EnableWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 429  :             ExecuteSingleStep();

	call	?ExecuteSingleStep@@YAXXZ		; ExecuteSingleStep

; 430  :             UpdateControlPanelDisplay();

	call	?UpdateControlPanelDisplay@@YAXXZ	; UpdateControlPanelDisplay

; 431  :             EnableWindow(cbRun,TRUE);

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR ?cbRun@@3PAUHWND__@@A	; cbRun
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 432  :             EnableWindow(cbSingleStep,TRUE);

	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR ?cbSingleStep@@3PAUHWND__@@A ; cbSingleStep
	push	ecx
	call	DWORD PTR __imp__EnableWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 433  :             EnableWindow(cbStop,FALSE);

	mov	esi, esp
	push	0
	mov	edx, DWORD PTR ?cbStop@@3PAUHWND__@@A	; cbStop
	push	edx
	call	DWORD PTR __imp__EnableWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 434  :             return TRUE;

	mov	eax, 1
	jmp	$LN42@ControlPan
	jmp	$LN32@ControlPan
$LN31@ControlPan:

; 435  :           }
; 436  :           else if((HWND)lParam == cbStop)

	mov	eax, DWORD PTR _lParam$[ebp]
	cmp	eax, DWORD PTR ?cbStop@@3PAUHWND__@@A	; cbStop
	jne	SHORT $LN29@ControlPan

; 437  :           {
; 438  :             EnableWindow(cbStop,FALSE);

	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR ?cbStop@@3PAUHWND__@@A	; cbStop
	push	ecx
	call	DWORD PTR __imp__EnableWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 439  :             EnableWindow(cbSingleStep,TRUE);

	mov	esi, esp
	push	1
	mov	edx, DWORD PTR ?cbSingleStep@@3PAUHWND__@@A ; cbSingleStep
	push	edx
	call	DWORD PTR __imp__EnableWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 440  :             EnableWindow(cbLoadFile,FALSE);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?cbLoadFile@@3PAUHWND__@@A ; cbLoadFile
	push	eax
	call	DWORD PTR __imp__EnableWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 441  :             EnableWindow(cbRun,TRUE);

	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR ?cbRun@@3PAUHWND__@@A	; cbRun
	push	ecx
	call	DWORD PTR __imp__EnableWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 442  :             bRun = false;

	mov	BYTE PTR ?bRun@@3_NA, 0			; bRun

; 443  :             UpdateControlPanelDisplay();

	call	?UpdateControlPanelDisplay@@YAXXZ	; UpdateControlPanelDisplay

; 444  :             return TRUE;

	mov	eax, 1
	jmp	$LN42@ControlPan
	jmp	$LN32@ControlPan
$LN29@ControlPan:

; 445  :           }
; 446  :           else if((HWND)lParam == cbReset)

	mov	edx, DWORD PTR _lParam$[ebp]
	cmp	edx, DWORD PTR ?cbReset@@3PAUHWND__@@A	; cbReset
	jne	SHORT $LN27@ControlPan

; 447  :           {
; 448  :             for(i = 0; i < 4; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN26@ControlPan
$LN25@ControlPan:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN26@ControlPan:
	cmp	DWORD PTR _i$[ebp], 4
	jae	SHORT $LN24@ControlPan

; 449  :             {
; 450  :               nuonEnv->mpe[i]->Reset();

	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [edx+ecx*4]
	call	?Reset@MPE@@QAEXXZ			; MPE::Reset

; 451  :             }

	jmp	SHORT $LN25@ControlPan
$LN24@ControlPan:

; 452  :             return TRUE;

	mov	eax, 1
	jmp	$LN42@ControlPan
	jmp	$LN32@ControlPan
$LN27@ControlPan:

; 453  :           }
; 454  :           else if((HWND)lParam == cbLoadFile)

	mov	eax, DWORD PTR _lParam$[ebp]
	cmp	eax, DWORD PTR ?cbLoadFile@@3PAUHWND__@@A ; cbLoadFile
	jne	$LN22@ControlPan

; 455  :           {
; 456  :             if(GetOpenFileName(&ofn))

	mov	esi, esp
	push	OFFSET ?ofn@@3UtagOFNA@@A		; ofn
	call	DWORD PTR __imp__GetOpenFileNameA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN21@ControlPan

; 457  :             {
; 458  :               bSuccess = nuonEnv->mpe[3]->LoadNuonRomFile(ofn.lpstrFile);

	mov	ecx, DWORD PTR ?ofn@@3UtagOFNA@@A+28
	push	ecx
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [edx+12]
	call	?LoadNuonRomFile@MPE@@QAE_NPAD@Z	; MPE::LoadNuonRomFile
	mov	BYTE PTR _bSuccess$[ebp], al

; 459  :               if(!bSuccess)

	movzx	eax, BYTE PTR _bSuccess$[ebp]
	test	eax, eax
	jne	SHORT $LN20@ControlPan

; 460  :               {
; 461  :                 bSuccess = nuonEnv->mpe[3]->LoadCoffFile(ofn.lpstrFile);

	push	-1
	push	1
	mov	ecx, DWORD PTR ?ofn@@3UtagOFNA@@A+28
	push	ecx
	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [edx+12]
	call	?LoadCoffFile@MPE@@QAE_NPAD_NH@Z	; MPE::LoadCoffFile
	mov	BYTE PTR _bSuccess$[ebp], al

; 462  :                 if(!bSuccess)

	movzx	eax, BYTE PTR _bSuccess$[ebp]
	test	eax, eax
	jne	SHORT $LN20@ControlPan

; 463  :                 {
; 464  :                   MessageBox(NULL,"Invalid COFF or NUONROM-DISK file",ERROR,MB_ICONWARNING);

	mov	esi, esp
	push	48					; 00000030H
	push	0
	push	OFFSET $SG77971
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@ControlPan:

; 465  :                 }
; 466  :               }
; 467  :               
; 468  :               if(bSuccess)

	movzx	ecx, BYTE PTR _bSuccess$[ebp]
	test	ecx, ecx
	je	SHORT $LN21@ControlPan

; 469  :               {
; 470  :                 nuonEnv->SetDVDBaseFromFileName(ofn.lpstrFile);

	mov	edx, DWORD PTR ?ofn@@3UtagOFNA@@A+28
	push	edx
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	call	?SetDVDBaseFromFileName@NuonEnvironment@@QAEXPAD@Z ; NuonEnvironment::SetDVDBaseFromFileName

; 471  :                 nuonEnv->mpe[3]->Go();

	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+12]
	call	?Go@MPE@@QAEXXZ				; MPE::Go

; 472  :                 UpdateControlPanelDisplay();

	call	?UpdateControlPanelDisplay@@YAXXZ	; UpdateControlPanelDisplay

; 473  :                 goto Run;

	jmp	$Run$77946
$LN21@ControlPan:

; 474  :               }
; 475  :             }
; 476  :             return TRUE;

	mov	eax, 1
	jmp	$LN42@ControlPan
	jmp	SHORT $LN32@ControlPan
$LN22@ControlPan:

; 477  :           }
; 478  :           else if((HWND)lParam == textMPE0)

	mov	ecx, DWORD PTR _lParam$[ebp]
	cmp	ecx, DWORD PTR ?textMPE0@@3PAUHWND__@@A	; textMPE0
	jne	SHORT $LN16@ControlPan

; 479  :           {
; 480  :             disassemblyMPE = 0;

	mov	DWORD PTR ?disassemblyMPE@@3KA, 0	; disassemblyMPE

; 481  :             UpdateControlPanelDisplay();

	call	?UpdateControlPanelDisplay@@YAXXZ	; UpdateControlPanelDisplay
	jmp	SHORT $LN32@ControlPan
$LN16@ControlPan:

; 482  :           }
; 483  :           else if((HWND)lParam == textMPE1)

	mov	edx, DWORD PTR _lParam$[ebp]
	cmp	edx, DWORD PTR ?textMPE1@@3PAUHWND__@@A	; textMPE1
	jne	SHORT $LN14@ControlPan

; 484  :           {
; 485  :             disassemblyMPE = 1;

	mov	DWORD PTR ?disassemblyMPE@@3KA, 1	; disassemblyMPE

; 486  :             UpdateControlPanelDisplay();

	call	?UpdateControlPanelDisplay@@YAXXZ	; UpdateControlPanelDisplay
	jmp	SHORT $LN32@ControlPan
$LN14@ControlPan:

; 487  :           }
; 488  :           else if((HWND)lParam == textMPE2)

	mov	eax, DWORD PTR _lParam$[ebp]
	cmp	eax, DWORD PTR ?textMPE2@@3PAUHWND__@@A	; textMPE2
	jne	SHORT $LN12@ControlPan

; 489  :           {
; 490  :             disassemblyMPE = 2;

	mov	DWORD PTR ?disassemblyMPE@@3KA, 2	; disassemblyMPE

; 491  :             UpdateControlPanelDisplay();

	call	?UpdateControlPanelDisplay@@YAXXZ	; UpdateControlPanelDisplay
	jmp	SHORT $LN32@ControlPan
$LN12@ControlPan:

; 492  :           }
; 493  :           else if((HWND)lParam == textMPE3)

	mov	ecx, DWORD PTR _lParam$[ebp]
	cmp	ecx, DWORD PTR ?textMPE3@@3PAUHWND__@@A	; textMPE3
	jne	SHORT $LN32@ControlPan

; 494  :           {
; 495  :             disassemblyMPE = 3;

	mov	DWORD PTR ?disassemblyMPE@@3KA, 3	; disassemblyMPE

; 496  :             UpdateControlPanelDisplay();

	call	?UpdateControlPanelDisplay@@YAXXZ	; UpdateControlPanelDisplay
$LN32@ControlPan:

; 497  :           }
; 498  :           return TRUE;

	mov	eax, 1
	jmp	SHORT $LN42@ControlPan
$LN9@ControlPan:

; 499  :         case STN_DBLCLK:
; 500  :         {
; 501  :           if((HWND)lParam == picMPE0LED)

	mov	edx, DWORD PTR _lParam$[ebp]
	cmp	edx, DWORD PTR ?picMPE0LED@@3PAUHWND__@@A ; picMPE0LED
	jne	SHORT $LN8@ControlPan

; 502  :           {
; 503  :             OnMPELEDDoubleClick(0);

	push	0
	call	?OnMPELEDDoubleClick@@YAXI@Z		; OnMPELEDDoubleClick
	add	esp, 4

; 504  :             return TRUE;

	mov	eax, 1
	jmp	SHORT $LN42@ControlPan
	jmp	SHORT $LN1@ControlPan
$LN8@ControlPan:

; 505  :           }
; 506  :           else if((HWND)lParam == picMPE1LED)

	mov	eax, DWORD PTR _lParam$[ebp]
	cmp	eax, DWORD PTR ?picMPE1LED@@3PAUHWND__@@A ; picMPE1LED
	jne	SHORT $LN6@ControlPan

; 507  :           {
; 508  :             OnMPELEDDoubleClick(1);

	push	1
	call	?OnMPELEDDoubleClick@@YAXI@Z		; OnMPELEDDoubleClick
	add	esp, 4

; 509  :             return TRUE;

	mov	eax, 1
	jmp	SHORT $LN42@ControlPan
	jmp	SHORT $LN1@ControlPan
$LN6@ControlPan:

; 510  :           }
; 511  :           else if((HWND)lParam == picMPE2LED)

	mov	ecx, DWORD PTR _lParam$[ebp]
	cmp	ecx, DWORD PTR ?picMPE2LED@@3PAUHWND__@@A ; picMPE2LED
	jne	SHORT $LN4@ControlPan

; 512  :           {
; 513  :             OnMPELEDDoubleClick(2);

	push	2
	call	?OnMPELEDDoubleClick@@YAXI@Z		; OnMPELEDDoubleClick
	add	esp, 4

; 514  :             return TRUE;

	mov	eax, 1
	jmp	SHORT $LN42@ControlPan
	jmp	SHORT $LN1@ControlPan
$LN4@ControlPan:

; 515  :           }
; 516  :           else if((HWND)lParam == picMPE3LED)

	mov	edx, DWORD PTR _lParam$[ebp]
	cmp	edx, DWORD PTR ?picMPE3LED@@3PAUHWND__@@A ; picMPE3LED
	jne	SHORT $LN1@ControlPan

; 517  :           {
; 518  :             OnMPELEDDoubleClick(3);

	push	3
	call	?OnMPELEDDoubleClick@@YAXI@Z		; OnMPELEDDoubleClick
	add	esp, 4

; 519  :             return TRUE;

	mov	eax, 1
	jmp	SHORT $LN42@ControlPan
$LN1@ControlPan:

; 520  :           }
; 521  :         }
; 522  :       }
; 523  :     default:
; 524  :       return FALSE;

	xor	eax, eax
$LN42@ControlPan:

; 525  :   }
; 526  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN46@ControlPan
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN46@ControlPan:
	DD	1
	DD	$LN45@ControlPan
$LN45@ControlPan:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN44@ControlPan
$LN44@ControlPan:
	DB	98					; 00000062H
	DB	112					; 00000070H
	DB	65					; 00000041H
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	114					; 00000072H
	DB	0
?ControlPanelDialogProc@@YGHPAUHWND__@@IIJ@Z ENDP	; ControlPanelDialogProc
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\mpe.h
_TEXT	ENDS
;	COMDAT ?Go@MPE@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Go@MPE@@QAEXXZ PROC					; MPE::Go, COMDAT
; _this$ = ecx

; 476  :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 477  :     mpectl |= MPECTRL_MPEGO;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+384]
	or	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+384], ecx

; 478  :   }

	mov	esp, ebp
	pop	ebp
	ret	0
?Go@MPE@@QAEXXZ ENDP					; MPE::Go
_TEXT	ENDS
PUBLIC	?SplashScreenDialogProc@@YGHPAUHWND__@@IIJ@Z	; SplashScreenDialogProc
EXTRN	__imp__GetStockObject@4:PROC
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\nuancemain.cpp
_TEXT	SEGMENT
tv64 = -4						; size = 4
_hwndDlg$ = 8						; size = 4
_msg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?SplashScreenDialogProc@@YGHPAUHWND__@@IIJ@Z PROC	; SplashScreenDialogProc

; 529  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 530  :   switch(msg)

	mov	eax, DWORD PTR _msg$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 310		; 00000136H
	je	SHORT $LN2@SplashScre
	jmp	SHORT $LN1@SplashScre
$LN2@SplashScre:

; 531  :   {
; 532  :     case WM_CTLCOLORDLG:
; 533  :       return INT_PTR(GetStockObject(BLACK_BRUSH));

	mov	esi, esp
	push	4
	call	DWORD PTR __imp__GetStockObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN5@SplashScre
$LN1@SplashScre:

; 534  :     default:
; 535  :       return FALSE;

	xor	eax, eax
$LN5@SplashScre:

; 536  :   }
; 537  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SplashScreenDialogProc@@YGHPAUHWND__@@IIJ@Z ENDP	; SplashScreenDialogProc
_TEXT	ENDS
PUBLIC	?OnDisplayPaint@@YA_NIJ@Z			; OnDisplayPaint
EXTRN	__imp__glClear@4:PROC
EXTRN	?RenderVideo@@YAXHH@Z:PROC			; RenderVideo
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_wparam$ = 8						; size = 4
_lparam$ = 12						; size = 4
?OnDisplayPaint@@YA_NIJ@Z PROC				; OnDisplayPaint

; 540  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 541  :   if(bRun)

	movzx	eax, BYTE PTR ?bRun@@3_NA		; bRun
	test	eax, eax
	je	SHORT $LN2@OnDisplayP

; 542  :   {
; 543  :     nuonEnv->bMainBufferModified = true;

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	BYTE PTR [ecx+86], 1

; 544  :     nuonEnv->bOverlayBufferModified = true;

	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	BYTE PTR [edx+87], 1

; 545  :     RenderVideo(display->clientWidth,display->clientHeight);

	mov	eax, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	mov	eax, DWORD PTR [edx+36]
	push	eax
	call	?RenderVideo@@YAXHH@Z			; RenderVideo
	add	esp, 8

; 546  :   }
; 547  :   else

	jmp	SHORT $LN1@OnDisplayP
$LN2@OnDisplayP:

; 548  :   {
; 549  :     glClear(GL_COLOR_BUFFER_BIT);

	mov	esi, esp
	push	16384					; 00004000H
	call	DWORD PTR __imp__glClear@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@OnDisplayP:

; 550  :   }
; 551  :   return true;

	mov	al, 1

; 552  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?OnDisplayPaint@@YA_NIJ@Z ENDP				; OnDisplayPaint
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	__real@bff0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	?OnDisplayResize@@YA_NGG@Z			; OnDisplayResize
EXTRN	__imp__glDisable@4:PROC
EXTRN	__imp__glOrtho@48:PROC
EXTRN	__imp__glLoadIdentity@0:PROC
EXTRN	__imp__glMatrixMode@4:PROC
EXTRN	__imp__glViewport@16:PROC
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
_width$ = 8						; size = 2
_height$ = 12						; size = 2
?OnDisplayResize@@YA_NGG@Z PROC				; OnDisplayResize

; 555  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 556  :   glViewport(0,0,width,height);

	movzx	eax, WORD PTR _height$[ebp]
	mov	esi, esp
	push	eax
	movzx	ecx, WORD PTR _width$[ebp]
	push	ecx
	push	0
	push	0
	call	DWORD PTR __imp__glViewport@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 557  : 
; 558  :   glMatrixMode(GL_PROJECTION);

	mov	esi, esp
	push	5889					; 00001701H
	call	DWORD PTR __imp__glMatrixMode@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 559  :   glLoadIdentity();

	mov	esi, esp
	call	DWORD PTR __imp__glLoadIdentity@0
	cmp	esi, esp
	call	__RTC_CheckEsp

; 560  :   glOrtho(0.0,1.0,0.0,1.0,-1.0,1.0);

	mov	esi, esp
	sub	esp, 8
	fld1
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR __real@bff0000000000000
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld1
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fldz
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld1
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fldz
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp__glOrtho@48
	cmp	esi, esp
	call	__RTC_CheckEsp

; 561  : 
; 562  :   glMatrixMode(GL_MODELVIEW);

	mov	esi, esp
	push	5888					; 00001700H
	call	DWORD PTR __imp__glMatrixMode@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 563  :   glLoadIdentity();

	mov	esi, esp
	call	DWORD PTR __imp__glLoadIdentity@0
	cmp	esi, esp
	call	__RTC_CheckEsp

; 564  : 
; 565  :   glDisable(GL_BLEND);

	mov	esi, esp
	push	3042					; 00000be2H
	call	DWORD PTR __imp__glDisable@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 566  :   glDisable(GL_DEPTH_TEST);

	mov	esi, esp
	push	2929					; 00000b71H
	call	DWORD PTR __imp__glDisable@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 567  :   glDisable(GL_ALPHA_TEST);

	mov	esi, esp
	push	3008					; 00000bc0H
	call	DWORD PTR __imp__glDisable@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 568  :   glDisable(GL_LIGHTING);

	mov	esi, esp
	push	2896					; 00000b50H
	call	DWORD PTR __imp__glDisable@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 569  :   glDisable(GL_FOG);

	mov	esi, esp
	push	2912					; 00000b60H
	call	DWORD PTR __imp__glDisable@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 570  : 
; 571  :   glClear(GL_COLOR_BUFFER_BIT);

	mov	esi, esp
	push	16384					; 00004000H
	call	DWORD PTR __imp__glClear@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 572  :   OnDisplayPaint(0,0);

	push	0
	push	0
	call	?OnDisplayPaint@@YA_NIJ@Z		; OnDisplayPaint
	add	esp, 8

; 573  :   return false;

	xor	al, al

; 574  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?OnDisplayResize@@YA_NGG@Z ENDP				; OnDisplayResize
_TEXT	ENDS
PUBLIC	?OnDisplayTimer@@YAXI@Z				; OnDisplayTimer
EXTRN	?TriggerVideoInterrupt@NuonEnvironment@@QAEXXZ:PROC ; NuonEnvironment::TriggerVideoInterrupt
EXTRN	__imp__UpdateWindow@4:PROC
EXTRN	__imp__InvalidateRect@12:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_idEvent$ = 8						; size = 4
?OnDisplayTimer@@YAXI@Z PROC				; OnDisplayTimer

; 577  : {

	push	ebp
	mov	ebp, esp
	push	esi

; 578  :   InvalidateRect(display->hWnd,NULL,FALSE);

	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 579  :   UpdateWindow(display->hWnd);

	mov	esi, esp
	mov	edx, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__UpdateWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 580  :   nuonEnv->TriggerVideoInterrupt();

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	call	?TriggerVideoInterrupt@NuonEnvironment@@QAEXXZ ; NuonEnvironment::TriggerVideoInterrupt

; 581  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?OnDisplayTimer@@YAXI@Z ENDP				; OnDisplayTimer
_TEXT	ENDS
PUBLIC	?OnDisplayKeyDown@@YA_NFI@Z			; OnDisplayKeyDown
EXTRN	?controller@@3PAUControllerData@@A:DWORD	; controller
EXTRN	?SwapWordBytes@@YIXPAG@Z:PROC			; SwapWordBytes
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv65 = -16						; size = 4
_buttons$ = -8						; size = 2
_vkey$ = 8						; size = 2
_keydata$ = 12						; size = 4
?OnDisplayKeyDown@@YA_NFI@Z PROC			; OnDisplayKeyDown

; 584  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 585  :   uint16 buttons = 0;

	mov	WORD PTR _buttons$[ebp], 0

; 586  : 
; 587  :   switch(vkey)

	movsx	eax, WORD PTR _vkey$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	sub	ecx, 37					; 00000025H
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 50			; 00000032H
	ja	SHORT $LN16@OnDisplayK
	mov	edx, DWORD PTR tv65[ebp]
	movzx	eax, BYTE PTR $LN20@OnDisplayK[edx]
	jmp	DWORD PTR $LN24@OnDisplayK[eax*4]
$LN15@OnDisplayK:

; 588  :   {
; 589  :     case 'A':
; 590  :       //Start
; 591  :       buttons = CTRLR_BUTTON_START;

	mov	WORD PTR _buttons$[ebp], 8192		; 00002000H

; 592  :       break;

	jmp	SHORT $LN16@OnDisplayK
$LN14@OnDisplayK:

; 593  :     case 'S':
; 594  :       //NUON (Z)
; 595  :       buttons = CTRLR_BUTTON_NUON;

	mov	WORD PTR _buttons$[ebp], 4096		; 00001000H

; 596  :       break;

	jmp	SHORT $LN16@OnDisplayK
$LN13@OnDisplayK:

; 597  :     case 'D':
; 598  :       //A
; 599  :       buttons = CTRLR_BUTTON_A;

	mov	WORD PTR _buttons$[ebp], 16384		; 00004000H

; 600  :       break;

	jmp	SHORT $LN16@OnDisplayK
$LN12@OnDisplayK:

; 601  :     case 'F':
; 602  :       //B
; 603  :       buttons = CTRLR_BUTTON_B;

	mov	WORD PTR _buttons$[ebp], 8

; 604  :       break;

	jmp	SHORT $LN16@OnDisplayK
$LN11@OnDisplayK:

; 605  :     case VK_UP:
; 606  :       //DPad Up
; 607  :       buttons = CTRLR_DPAD_UP;

	mov	WORD PTR _buttons$[ebp], 512		; 00000200H

; 608  :       break;

	jmp	SHORT $LN16@OnDisplayK
$LN10@OnDisplayK:

; 609  :     case VK_DOWN:
; 610  :       //DPad Down
; 611  :       buttons = CTRLR_DPAD_DOWN;

	mov	WORD PTR _buttons$[ebp], 2048		; 00000800H

; 612  :       break;

	jmp	SHORT $LN16@OnDisplayK
$LN9@OnDisplayK:

; 613  :     case VK_LEFT:
; 614  :       //DPad Left
; 615  :       buttons = CTRLR_DPAD_LEFT;

	mov	WORD PTR _buttons$[ebp], 1024		; 00000400H

; 616  :       break;

	jmp	SHORT $LN16@OnDisplayK
$LN8@OnDisplayK:

; 617  :     case VK_RIGHT:
; 618  :       //DPad Right
; 619  :       buttons = CTRLR_DPAD_RIGHT;

	mov	WORD PTR _buttons$[ebp], 256		; 00000100H

; 620  :       break;

	jmp	SHORT $LN16@OnDisplayK
$LN7@OnDisplayK:

; 621  :     case 'Q':
; 622  :       //LShoulder
; 623  :       buttons = CTRLR_BUTTON_L;

	mov	WORD PTR _buttons$[ebp], 32		; 00000020H

; 624  :       break;

	jmp	SHORT $LN16@OnDisplayK
$LN6@OnDisplayK:

; 625  :     case 'T':
; 626  :       //RShoulder
; 627  :       buttons = CTRLR_BUTTON_R;

	mov	WORD PTR _buttons$[ebp], 16		; 00000010H

; 628  :       break;

	jmp	SHORT $LN16@OnDisplayK
$LN5@OnDisplayK:

; 629  :     case 'W':
; 630  :       //C left
; 631  :       buttons = CTRLR_BUTTON_C_LEFT;

	mov	WORD PTR _buttons$[ebp], 4

; 632  :       break;

	jmp	SHORT $LN16@OnDisplayK
$LN4@OnDisplayK:

; 633  :     case 'E':
; 634  :       //C down
; 635  :       buttons = CTRLR_BUTTON_C_DOWN;

	mov	WORD PTR _buttons$[ebp], 32768		; 00008000H

; 636  :       break;

	jmp	SHORT $LN16@OnDisplayK
$LN3@OnDisplayK:

; 637  :     case 'R':
; 638  :       //C right
; 639  :       buttons = CTRLR_BUTTON_C_RIGHT;

	mov	WORD PTR _buttons$[ebp], 1

; 640  :       break;

	jmp	SHORT $LN16@OnDisplayK
$LN2@OnDisplayK:

; 641  :     case '3':
; 642  :       //C up
; 643  :       buttons = CTRLR_BUTTON_C_UP;

	mov	WORD PTR _buttons$[ebp], 2
$LN16@OnDisplayK:

; 644  :       break;
; 645  :   }
; 646  :   SwapWordBytes(&buttons);

	lea	ecx, DWORD PTR _buttons$[ebp]
	call	?SwapWordBytes@@YIXPAG@Z		; SwapWordBytes

; 647  :   if(controller)

	cmp	DWORD PTR ?controller@@3PAUControllerData@@A, 0 ; controller
	je	SHORT $LN1@OnDisplayK

; 648  :   {
; 649  :     controller[whichController].buttons |= buttons;

	mov	ecx, DWORD PTR ?whichController@@3KA	; whichController
	shl	ecx, 4
	movzx	edx, WORD PTR _buttons$[ebp]
	mov	eax, DWORD PTR ?controller@@3PAUControllerData@@A ; controller
	movzx	ecx, WORD PTR [eax+ecx+4]
	or	ecx, edx
	mov	edx, DWORD PTR ?whichController@@3KA	; whichController
	shl	edx, 4
	mov	eax, DWORD PTR ?controller@@3PAUControllerData@@A ; controller
	mov	WORD PTR [eax+edx+4], cx
$LN1@OnDisplayK:

; 650  :   }
; 651  : 
; 652  :   return false;

	xor	al, al

; 653  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@OnDisplayK
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN23@OnDisplayK:
	DD	1
	DD	$LN22@OnDisplayK
$LN22@OnDisplayK:
	DD	-8					; fffffff8H
	DD	2
	DD	$LN21@OnDisplayK
$LN21@OnDisplayK:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
$LN24@OnDisplayK:
	DD	$LN9@OnDisplayK
	DD	$LN11@OnDisplayK
	DD	$LN8@OnDisplayK
	DD	$LN10@OnDisplayK
	DD	$LN2@OnDisplayK
	DD	$LN15@OnDisplayK
	DD	$LN13@OnDisplayK
	DD	$LN4@OnDisplayK
	DD	$LN12@OnDisplayK
	DD	$LN7@OnDisplayK
	DD	$LN3@OnDisplayK
	DD	$LN14@OnDisplayK
	DD	$LN6@OnDisplayK
	DD	$LN5@OnDisplayK
	DD	$LN16@OnDisplayK
$LN20@OnDisplayK:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	4
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	5
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	6
	DB	7
	DB	8
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	9
	DB	10					; 0000000aH
	DB	11					; 0000000bH
	DB	12					; 0000000cH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	13					; 0000000dH
?OnDisplayKeyDown@@YA_NFI@Z ENDP			; OnDisplayKeyDown
_TEXT	ENDS
PUBLIC	?OnDisplayKeyUp@@YA_NFI@Z			; OnDisplayKeyUp
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv65 = -16						; size = 4
_buttons$ = -8						; size = 2
_vkey$ = 8						; size = 2
_keydata$ = 12						; size = 4
?OnDisplayKeyUp@@YA_NFI@Z PROC				; OnDisplayKeyUp

; 656  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 657  :   uint16 buttons = 0;

	mov	WORD PTR _buttons$[ebp], 0

; 658  : 
; 659  :   switch(vkey)

	movsx	eax, WORD PTR _vkey$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	sub	ecx, 37					; 00000025H
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 53			; 00000035H
	ja	$LN17@OnDisplayK@2
	mov	edx, DWORD PTR tv65[ebp]
	movzx	eax, BYTE PTR $LN21@OnDisplayK@2[edx]
	jmp	DWORD PTR $LN25@OnDisplayK@2[eax*4]
$LN16@OnDisplayK@2:

; 660  :   {
; 661  :     case 'A':
; 662  :       //Start
; 663  :       buttons = ~CTRLR_BUTTON_START;

	mov	WORD PTR _buttons$[ebp], 57343		; 0000dfffH

; 664  :       break;

	jmp	SHORT $LN17@OnDisplayK@2
$LN15@OnDisplayK@2:

; 665  :     case 'S':
; 666  :       //NUON (Z)
; 667  :       buttons = ~CTRLR_BUTTON_NUON;

	mov	WORD PTR _buttons$[ebp], 61439		; 0000efffH

; 668  :       break;

	jmp	SHORT $LN17@OnDisplayK@2
$LN14@OnDisplayK@2:

; 669  :     case 'D':
; 670  :       //A
; 671  :       buttons = ~CTRLR_BUTTON_A;

	mov	WORD PTR _buttons$[ebp], 49151		; 0000bfffH

; 672  :       break;

	jmp	SHORT $LN17@OnDisplayK@2
$LN13@OnDisplayK@2:

; 673  :     case 'F':
; 674  :       //B
; 675  :       buttons = ~CTRLR_BUTTON_B;

	mov	WORD PTR _buttons$[ebp], 65527		; 0000fff7H

; 676  :       break;

	jmp	SHORT $LN17@OnDisplayK@2
$LN12@OnDisplayK@2:

; 677  :     case VK_UP:
; 678  :       //DPad Up
; 679  :       buttons = ~CTRLR_DPAD_UP;

	mov	WORD PTR _buttons$[ebp], 65023		; 0000fdffH

; 680  :       break;

	jmp	SHORT $LN17@OnDisplayK@2
$LN11@OnDisplayK@2:

; 681  :     case VK_DOWN:
; 682  :       //DPad Down
; 683  :       buttons = ~CTRLR_DPAD_DOWN;

	mov	WORD PTR _buttons$[ebp], 63487		; 0000f7ffH

; 684  :       break;

	jmp	SHORT $LN17@OnDisplayK@2
$LN10@OnDisplayK@2:

; 685  :     case VK_LEFT:
; 686  :       //DPad Left
; 687  :       buttons = ~CTRLR_DPAD_LEFT;

	mov	WORD PTR _buttons$[ebp], 64511		; 0000fbffH

; 688  :       break;

	jmp	SHORT $LN17@OnDisplayK@2
$LN9@OnDisplayK@2:

; 689  :     case VK_RIGHT:
; 690  :       //DPad Right
; 691  :       buttons = ~CTRLR_DPAD_RIGHT;

	mov	WORD PTR _buttons$[ebp], 65279		; 0000feffH

; 692  :       break;

	jmp	SHORT $LN17@OnDisplayK@2
$LN8@OnDisplayK@2:

; 693  :     case 'Q':
; 694  :       //LShoulder
; 695  :       buttons = ~CTRLR_BUTTON_L;

	mov	WORD PTR _buttons$[ebp], 65503		; 0000ffdfH

; 696  :       break;

	jmp	SHORT $LN17@OnDisplayK@2
$LN7@OnDisplayK@2:

; 697  :     case 'T':
; 698  :       //RShoulder
; 699  :       buttons = ~CTRLR_BUTTON_R;

	mov	WORD PTR _buttons$[ebp], 65519		; 0000ffefH

; 700  :       break;

	jmp	SHORT $LN17@OnDisplayK@2
$LN6@OnDisplayK@2:

; 701  :     case 'W':
; 702  :       //C left
; 703  :       buttons = ~CTRLR_BUTTON_C_LEFT;

	mov	WORD PTR _buttons$[ebp], 65531		; 0000fffbH

; 704  :       break;

	jmp	SHORT $LN17@OnDisplayK@2
$LN5@OnDisplayK@2:

; 705  :     case 'E':
; 706  :       //C down
; 707  :       buttons = ~CTRLR_BUTTON_C_DOWN;

	mov	WORD PTR _buttons$[ebp], 32767		; 00007fffH

; 708  :       break;

	jmp	SHORT $LN17@OnDisplayK@2
$LN4@OnDisplayK@2:

; 709  :     case 'R':
; 710  :       //C right
; 711  :       buttons = ~CTRLR_BUTTON_C_RIGHT;

	mov	WORD PTR _buttons$[ebp], 65534		; 0000fffeH

; 712  :       break;

	jmp	SHORT $LN17@OnDisplayK@2
$LN3@OnDisplayK@2:

; 713  :     case '3':
; 714  :       //C up
; 715  :       buttons = ~CTRLR_BUTTON_C_UP;

	mov	WORD PTR _buttons$[ebp], 65533		; 0000fffdH

; 716  :       break;

	jmp	SHORT $LN17@OnDisplayK@2
$LN2@OnDisplayK@2:

; 717  :     case 'Z':
; 718  :       //Toggle between IR controller and Controller[1]
; 719  :       whichController = 1 - whichController;

	mov	ecx, 1
	sub	ecx, DWORD PTR ?whichController@@3KA	; whichController
	mov	DWORD PTR ?whichController@@3KA, ecx	; whichController
$LN17@OnDisplayK@2:

; 720  :       break;
; 721  :   }
; 722  :   SwapWordBytes(&buttons);

	lea	ecx, DWORD PTR _buttons$[ebp]
	call	?SwapWordBytes@@YIXPAG@Z		; SwapWordBytes

; 723  :   if(controller)

	cmp	DWORD PTR ?controller@@3PAUControllerData@@A, 0 ; controller
	je	SHORT $LN1@OnDisplayK@2

; 724  :   {
; 725  :     controller[whichController].buttons &= buttons;

	mov	edx, DWORD PTR ?whichController@@3KA	; whichController
	shl	edx, 4
	movzx	eax, WORD PTR _buttons$[ebp]
	mov	ecx, DWORD PTR ?controller@@3PAUControllerData@@A ; controller
	movzx	edx, WORD PTR [ecx+edx+4]
	and	edx, eax
	mov	eax, DWORD PTR ?whichController@@3KA	; whichController
	shl	eax, 4
	mov	ecx, DWORD PTR ?controller@@3PAUControllerData@@A ; controller
	mov	WORD PTR [ecx+eax+4], dx
$LN1@OnDisplayK@2:

; 726  :   }
; 727  :   return false;

	xor	al, al

; 728  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@OnDisplayK@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN24@OnDisplayK@2:
	DD	1
	DD	$LN23@OnDisplayK@2
$LN23@OnDisplayK@2:
	DD	-8					; fffffff8H
	DD	2
	DD	$LN22@OnDisplayK@2
$LN22@OnDisplayK@2:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
$LN25@OnDisplayK@2:
	DD	$LN10@OnDisplayK@2
	DD	$LN12@OnDisplayK@2
	DD	$LN9@OnDisplayK@2
	DD	$LN11@OnDisplayK@2
	DD	$LN3@OnDisplayK@2
	DD	$LN16@OnDisplayK@2
	DD	$LN14@OnDisplayK@2
	DD	$LN5@OnDisplayK@2
	DD	$LN13@OnDisplayK@2
	DD	$LN8@OnDisplayK@2
	DD	$LN4@OnDisplayK@2
	DD	$LN15@OnDisplayK@2
	DD	$LN7@OnDisplayK@2
	DD	$LN6@OnDisplayK@2
	DD	$LN2@OnDisplayK@2
	DD	$LN17@OnDisplayK@2
$LN21@OnDisplayK@2:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	4
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	5
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	6
	DB	7
	DB	8
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	9
	DB	10					; 0000000aH
	DB	11					; 0000000bH
	DB	12					; 0000000cH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	13					; 0000000dH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	14					; 0000000eH
?OnDisplayKeyUp@@YA_NFI@Z ENDP				; OnDisplayKeyUp
_TEXT	ENDS
PUBLIC	?CheckForInvalidCommStatus@@YA_NPAVMPE@@@Z	; CheckForInvalidCommStatus
;	COMDAT ?bInvalid2@?1??CheckForInvalidCommStatus@@YA_NPAVMPE@@@Z@4_NA
_BSS	SEGMENT
?bInvalid2@?1??CheckForInvalidCommStatus@@YA_NPAVMPE@@@Z@4_NA DB 01H DUP (?) ; `CheckForInvalidCommStatus'::`2'::bInvalid2
_BSS	ENDS
;	COMDAT ?bInvalid@?1??CheckForInvalidCommStatus@@YA_NPAVMPE@@@Z@4_NA
_BSS	SEGMENT
?bInvalid@?1??CheckForInvalidCommStatus@@YA_NPAVMPE@@@Z@4_NA DB 01H DUP (?) ; `CheckForInvalidCommStatus'::`2'::bInvalid
; Function compile flags: /Odtp /RTCsu
_BSS	ENDS
_TEXT	SEGMENT
tv92 = -12						; size = 4
tv82 = -8						; size = 4
tv70 = -4						; size = 4
_mpe$ = 8						; size = 4
?CheckForInvalidCommStatus@@YA_NPAVMPE@@@Z PROC		; CheckForInvalidCommStatus

; 769  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 770  :   static bool bInvalid;
; 771  :   static bool bInvalid2;
; 772  : 
; 773  :   bInvalid = false;

	mov	BYTE PTR ?bInvalid@?1??CheckForInvalidCommStatus@@YA_NPAVMPE@@@Z@4_NA, 0

; 774  :   bInvalid2 = false;

	mov	BYTE PTR ?bInvalid2@?1??CheckForInvalidCommStatus@@YA_NPAVMPE@@@Z@4_NA, 0

; 775  : 
; 776  :   bInvalid = (mpe->intsrc & INT_COMMRECV) && 
; 777  :    (!(mpe->commctl & (1UL << 31)));  //&& (!(mpe->intctl & (1UL << 5)) || (mpe->pcexec >= 0x807604D2))) ||

	mov	eax, DWORD PTR _mpe$[ebp]
	mov	ecx, DWORD PTR [eax+420]
	and	ecx, 16					; 00000010H
	je	SHORT $LN5@CheckForIn
	mov	edx, DWORD PTR _mpe$[ebp]
	mov	eax, DWORD PTR [edx+492]
	and	eax, -2147483648			; 80000000H
	jne	SHORT $LN5@CheckForIn
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN6@CheckForIn
$LN5@CheckForIn:
	mov	DWORD PTR tv70[ebp], 0
$LN6@CheckForIn:
	mov	cl, BYTE PTR tv70[ebp]
	mov	BYTE PTR ?bInvalid@?1??CheckForInvalidCommStatus@@YA_NPAVMPE@@@Z@4_NA, cl

; 778  :    //((mpe->commctl & (1UL << 31)) && (mpe->pcexec >= 0x807604C8) && (mpe->pcexec < 0x807604D2)));
; 779  :   bInvalid2 = (!(mpe->intsrc & INT_COMMRECV) && (mpe->commctl & (1UL << 31)) &&
; 780  :     ((mpe->pcexec <= 0x807604C0) || (mpe->pcexec >= 0x807604D2)));

	mov	edx, DWORD PTR _mpe$[ebp]
	mov	eax, DWORD PTR [edx+420]
	and	eax, 16					; 00000010H
	jne	SHORT $LN7@CheckForIn
	mov	ecx, DWORD PTR _mpe$[ebp]
	mov	edx, DWORD PTR [ecx+492]
	and	edx, -2147483648			; 80000000H
	je	SHORT $LN7@CheckForIn
	mov	eax, DWORD PTR _mpe$[ebp]
	cmp	DWORD PTR [eax+408], -2139749184	; 807604c0H
	jbe	SHORT $LN8@CheckForIn
	mov	ecx, DWORD PTR _mpe$[ebp]
	cmp	DWORD PTR [ecx+408], -2139749166	; 807604d2H
	jb	SHORT $LN7@CheckForIn
$LN8@CheckForIn:
	mov	DWORD PTR tv82[ebp], 1
	jmp	SHORT $LN9@CheckForIn
$LN7@CheckForIn:
	mov	DWORD PTR tv82[ebp], 0
$LN9@CheckForIn:
	mov	dl, BYTE PTR tv82[ebp]
	mov	BYTE PTR ?bInvalid2@?1??CheckForInvalidCommStatus@@YA_NPAVMPE@@@Z@4_NA, dl

; 781  :   if(bInvalid || bInvalid2)

	movzx	eax, BYTE PTR ?bInvalid@?1??CheckForInvalidCommStatus@@YA_NPAVMPE@@@Z@4_NA
	test	eax, eax
	jne	SHORT $LN1@CheckForIn
	movzx	ecx, BYTE PTR ?bInvalid2@?1??CheckForInvalidCommStatus@@YA_NPAVMPE@@@Z@4_NA
	test	ecx, ecx
	je	SHORT $LN2@CheckForIn
$LN1@CheckForIn:

; 782  :   {
; 783  :     bInvalid = false;

	mov	BYTE PTR ?bInvalid@?1??CheckForInvalidCommStatus@@YA_NPAVMPE@@@Z@4_NA, 0

; 784  :     bInvalid2 = true;

	mov	BYTE PTR ?bInvalid2@?1??CheckForInvalidCommStatus@@YA_NPAVMPE@@@Z@4_NA, 1
$LN2@CheckForIn:

; 785  :   }
; 786  :   return bInvalid || bInvalid2;

	movzx	edx, BYTE PTR ?bInvalid@?1??CheckForInvalidCommStatus@@YA_NPAVMPE@@@Z@4_NA
	test	edx, edx
	jne	SHORT $LN10@CheckForIn
	movzx	eax, BYTE PTR ?bInvalid2@?1??CheckForInvalidCommStatus@@YA_NPAVMPE@@@Z@4_NA
	test	eax, eax
	jne	SHORT $LN10@CheckForIn
	mov	DWORD PTR tv92[ebp], 0
	jmp	SHORT $LN11@CheckForIn
$LN10@CheckForIn:
	mov	DWORD PTR tv92[ebp], 1
$LN11@CheckForIn:
	mov	al, BYTE PTR tv92[ebp]

; 787  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CheckForInvalidCommStatus@@YA_NPAVMPE@@@Z ENDP		; CheckForInvalidCommStatus
_TEXT	ENDS
PUBLIC	??_GGLWindow@@QAEPAXI@Z				; GLWindow::`scalar deleting destructor'
PUBLIC	??_GNuonEnvironment@@QAEPAXI@Z			; NuonEnvironment::`scalar deleting destructor'
PUBLIC	__real@408f400000000000
PUBLIC	_WinMain@16
EXTRN	?Close@GLWindow@@QAEXXZ:PROC			; GLWindow::Close
EXTRN	?FreeTextureMemory@@YAXPAE_N@Z:PROC		; FreeTextureMemory
EXTRN	?FetchDecodeExecute@MPE@@QAE_NXZ:PROC		; MPE::FetchDecodeExecute
EXTRN	?MessagePump@GLWindow@@QAE_NXZ:PROC		; GLWindow::MessagePump
EXTRN	__imp__IsDialogMessageA@8:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	?SetTimer@GLWindow@@QAE_NXZ:PROC		; GLWindow::SetTimer
EXTRN	_memset:PROC
EXTRN	__imp__GetDlgItem@8:PROC
EXTRN	__imp__LoadBitmapA@8:PROC
EXTRN	__imp__LoadIconA@8:PROC
EXTRN	__imp__LoadLibraryA@4:PROC
EXTRN	?InitializeYCrCbColorSpace@@YAXXZ:PROC		; InitializeYCrCbColorSpace
EXTRN	?overlayChannelBuffer@@3PAEA:DWORD		; overlayChannelBuffer
EXTRN	?mainChannelBuffer@@3PAEA:DWORD			; mainChannelBuffer
EXTRN	?AllocateTextureMemory@@YAPAEI_N@Z:PROC		; AllocateTextureMemory
EXTRN	__imp__glewGetErrorString:PROC
EXTRN	__imp__glewInit:PROC
EXTRN	?Create@GLWindow@@QAE_NXZ:PROC			; GLWindow::Create
EXTRN	??0GLWindow@@QAE@XZ:PROC			; GLWindow::GLWindow
EXTRN	__imp__EndDialog@8:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__CreateDialogParamA@20:PROC
EXTRN	?InitBios@NuonEnvironment@@QAEXXZ:PROC		; NuonEnvironment::InitBios
EXTRN	??0NuonEnvironment@@QAE@XZ:PROC			; NuonEnvironment::NuonEnvironment
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__RTC_UninitUse:PROC
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
tv355 = -152						; size = 4
tv349 = -148						; size = 4
tv322 = -144						; size = 4
tv547 = -140						; size = 8
tv545 = -132						; size = 4
tv542 = -126						; size = 2
tv538 = -124						; size = 8
tv90 = -116						; size = 4
tv71 = -112						; size = 4
$T80374 = -105						; size = 1
$T80371 = -104						; size = 4
$T80370 = -100						; size = 4
$T80367 = -96						; size = 4
$T80366 = -92						; size = 4
$T80363 = -88						; size = 4
$T80362 = -84						; size = 4
$T80359 = -80						; size = 4
$T80358 = -76						; size = 4
_hRichEditLibrary$ = -72				; size = 4
_err$ = -68						; size = 4
_result$ = -64						; size = 4
_nCycles$ = -56						; size = 4
_msg$ = -40						; size = 28
_hStatusDlg$ = -8					; size = 4
_hDlg$ = -4						; size = 4
_hInstance$ = 8						; size = 4
_hPrevInstance$ = 12					; size = 4
_lpCmdLine$ = 16					; size = 4
_nCmdShow$ = 20						; size = 4
_WinMain@16 PROC

; 790  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 152				; 00000098H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-152]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	BYTE PTR $T80374[ebp], 0

; 791  :   HWND hDlg, hStatusDlg;
; 792  :   MSG msg;
; 793  :   LPARAM lParam;
; 794  :   WPARAM wParam;
; 795  :   uint32 nCycles = 500;

	mov	DWORD PTR _nCycles$[ebp], 500		; 000001f4H

; 796  :   uint32 displayCycles;
; 797  :   static uint32 prevPcexec;
; 798  :   static uint32 prevCommctl;
; 799  :   static uint32 prevIntsrc;
; 800  :   INT_PTR result;
; 801  : 
; 802  :   //Create the Nuon environment object
; 803  :   nuonEnv = new NuonEnvironment;

	push	136					; 00000088H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T80359[ebp], eax
	cmp	DWORD PTR $T80359[ebp], 0
	je	SHORT $LN14@WinMain
	mov	ecx, DWORD PTR $T80359[ebp]
	call	??0NuonEnvironment@@QAE@XZ		; NuonEnvironment::NuonEnvironment
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN15@WinMain
$LN14@WinMain:
	mov	DWORD PTR tv71[ebp], 0
$LN15@WinMain:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T80358[ebp], eax
	mov	ecx, DWORD PTR $T80358[ebp]
	mov	DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A, ecx ; nuonEnv

; 804  :   //Initialize the BIOS
; 805  :   nuonEnv->InitBios();

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	call	?InitBios@NuonEnvironment@@QAEXXZ	; NuonEnvironment::InitBios

; 806  :   hDlg = CreateDialog(hInstance,MAKEINTRESOURCE(IDD_SPLASH_SCREEN),NULL,SplashScreenDialogProc);

	mov	esi, esp
	push	0
	push	OFFSET ?SplashScreenDialogProc@@YGHPAUHWND__@@IIJ@Z ; SplashScreenDialogProc
	push	0
	push	115					; 00000073H
	mov	edx, DWORD PTR _hInstance$[ebp]
	push	edx
	call	DWORD PTR __imp__CreateDialogParamA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hDlg$[ebp], eax

; 807  :   Sleep(1000);

	mov	esi, esp
	push	1000					; 000003e8H
	call	DWORD PTR __imp__Sleep@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 808  :   ShowWindow(hDlg,FALSE);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _hDlg$[ebp]
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 809  :   EndDialog(hDlg,result);

	cmp	BYTE PTR $T80374[ebp], 0
	jne	SHORT $LN22@WinMain
	push	OFFSET $LN23@WinMain
	call	__RTC_UninitUse
	add	esp, 4
$LN22@WinMain:
	mov	esi, esp
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hDlg$[ebp]
	push	edx
	call	DWORD PTR __imp__EndDialog@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 810  : 
; 811  :   display = new GLWindow();

	push	156					; 0000009cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T80363[ebp], eax
	cmp	DWORD PTR $T80363[ebp], 0
	je	SHORT $LN16@WinMain
	mov	ecx, DWORD PTR $T80363[ebp]
	call	??0GLWindow@@QAE@XZ			; GLWindow::GLWindow
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN17@WinMain
$LN16@WinMain:
	mov	DWORD PTR tv90[ebp], 0
$LN17@WinMain:
	mov	eax, DWORD PTR tv90[ebp]
	mov	DWORD PTR $T80362[ebp], eax
	mov	ecx, DWORD PTR $T80362[ebp]
	mov	DWORD PTR ?display@@3PAVGLWindow@@A, ecx ; display

; 812  :   display->title = displayWindowTitle;

	mov	edx, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	mov	DWORD PTR [edx+60], OFFSET ?displayWindowTitle@@3PADA ; displayWindowTitle

; 813  :   display->clientWidth = 720;

	mov	eax, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	mov	DWORD PTR [eax+36], 720			; 000002d0H

; 814  :   display->clientHeight = 480;

	mov	ecx, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	mov	DWORD PTR [ecx+40], 480			; 000001e0H

; 815  :   display->x = 100;

	mov	edx, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	mov	DWORD PTR [edx+20], 100			; 00000064H

; 816  :   display->y = 100;

	mov	eax, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	mov	DWORD PTR [eax+24], 100			; 00000064H

; 817  :   display->bUseSeparateThread = false;

	mov	ecx, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	mov	BYTE PTR [ecx+58], 0

; 818  :   display->resizeHandler = OnDisplayResize;

	mov	edx, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	mov	DWORD PTR [edx+84], OFFSET ?OnDisplayResize@@YA_NGG@Z ; OnDisplayResize

; 819  :   display->keyDownHandler = OnDisplayKeyDown;

	mov	eax, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	mov	DWORD PTR [eax+72], OFFSET ?OnDisplayKeyDown@@YA_NFI@Z ; OnDisplayKeyDown

; 820  :   display->keyUpHandler = OnDisplayKeyUp;

	mov	ecx, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	mov	DWORD PTR [ecx+76], OFFSET ?OnDisplayKeyUp@@YA_NFI@Z ; OnDisplayKeyUp

; 821  :   display->paintHandler = OnDisplayPaint;

	mov	edx, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	mov	DWORD PTR [edx+108], OFFSET ?OnDisplayPaint@@YA_NIJ@Z ; OnDisplayPaint

; 822  :   display->timerHandler = OnDisplayTimer;

	mov	eax, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	mov	DWORD PTR [eax+80], OFFSET ?OnDisplayTimer@@YAXI@Z ; OnDisplayTimer

; 823  : 
; 824  :   display->Create();

	mov	ecx, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	call	?Create@GLWindow@@QAE_NXZ		; GLWindow::Create
$LN11@WinMain:

; 825  :   while(!display->bVisible);

	mov	ecx, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	movzx	edx, BYTE PTR [ecx+56]
	test	edx, edx
	jne	SHORT $LN10@WinMain
	jmp	SHORT $LN11@WinMain
$LN10@WinMain:

; 826  :   GLenum err = glewInit();

	mov	esi, esp
	call	DWORD PTR __imp__glewInit
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _err$[ebp], eax

; 827  :   if(err != GLEW_OK)

	cmp	DWORD PTR _err$[ebp], 0
	je	SHORT $LN9@WinMain

; 828  :   {
; 829  :     MessageBox(NULL,(char *)glewGetErrorString(err),"Error",MB_ICONWARNING);

	mov	esi, esp
	push	48					; 00000030H
	push	OFFSET $SG78128
	mov	edi, esp
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	DWORD PTR __imp__glewGetErrorString
	add	esp, 4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@WinMain:

; 830  :   }
; 831  : 
; 832  :   mainChannelBuffer = AllocateTextureMemory(ALLOCATED_TEXTURE_WIDTH*ALLOCATED_TEXTURE_HEIGHT*4,false);

	push	0
	push	2097152					; 00200000H
	call	?AllocateTextureMemory@@YAPAEI_N@Z	; AllocateTextureMemory
	add	esp, 8
	mov	DWORD PTR ?mainChannelBuffer@@3PAEA, eax ; mainChannelBuffer

; 833  :   overlayChannelBuffer = AllocateTextureMemory(ALLOCATED_TEXTURE_WIDTH*ALLOCATED_TEXTURE_HEIGHT*4,true);

	push	1
	push	2097152					; 00200000H
	call	?AllocateTextureMemory@@YAPAEI_N@Z	; AllocateTextureMemory
	add	esp, 8
	mov	DWORD PTR ?overlayChannelBuffer@@3PAEA, eax ; overlayChannelBuffer

; 834  :   InitializeYCrCbColorSpace();

	call	?InitializeYCrCbColorSpace@@YAXXZ	; InitializeYCrCbColorSpace

; 835  :   
; 836  :   HMODULE hRichEditLibrary = LoadLibrary("Riched20.dll");

	mov	esi, esp
	push	OFFSET $SG78130
	call	DWORD PTR __imp__LoadLibraryA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRichEditLibrary$[ebp], eax

; 837  :   hDlg = CreateDialog(hInstance,MAKEINTRESOURCE(IDD_CONTROL_PANEL),NULL,ControlPanelDialogProc);

	mov	esi, esp
	push	0
	push	OFFSET ?ControlPanelDialogProc@@YGHPAUHWND__@@IIJ@Z ; ControlPanelDialogProc
	push	0
	push	114					; 00000072H
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__CreateDialogParamA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hDlg$[ebp], eax

; 838  :   hStatusDlg = CreateDialog(hInstance,MAKEINTRESOURCE(IDD_STATUS_DIALOG),NULL,StatusWindowDialogProc);

	mov	esi, esp
	push	0
	push	OFFSET ?StatusWindowDialogProc@@YGHPAUHWND__@@IIJ@Z ; StatusWindowDialogProc
	push	0
	push	127					; 0000007fH
	mov	edx, DWORD PTR _hInstance$[ebp]
	push	edx
	call	DWORD PTR __imp__CreateDialogParamA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hStatusDlg$[ebp], eax

; 839  : 
; 840  :   iconApp = LoadIcon(hInstance,MAKEINTRESOURCE(IDI_APPICON));

	mov	esi, esp
	push	113					; 00000071H
	mov	eax, DWORD PTR _hInstance$[ebp]
	push	eax
	call	DWORD PTR __imp__LoadIconA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?iconApp@@3PAUHICON__@@A, eax	; iconApp

; 841  :   bmpLEDOn = LoadBitmap(hInstance,MAKEINTRESOURCE(IDB_LED_ON));

	mov	esi, esp
	push	117					; 00000075H
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__LoadBitmapA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?bmpLEDOn@@3PAUHBITMAP__@@A, eax ; bmpLEDOn

; 842  :   bmpLEDOff = LoadBitmap(hInstance,MAKEINTRESOURCE(IDB_LED_OFF));

	mov	esi, esp
	push	126					; 0000007eH
	mov	edx, DWORD PTR _hInstance$[ebp]
	push	edx
	call	DWORD PTR __imp__LoadBitmapA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?bmpLEDOff@@3PAUHBITMAP__@@A, eax ; bmpLEDOff

; 843  :   reTermDisplay = GetDlgItem(hDlg, RE_TERM_DISPLAY);

	mov	esi, esp
	push	1002					; 000003eaH
	mov	eax, DWORD PTR _hDlg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?reTermDisplay@@3PAUHWND__@@A, eax ; reTermDisplay

; 844  :   reStatus = GetDlgItem(hStatusDlg, RE_STATUS_DISPLAY);

	mov	esi, esp
	push	1021					; 000003fdH
	mov	ecx, DWORD PTR _hStatusDlg$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?reStatus@@3PAUHWND__@@A, eax	; reStatus

; 845  :   picMPE0LED = GetDlgItem(hDlg, IDC_MPE0_LED);

	mov	esi, esp
	push	1003					; 000003ebH
	mov	edx, DWORD PTR _hDlg$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?picMPE0LED@@3PAUHWND__@@A, eax ; picMPE0LED

; 846  :   picMPE1LED = GetDlgItem(hDlg, IDC_MPE1_LED);

	mov	esi, esp
	push	1004					; 000003ecH
	mov	eax, DWORD PTR _hDlg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?picMPE1LED@@3PAUHWND__@@A, eax ; picMPE1LED

; 847  :   picMPE2LED = GetDlgItem(hDlg, IDC_MPE2_LED);

	mov	esi, esp
	push	1005					; 000003edH
	mov	ecx, DWORD PTR _hDlg$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?picMPE2LED@@3PAUHWND__@@A, eax ; picMPE2LED

; 848  :   picMPE3LED = GetDlgItem(hDlg, IDC_MPE3_LED);

	mov	esi, esp
	push	1006					; 000003eeH
	mov	edx, DWORD PTR _hDlg$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?picMPE3LED@@3PAUHWND__@@A, eax ; picMPE3LED

; 849  :   textMPE0 = GetDlgItem(hDlg, IDC_LABEL_MPE0);

	mov	esi, esp
	push	1013					; 000003f5H
	mov	eax, DWORD PTR _hDlg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?textMPE0@@3PAUHWND__@@A, eax	; textMPE0

; 850  :   textMPE1 = GetDlgItem(hDlg, IDC_LABEL_MPE1);

	mov	esi, esp
	push	1014					; 000003f6H
	mov	ecx, DWORD PTR _hDlg$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?textMPE1@@3PAUHWND__@@A, eax	; textMPE1

; 851  :   textMPE2 = GetDlgItem(hDlg, IDC_LABEL_MPE2);

	mov	esi, esp
	push	1015					; 000003f7H
	mov	edx, DWORD PTR _hDlg$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?textMPE2@@3PAUHWND__@@A, eax	; textMPE2

; 852  :   textMPE3 = GetDlgItem(hDlg, IDC_LABEL_MPE3);

	mov	esi, esp
	push	1016					; 000003f8H
	mov	eax, DWORD PTR _hDlg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?textMPE3@@3PAUHWND__@@A, eax	; textMPE3

; 853  :   textMPE0Pcexec = GetDlgItem(hDlg, IDC_MPE0_PCEXEC);

	mov	esi, esp
	push	1007					; 000003efH
	mov	ecx, DWORD PTR _hDlg$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?textMPE0Pcexec@@3PAUHWND__@@A, eax ; textMPE0Pcexec

; 854  :   textMPE1Pcexec = GetDlgItem(hDlg, IDC_MPE1_PCEXEC);

	mov	esi, esp
	push	1008					; 000003f0H
	mov	edx, DWORD PTR _hDlg$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?textMPE1Pcexec@@3PAUHWND__@@A, eax ; textMPE1Pcexec

; 855  :   textMPE2Pcexec = GetDlgItem(hDlg, IDC_MPE2_PCEXEC);

	mov	esi, esp
	push	1009					; 000003f1H
	mov	eax, DWORD PTR _hDlg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?textMPE2Pcexec@@3PAUHWND__@@A, eax ; textMPE2Pcexec

; 856  :   textMPE3Pcexec = GetDlgItem(hDlg, IDC_MPE3_PCEXEC);

	mov	esi, esp
	push	1010					; 000003f2H
	mov	ecx, DWORD PTR _hDlg$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?textMPE3Pcexec@@3PAUHWND__@@A, eax ; textMPE3Pcexec

; 857  :   cbLoadFile = GetDlgItem(hDlg, IDC_CB_LOAD_FILE);

	mov	esi, esp
	push	109					; 0000006dH
	mov	edx, DWORD PTR _hDlg$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?cbLoadFile@@3PAUHWND__@@A, eax ; cbLoadFile

; 858  :   cbRun = GetDlgItem(hDlg, IDC_CB_RUN);

	mov	esi, esp
	push	107					; 0000006bH
	mov	eax, DWORD PTR _hDlg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?cbRun@@3PAUHWND__@@A, eax	; cbRun

; 859  :   cbSingleStep = GetDlgItem(hDlg, IDC_CB_SINGLE_STEP);

	mov	esi, esp
	push	110					; 0000006eH
	mov	ecx, DWORD PTR _hDlg$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?cbSingleStep@@3PAUHWND__@@A, eax ; cbSingleStep

; 860  :   cbStop = GetDlgItem(hDlg, IDC_CB_STOP);

	mov	esi, esp
	push	108					; 0000006cH
	mov	edx, DWORD PTR _hDlg$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?cbStop@@3PAUHWND__@@A, eax	; cbStop

; 861  :   cbReset = GetDlgItem(hDlg, IDC_CB_RESET);

	mov	esi, esp
	push	1012					; 000003f4H
	mov	eax, DWORD PTR _hDlg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?cbReset@@3PAUHWND__@@A, eax	; cbReset

; 862  :   cbCommStatus = GetDlgItem(hStatusDlg, IDC_COMM_STATUS);

	mov	esi, esp
	push	1018					; 000003faH
	mov	ecx, DWORD PTR _hStatusDlg$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?cbCommStatus@@3PAUHWND__@@A, eax ; cbCommStatus

; 863  :   cbDisplayStatus = GetDlgItem(hStatusDlg, IDC_DISPLAY_STATUS);

	mov	esi, esp
	push	1019					; 000003fbH
	mov	edx, DWORD PTR _hStatusDlg$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?cbDisplayStatus@@3PAUHWND__@@A, eax ; cbDisplayStatus

; 864  :   cbMPEStatus = GetDlgItem(hStatusDlg, IDC_MPE_STATUS);

	mov	esi, esp
	push	1020					; 000003fcH
	mov	eax, DWORD PTR _hStatusDlg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?cbMPEStatus@@3PAUHWND__@@A, eax ; cbMPEStatus

; 865  :   cbDumpMPEs = GetDlgItem(hStatusDlg, IDC_DUMP_MPES);

	mov	esi, esp
	push	1022					; 000003feH
	mov	ecx, DWORD PTR _hStatusDlg$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?cbDumpMPEs@@3PAUHWND__@@A, eax ; cbDumpMPEs

; 866  : 
; 867  :   memset(&ofn,0,sizeof(OPENFILENAME));

	push	76					; 0000004cH
	push	0
	push	OFFSET ?ofn@@3UtagOFNA@@A		; ofn
	call	_memset
	add	esp, 12					; 0000000cH

; 868  :   ofn.lStructSize = sizeof(OPENFILENAME);

	mov	DWORD PTR ?ofn@@3UtagOFNA@@A, 76	; 0000004cH

; 869  :   ofn.hwndOwner = hDlg;

	mov	edx, DWORD PTR _hDlg$[ebp]
	mov	DWORD PTR ?ofn@@3UtagOFNA@@A+4, edx

; 870  :   ofn.hInstance = hInstance;

	mov	eax, DWORD PTR _hInstance$[ebp]
	mov	DWORD PTR ?ofn@@3UtagOFNA@@A+8, eax

; 871  :   ofn.Flags = OFN_LONGNAMES|OFN_FILEMUSTEXIST|OFN_PATHMUSTEXIST|OFN_NOCHANGEDIR;

	mov	DWORD PTR ?ofn@@3UtagOFNA@@A+52, 2103304 ; 00201808H

; 872  :   ofn.lpstrFile = openFileName;

	mov	DWORD PTR ?ofn@@3UtagOFNA@@A+28, OFFSET ?openFileName@@3PADA ; openFileName

; 873  :   ofn.nMaxFile = sizeof(openFileName);

	mov	DWORD PTR ?ofn@@3UtagOFNA@@A+32, 512	; 00000200H

; 874  : 
; 875  :   SendMessage(hDlg,WM_SETICON,ICON_SMALL,LPARAM(iconApp));

	mov	esi, esp
	mov	ecx, DWORD PTR ?iconApp@@3PAUHICON__@@A	; iconApp
	push	ecx
	push	0
	push	128					; 00000080H
	mov	edx, DWORD PTR _hDlg$[ebp]
	push	edx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 876  :   SendMessage(hStatusDlg,WM_SETICON,ICON_SMALL,LPARAM(iconApp));

	mov	esi, esp
	mov	eax, DWORD PTR ?iconApp@@3PAUHICON__@@A	; iconApp
	push	eax
	push	0
	push	128					; 00000080H
	mov	ecx, DWORD PTR _hStatusDlg$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 877  :   SendMessage(display->hWnd,WM_SETICON,ICON_SMALL,LPARAM(iconApp));

	mov	esi, esp
	mov	edx, DWORD PTR ?iconApp@@3PAUHICON__@@A	; iconApp
	push	edx
	push	0
	push	128					; 00000080H
	mov	eax, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__SendMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 878  : 
; 879  :   UpdateControlPanelDisplay();

	call	?UpdateControlPanelDisplay@@YAXXZ	; UpdateControlPanelDisplay

; 880  : 
; 881  :   display->timerInterval = 1000.0/nuonEnv->fps;

	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR tv538[ebp], eax
	mov	DWORD PTR tv538[ebp+4], 0
	fild	QWORD PTR tv538[ebp]
	fdivr	QWORD PTR __real@408f400000000000
	fnstcw	WORD PTR tv542[ebp]
	movzx	eax, WORD PTR tv542[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv545[ebp], eax
	fldcw	WORD PTR tv545[ebp]
	fistp	QWORD PTR tv547[ebp]
	fldcw	WORD PTR tv542[ebp]
	mov	ecx, DWORD PTR tv547[ebp]
	mov	edx, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	mov	DWORD PTR [edx+64], ecx

; 882  :   display->SetTimer();

	mov	ecx, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	call	?SetTimer@GLWindow@@QAE_NXZ		; GLWindow::SetTimer

; 883  : 
; 884  :   nuonEnv->videoDisplayCycleCount = 0;

	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	DWORD PTR [eax+108], 0
$LN8@WinMain:

; 885  : 
; 886  :   while(!bQuit)

	movzx	ecx, BYTE PTR ?bQuit@@3_NA		; bQuit
	test	ecx, ecx
	jne	$LN7@WinMain

; 887  :   {
; 888  :     if(PeekMessage(&msg,hDlg,0,0,PM_REMOVE))

	mov	esi, esp
	push	1
	push	0
	push	0
	mov	edx, DWORD PTR _hDlg$[ebp]
	push	edx
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__PeekMessageA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN6@WinMain

; 889  :     {
; 890  :       IsDialogMessage(hDlg,&msg);

	mov	esi, esp
	lea	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hDlg$[ebp]
	push	edx
	call	DWORD PTR __imp__IsDialogMessageA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@WinMain:

; 891  :     }
; 892  : 
; 893  :     if(PeekMessage(&msg,hStatusDlg,0,0,PM_REMOVE))

	mov	esi, esp
	push	1
	push	0
	push	0
	mov	eax, DWORD PTR _hStatusDlg$[ebp]
	push	eax
	lea	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	call	DWORD PTR __imp__PeekMessageA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN5@WinMain

; 894  :     {
; 895  :       IsDialogMessage(hStatusDlg,&msg);

	mov	esi, esp
	lea	edx, DWORD PTR _msg$[ebp]
	push	edx
	mov	eax, DWORD PTR _hStatusDlg$[ebp]
	push	eax
	call	DWORD PTR __imp__IsDialogMessageA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@WinMain:

; 896  :     }
; 897  : 
; 898  :     display->MessagePump();

	mov	ecx, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	call	?MessagePump@GLWindow@@QAE_NXZ		; GLWindow::MessagePump

; 899  : 
; 900  :     if(bRun)

	movzx	ecx, BYTE PTR ?bRun@@3_NA		; bRun
	test	ecx, ecx
	je	SHORT $LN2@WinMain
$LN3@WinMain:

; 901  :     {
; 902  :       while(nCycles--)

	mov	edx, DWORD PTR _nCycles$[ebp]
	mov	DWORD PTR tv322[ebp], edx
	mov	eax, DWORD PTR _nCycles$[ebp]
	sub	eax, 1
	mov	DWORD PTR _nCycles$[ebp], eax
	cmp	DWORD PTR tv322[ebp], 0
	je	SHORT $LN2@WinMain

; 903  :       {
; 904  :         nuonEnv->mpe[3]->ExecuteSingleCycle();

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [ecx+12]
	call	?FetchDecodeExecute@MPE@@QAE_NXZ	; MPE::FetchDecodeExecute

; 905  :         nuonEnv->mpe[2]->ExecuteSingleCycle();

	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [edx+8]
	call	?FetchDecodeExecute@MPE@@QAE_NXZ	; MPE::FetchDecodeExecute

; 906  :         nuonEnv->mpe[1]->ExecuteSingleCycle();

	mov	eax, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [eax+4]
	call	?FetchDecodeExecute@MPE@@QAE_NXZ	; MPE::FetchDecodeExecute

; 907  :         nuonEnv->mpe[0]->ExecuteSingleCycle();

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	ecx, DWORD PTR [ecx]
	call	?FetchDecodeExecute@MPE@@QAE_NXZ	; MPE::FetchDecodeExecute

; 908  :         if(nuonEnv->pendingCommRequests)

	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	cmp	DWORD PTR [edx+44], 0
	je	SHORT $LN1@WinMain

; 909  :         {
; 910  :           DoCommBusController();

	call	?DoCommBusController@@YAXXZ		; DoCommBusController
$LN1@WinMain:

; 911  :         }
; 912  :         //nuonEnv->videoDisplayCycleCount += nuonEnv->mpe[3]->cycleCounter;
; 913  :         //ProcessCycleBasedEvents();
; 914  :       }      

	jmp	SHORT $LN3@WinMain
$LN2@WinMain:

; 915  : 
; 916  :       //if(nuonEnv->videoDisplayCycleCount >= (54000000/60))
; 917  :       //{
; 918  :       //  IncrementVideoFieldCounter();
; 919  :       //  nuonEnv->videoDisplayCycleCount -= (54000000/60);
; 920  :       //}
; 921  :     }
; 922  : 
; 923  :     nCycles = 500;

	mov	DWORD PTR _nCycles$[ebp], 500		; 000001f4H

; 924  :   }

	jmp	$LN8@WinMain
$LN7@WinMain:

; 925  : 
; 926  : /********************************************************************
; 927  : CLEANUP AND APPLICATION SHUTDOWN CODE
; 928  : ********************************************************************/
; 929  : 
; 930  :   ShowWindow(hDlg,FALSE);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _hDlg$[ebp]
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 931  :   ShowWindow(hStatusDlg,FALSE);

	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _hStatusDlg$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 932  :   EndDialog(hDlg,result);

	cmp	BYTE PTR $T80374[ebp], 0
	jne	SHORT $LN24@WinMain
	push	OFFSET $LN23@WinMain
	call	__RTC_UninitUse
	add	esp, 4
$LN24@WinMain:
	mov	esi, esp
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	mov	eax, DWORD PTR _hDlg$[ebp]
	push	eax
	call	DWORD PTR __imp__EndDialog@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 933  :   EndDialog(hStatusDlg,result);

	cmp	BYTE PTR $T80374[ebp], 0
	jne	SHORT $LN25@WinMain
	push	OFFSET $LN23@WinMain
	call	__RTC_UninitUse
	add	esp, 4
$LN25@WinMain:
	mov	esi, esp
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hStatusDlg$[ebp]
	push	edx
	call	DWORD PTR __imp__EndDialog@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 934  : 
; 935  :   FreeTextureMemory(mainChannelBuffer,false);

	push	0
	mov	eax, DWORD PTR ?mainChannelBuffer@@3PAEA ; mainChannelBuffer
	push	eax
	call	?FreeTextureMemory@@YAXPAE_N@Z		; FreeTextureMemory
	add	esp, 8

; 936  :   FreeTextureMemory(overlayChannelBuffer,true);

	push	1
	mov	ecx, DWORD PTR ?overlayChannelBuffer@@3PAEA ; overlayChannelBuffer
	push	ecx
	call	?FreeTextureMemory@@YAXPAE_N@Z		; FreeTextureMemory
	add	esp, 8

; 937  : 
; 938  :   //Destroy the Nuon environment object
; 939  :   delete nuonEnv;

	mov	edx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	mov	DWORD PTR $T80367[ebp], edx
	mov	eax, DWORD PTR $T80367[ebp]
	mov	DWORD PTR $T80366[ebp], eax
	cmp	DWORD PTR $T80366[ebp], 0
	je	SHORT $LN18@WinMain
	push	1
	mov	ecx, DWORD PTR $T80366[ebp]
	call	??_GNuonEnvironment@@QAEPAXI@Z
	mov	DWORD PTR tv349[ebp], eax
	jmp	SHORT $LN19@WinMain
$LN18@WinMain:
	mov	DWORD PTR tv349[ebp], 0
$LN19@WinMain:

; 940  : 
; 941  :   display->Close();

	mov	ecx, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	call	?Close@GLWindow@@QAEXXZ			; GLWindow::Close

; 942  : 
; 943  :   delete display;

	mov	ecx, DWORD PTR ?display@@3PAVGLWindow@@A ; display
	mov	DWORD PTR $T80371[ebp], ecx
	mov	edx, DWORD PTR $T80371[ebp]
	mov	DWORD PTR $T80370[ebp], edx
	cmp	DWORD PTR $T80370[ebp], 0
	je	SHORT $LN20@WinMain
	push	1
	mov	ecx, DWORD PTR $T80370[ebp]
	call	??_GGLWindow@@QAEPAXI@Z
	mov	DWORD PTR tv355[ebp], eax
	jmp	SHORT $LN21@WinMain
$LN20@WinMain:
	mov	DWORD PTR tv355[ebp], 0
$LN21@WinMain:

; 944  : 
; 945  :   return 0;

	xor	eax, eax

; 946  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN28@WinMain
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 152				; 00000098H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN28@WinMain:
	DD	1
	DD	$LN27@WinMain
$LN27@WinMain:
	DD	-40					; ffffffd8H
	DD	28					; 0000001cH
	DD	$LN26@WinMain
$LN26@WinMain:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$LN23@WinMain:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_WinMain@16 ENDP
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??1NuonEnvironment@@QAE@XZ:PROC			; NuonEnvironment::~NuonEnvironment
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GNuonEnvironment@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GNuonEnvironment@@QAEPAXI@Z PROC			; NuonEnvironment::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1NuonEnvironment@@QAE@XZ		; NuonEnvironment::~NuonEnvironment
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GNuonEnvironment@@QAEPAXI@Z ENDP			; NuonEnvironment::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1GLWindow@@QAE@XZ:PROC			; GLWindow::~GLWindow
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GGLWindow@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GGLWindow@@QAEPAXI@Z PROC				; GLWindow::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GLWindow@@QAE@XZ			; GLWindow::~GLWindow
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GGLWindow@@QAEPAXI@Z ENDP				; GLWindow::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?NuanceStart@@YAXHQAPAD@Z			; NuanceStart
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
?NuanceStart@@YAXHQAPAD@Z PROC				; NuanceStart

; 949  : {

	push	ebp
	mov	ebp, esp

; 950  :   //emulatorShell->show();
; 951  :   //registerWindow->show();
; 952  : 
; 953  :   //registerWindow->UpdateDebugDisplay(3);
; 954  :   //nuanceApp.exec();
; 955  :   
; 956  : }

	pop	ebp
	ret	0
?NuanceStart@@YAXHQAPAD@Z ENDP				; NuanceStart
_TEXT	ENDS
END
