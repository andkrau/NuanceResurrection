; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	c:\NuanceExperimental\PrintRCU.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG4431	DB	'rx', 00H
$SG4452	DB	00H
$SG4433	DB	'ry', 00H
$SG4456	DB	00H
$SG4435	DB	'ru', 00H
$SG4461	DB	00H
$SG4437	DB	'rv', 00H
$SG4466	DB	00H
$SG4438	DB	'rx', 00H
	ORG $+1
$SG4445	DB	'dec rc0', 0aH, 00H
	ORG $+3
$SG4447	DB	'dec rc0', 0aH, 'dec rc1', 00H
$SG4451	DB	0aH, 00H
	ORG $+2
$SG4453	DB	'dec rc0', 0aH, 'dec rc1%s', 00H
	ORG $+2
$SG4455	DB	0aH, 00H
	ORG $+2
$SG4457	DB	'dec rc0%s', 00H
	ORG $+2
$SG4460	DB	0aH, 00H
	ORG $+2
$SG4462	DB	'dec rc1%s', 00H
	ORG $+2
$SG4465	DB	0aH, 00H
	ORG $+2
$SG4467	DB	'%s', 00H
	ORG $+1
$SG4475	DB	'addr #$%8.8lX, %s', 0aH, 00H
	ORG $+1
$SG4476	DB	'%s', 00H
	ORG $+1
$SG4484	DB	'addr r%lu, %s', 0aH, 00H
	ORG $+1
$SG4485	DB	'%s', 00H
	ORG $+1
$SG4493	DB	'mvr #$%8.8lX, %s', 0aH, 00H
	ORG $+2
$SG4494	DB	'%s', 00H
	ORG $+1
$SG4502	DB	'mvr r%lu, %s', 0aH, 00H
	ORG $+2
$SG4503	DB	'%s', 00H
	ORG $+1
$SG4511	DB	'range %s', 0aH, 00H
	ORG $+2
$SG4512	DB	'%s', 00H
	ORG $+1
$SG4520	DB	'modulo %s', 0aH, 00H
	ORG $+1
$SG4521	DB	'%s', 00H
CONST	ENDS
PUBLIC	?GetIndexRegister@@YAPADI@Z			; GetIndexRegister
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\nuanceexperimental\printrcu.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv65 = -4						; size = 4
_which$ = 8						; size = 4
?GetIndexRegister@@YAPADI@Z PROC			; GetIndexRegister

; 7    : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 8    :   switch(which & 0x3)

	mov	eax, DWORD PTR _which$[ebp]
	and	eax, 3
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 3
	ja	SHORT $LN5@GetIndexRe
	mov	ecx, DWORD PTR tv65[ebp]
	jmp	DWORD PTR $LN9@GetIndexRe[ecx*4]
$LN4@GetIndexRe:

; 9    :   {
; 10   :     case 0:
; 11   :       return "rx";

	mov	eax, OFFSET $SG4431
	jmp	SHORT $LN7@GetIndexRe
$LN3@GetIndexRe:

; 12   :     case 1:
; 13   :       return "ry";

	mov	eax, OFFSET $SG4433
	jmp	SHORT $LN7@GetIndexRe
$LN2@GetIndexRe:

; 14   :     case 2:
; 15   :       return "ru";

	mov	eax, OFFSET $SG4435
	jmp	SHORT $LN7@GetIndexRe
$LN1@GetIndexRe:

; 16   :     case 3:
; 17   :       return "rv";

	mov	eax, OFFSET $SG4437
	jmp	SHORT $LN7@GetIndexRe
$LN5@GetIndexRe:

; 18   :   }
; 19   :   //supress warning
; 20   :   return "rx";

	mov	eax, OFFSET $SG4438
$LN7@GetIndexRe:

; 21   : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@GetIndexRe:
	DD	$LN4@GetIndexRe
	DD	$LN3@GetIndexRe
	DD	$LN2@GetIndexRe
	DD	$LN1@GetIndexRe
?GetIndexRegister@@YAPADI@Z ENDP			; GetIndexRegister
_TEXT	ENDS
PUBLIC	?Print_DEC@@YAIPADAAVNuance@@_N@Z		; Print_DEC
EXTRN	_strlen:PROC
EXTRN	_sprintf:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv159 = -64						; size = 4
tv144 = -60						; size = 4
tv128 = -56						; size = 4
tv83 = -52						; size = 4
_bufinc$ = -48						; size = 4
_decstr1$ = -40						; size = 16
_decstr0$ = -16						; size = 9
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_DEC@@YAIPADAAVNuance@@_N@Z PROC			; Print_DEC

; 24   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	edi
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 25   :   char decstr0[] = "dec rc0\n";

	mov	eax, DWORD PTR $SG4445
	mov	DWORD PTR _decstr0$[ebp], eax
	mov	ecx, DWORD PTR $SG4445+4
	mov	DWORD PTR _decstr0$[ebp+4], ecx
	mov	dl, BYTE PTR $SG4445+8
	mov	BYTE PTR _decstr0$[ebp+8], dl

; 26   :   char decstr1[] = "dec rc0\ndec rc1";

	mov	eax, DWORD PTR $SG4447
	mov	DWORD PTR _decstr1$[ebp], eax
	mov	ecx, DWORD PTR $SG4447+4
	mov	DWORD PTR _decstr1$[ebp+4], ecx
	mov	edx, DWORD PTR $SG4447+8
	mov	DWORD PTR _decstr1$[ebp+8], edx
	mov	eax, DWORD PTR $SG4447+12
	mov	DWORD PTR _decstr1$[ebp+12], eax

; 27   :   uint32 bufinc = 0;

	mov	DWORD PTR _bufinc$[ebp], 0

; 28   : 
; 29   :   if(nuance.fields[FIELD_RCU_INFO] & RCU_DEC_RC0)

	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	and	edx, 2
	je	$LN7@Print_DEC

; 30   :   {
; 31   :     if(nuance.fields[FIELD_RCU_INFO] & RCU_DEC_RC1)

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	and	ecx, 1
	je	SHORT $LN6@Print_DEC

; 32   :     {
; 33   :       sprintf(buffer,"dec rc0\ndec rc1%s",bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN10@Print_DEC
	mov	DWORD PTR tv83[ebp], OFFSET $SG4451
	jmp	SHORT $LN11@Print_DEC
$LN10@Print_DEC:
	mov	DWORD PTR tv83[ebp], OFFSET $SG4452
$LN11@Print_DEC:
	mov	eax, DWORD PTR tv83[ebp]
	push	eax
	push	OFFSET $SG4453
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 34   :       bufinc += (strlen(decstr1) + (bNewline ? 1 : 0));

	lea	edx, DWORD PTR _decstr1$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	ecx, DWORD PTR _bufinc$[ebp]
	add	ecx, eax
	mov	DWORD PTR _bufinc$[ebp], ecx

; 35   :     }
; 36   :     else

	jmp	SHORT $LN5@Print_DEC
$LN6@Print_DEC:

; 37   :     {
; 38   :       sprintf(buffer,"dec rc0%s",bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN12@Print_DEC
	mov	DWORD PTR tv128[ebp], OFFSET $SG4455
	jmp	SHORT $LN13@Print_DEC
$LN12@Print_DEC:
	mov	DWORD PTR tv128[ebp], OFFSET $SG4456
$LN13@Print_DEC:
	mov	eax, DWORD PTR tv128[ebp]
	push	eax
	push	OFFSET $SG4457
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 39   :       bufinc += (strlen(decstr0) + (bNewline ? 1 : 0));

	lea	edx, DWORD PTR _decstr0$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	ecx, DWORD PTR _bufinc$[ebp]
	add	ecx, eax
	mov	DWORD PTR _bufinc$[ebp], ecx
$LN5@Print_DEC:

; 40   :     }
; 41   :   }
; 42   :   else

	jmp	$LN4@Print_DEC
$LN7@Print_DEC:

; 43   :   {
; 44   :     if(nuance.fields[FIELD_RCU_INFO] & RCU_DEC_RC1)

	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	and	eax, 1
	je	SHORT $LN3@Print_DEC

; 45   :     {
; 46   :       sprintf(buffer,"dec rc1%s",bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN14@Print_DEC
	mov	DWORD PTR tv144[ebp], OFFSET $SG4460
	jmp	SHORT $LN15@Print_DEC
$LN14@Print_DEC:
	mov	DWORD PTR tv144[ebp], OFFSET $SG4461
$LN15@Print_DEC:
	mov	edx, DWORD PTR tv144[ebp]
	push	edx
	push	OFFSET $SG4462
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 47   :       bufinc += (strlen(decstr0) + (bNewline ? 1 : 0));

	lea	ecx, DWORD PTR _decstr0$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	edx, DWORD PTR _bufinc$[ebp]
	add	edx, eax
	mov	DWORD PTR _bufinc$[ebp], edx

; 48   :     }
; 49   :     else

	jmp	SHORT $LN4@Print_DEC
$LN3@Print_DEC:

; 50   :     {
; 51   :       if(bNewline)

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN4@Print_DEC

; 52   :       {
; 53   :         sprintf(buffer,"%s",bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN16@Print_DEC
	mov	DWORD PTR tv159[ebp], OFFSET $SG4465
	jmp	SHORT $LN17@Print_DEC
$LN16@Print_DEC:
	mov	DWORD PTR tv159[ebp], OFFSET $SG4466
$LN17@Print_DEC:
	mov	edx, DWORD PTR tv159[ebp]
	push	edx
	push	OFFSET $SG4467
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 54   :         bufinc += (bNewline ? 1 : 0);

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	ecx, DWORD PTR _bufinc$[ebp]
	mov	DWORD PTR _bufinc$[ebp], ecx
$LN4@Print_DEC:

; 55   :       }
; 56   :     }
; 57   :   }
; 58   : 
; 59   :   return bufinc;

	mov	eax, DWORD PTR _bufinc$[ebp]

; 60   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@Print_DEC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN21@Print_DEC:
	DD	2
	DD	$LN20@Print_DEC
$LN20@Print_DEC:
	DD	-16					; fffffff0H
	DD	9
	DD	$LN18@Print_DEC
	DD	-40					; ffffffd8H
	DD	16					; 00000010H
	DD	$LN19@Print_DEC
$LN19@Print_DEC:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	49					; 00000031H
	DB	0
$LN18@Print_DEC:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	48					; 00000030H
	DB	0
?Print_DEC@@YAIPADAAVNuance@@_N@Z ENDP			; Print_DEC
_TEXT	ENDS
PUBLIC	?Print_ADDRImmediate@@YAIPADAAVNuance@@_N@Z	; Print_ADDRImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bufinc$ = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ADDRImmediate@@YAIPADAAVNuance@@_N@Z PROC	; Print_ADDRImmediate

; 63   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 64   :   char tempStr[512];
; 65   :   uint32 bufinc = 0;

	mov	DWORD PTR _bufinc$[ebp], 0

; 66   : 
; 67   :   sprintf(tempStr,"addr #$%8.8lX, %s\n",nuance.fields[FIELD_RCU_SRC],GetIndexRegister(nuance.fields[FIELD_RCU_DEST]));

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	?GetIndexRegister@@YAPADI@Z		; GetIndexRegister
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET $SG4475
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 68   :   sprintf(buffer,"%s",tempStr);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4476
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 69   :   bufinc = strlen(tempStr);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _bufinc$[ebp], eax

; 70   :   buffer += bufinc;

	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, DWORD PTR _bufinc$[ebp]
	mov	DWORD PTR _buffer$[ebp], edx

; 71   :   return bufinc + Print_DEC(buffer,nuance,bNewline);

	mov	al, BYTE PTR _bNewline$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	?Print_DEC@@YAIPADAAVNuance@@_N@Z	; Print_DEC
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _bufinc$[ebp]

; 72   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Print_ADDR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Print_ADDR:
	DD	1
	DD	$LN4@Print_ADDR
$LN4@Print_ADDR:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN3@Print_ADDR
$LN3@Print_ADDR:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ADDRImmediate@@YAIPADAAVNuance@@_N@Z ENDP	; Print_ADDRImmediate
_TEXT	ENDS
PUBLIC	?Print_ADDRScalar@@YAIPADAAVNuance@@_N@Z	; Print_ADDRScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bufinc$ = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ADDRScalar@@YAIPADAAVNuance@@_N@Z PROC		; Print_ADDRScalar

; 75   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 76   :   char tempStr[512];
; 77   :   uint32 bufinc = 0;

	mov	DWORD PTR _bufinc$[ebp], 0

; 78   : 
; 79   :   sprintf(tempStr,"addr r%lu, %s\n",nuance.fields[FIELD_RCU_SRC],GetIndexRegister(nuance.fields[FIELD_RCU_DEST]));

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	?GetIndexRegister@@YAPADI@Z		; GetIndexRegister
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET $SG4484
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 80   :   sprintf(buffer,"%s",tempStr);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4485
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 81   :   bufinc = strlen(tempStr);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _bufinc$[ebp], eax

; 82   :   buffer += bufinc;

	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, DWORD PTR _bufinc$[ebp]
	mov	DWORD PTR _buffer$[ebp], edx

; 83   :   return bufinc + Print_DEC(buffer,nuance,bNewline);

	mov	al, BYTE PTR _bNewline$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	?Print_DEC@@YAIPADAAVNuance@@_N@Z	; Print_DEC
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _bufinc$[ebp]

; 84   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Print_ADDR@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Print_ADDR@2:
	DD	1
	DD	$LN4@Print_ADDR@2
$LN4@Print_ADDR@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN3@Print_ADDR@2
$LN3@Print_ADDR@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ADDRScalar@@YAIPADAAVNuance@@_N@Z ENDP		; Print_ADDRScalar
_TEXT	ENDS
PUBLIC	?Print_MVRImmediate@@YAIPADAAVNuance@@_N@Z	; Print_MVRImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bufinc$ = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MVRImmediate@@YAIPADAAVNuance@@_N@Z PROC		; Print_MVRImmediate

; 87   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 88   :   char tempStr[512];
; 89   :   uint32 bufinc = 0;

	mov	DWORD PTR _bufinc$[ebp], 0

; 90   : 
; 91   :   sprintf(tempStr,"mvr #$%8.8lX, %s\n",nuance.fields[FIELD_RCU_SRC],GetIndexRegister(nuance.fields[FIELD_RCU_DEST]));

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	?GetIndexRegister@@YAPADI@Z		; GetIndexRegister
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET $SG4493
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 92   :   sprintf(buffer,"%s",tempStr);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4494
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 93   :   bufinc = strlen(tempStr);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _bufinc$[ebp], eax

; 94   :   buffer += bufinc;

	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, DWORD PTR _bufinc$[ebp]
	mov	DWORD PTR _buffer$[ebp], edx

; 95   :   return bufinc + Print_DEC(buffer,nuance,bNewline);

	mov	al, BYTE PTR _bNewline$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	?Print_DEC@@YAIPADAAVNuance@@_N@Z	; Print_DEC
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _bufinc$[ebp]

; 96   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Print_MVRI
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Print_MVRI:
	DD	1
	DD	$LN4@Print_MVRI
$LN4@Print_MVRI:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN3@Print_MVRI
$LN3@Print_MVRI:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MVRImmediate@@YAIPADAAVNuance@@_N@Z ENDP		; Print_MVRImmediate
_TEXT	ENDS
PUBLIC	?Print_MVRScalar@@YAIPADAAVNuance@@_N@Z		; Print_MVRScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bufinc$ = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MVRScalar@@YAIPADAAVNuance@@_N@Z PROC		; Print_MVRScalar

; 99   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 100  :   char tempStr[512];
; 101  :   uint32 bufinc = 0;

	mov	DWORD PTR _bufinc$[ebp], 0

; 102  : 
; 103  :   sprintf(tempStr,"mvr r%lu, %s\n",nuance.fields[FIELD_RCU_SRC],GetIndexRegister(nuance.fields[FIELD_RCU_DEST]));

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	?GetIndexRegister@@YAPADI@Z		; GetIndexRegister
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET $SG4502
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 104  :   sprintf(buffer,"%s",tempStr);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4503
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 105  :   bufinc = strlen(tempStr);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _bufinc$[ebp], eax

; 106  :   buffer += bufinc;

	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, DWORD PTR _bufinc$[ebp]
	mov	DWORD PTR _buffer$[ebp], edx

; 107  :   return bufinc + Print_DEC(buffer,nuance,bNewline);

	mov	al, BYTE PTR _bNewline$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	?Print_DEC@@YAIPADAAVNuance@@_N@Z	; Print_DEC
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _bufinc$[ebp]

; 108  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Print_MVRS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Print_MVRS:
	DD	1
	DD	$LN4@Print_MVRS
$LN4@Print_MVRS:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN3@Print_MVRS
$LN3@Print_MVRS:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MVRScalar@@YAIPADAAVNuance@@_N@Z ENDP		; Print_MVRScalar
_TEXT	ENDS
PUBLIC	?Print_Range@@YAIPADAAVNuance@@_N@Z		; Print_Range
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bufinc$ = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_Range@@YAIPADAAVNuance@@_N@Z PROC		; Print_Range

; 111  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 112  :   char tempStr[512];
; 113  :   uint32 bufinc = 0;

	mov	DWORD PTR _bufinc$[ebp], 0

; 114  : 
; 115  :   sprintf(tempStr,"range %s\n",GetIndexRegister(nuance.fields[FIELD_RCU_SRC]));

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?GetIndexRegister@@YAPADI@Z		; GetIndexRegister
	add	esp, 4
	push	eax
	push	OFFSET $SG4511
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 116  :   sprintf(buffer,"%s",tempStr);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4512
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 117  :   bufinc = strlen(tempStr);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _bufinc$[ebp], eax

; 118  :   buffer += bufinc;

	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, DWORD PTR _bufinc$[ebp]
	mov	DWORD PTR _buffer$[ebp], eax

; 119  :   return bufinc + Print_DEC(buffer,nuance,bNewline);

	mov	cl, BYTE PTR _bNewline$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	?Print_DEC@@YAIPADAAVNuance@@_N@Z	; Print_DEC
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _bufinc$[ebp]

; 120  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Print_Rang
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Print_Rang:
	DD	1
	DD	$LN4@Print_Rang
$LN4@Print_Rang:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN3@Print_Rang
$LN3@Print_Rang:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_Range@@YAIPADAAVNuance@@_N@Z ENDP		; Print_Range
_TEXT	ENDS
PUBLIC	?Print_Modulo@@YAIPADAAVNuance@@_N@Z		; Print_Modulo
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bufinc$ = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_Modulo@@YAIPADAAVNuance@@_N@Z PROC		; Print_Modulo

; 123  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 124  :   char tempStr[512];
; 125  :   uint32 bufinc = 0;

	mov	DWORD PTR _bufinc$[ebp], 0

; 126  : 
; 127  :   sprintf(tempStr,"modulo %s\n",GetIndexRegister(nuance.fields[FIELD_RCU_SRC]));

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?GetIndexRegister@@YAPADI@Z		; GetIndexRegister
	add	esp, 4
	push	eax
	push	OFFSET $SG4520
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 128  :   sprintf(buffer,"%s",tempStr);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4521
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 129  :   bufinc = strlen(tempStr);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _bufinc$[ebp], eax

; 130  :   buffer += bufinc;

	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, DWORD PTR _bufinc$[ebp]
	mov	DWORD PTR _buffer$[ebp], eax

; 131  :   return bufinc + Print_DEC(buffer,nuance,bNewline);

	mov	cl, BYTE PTR _bNewline$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	?Print_DEC@@YAIPADAAVNuance@@_N@Z	; Print_DEC
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _bufinc$[ebp]

; 132  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Print_Modu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Print_Modu:
	DD	1
	DD	$LN4@Print_Modu
$LN4@Print_Modu:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN3@Print_Modu
$LN3@Print_Modu:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_Modulo@@YAIPADAAVNuance@@_N@Z ENDP		; Print_Modulo
_TEXT	ENDS
END
