; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	c:\NuanceExperimental\memory.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
__bad_alloc_Message DD FLAT:$SG12222
_DATA	ENDS
CONST	SEGMENT
$SG12222 DB	'bad allocation', 00H
	ORG $+1
$SG41322 DB	'WARNING WILL ROBINSON', 00H
CONST	ENDS
PUBLIC	?MemLocalScratch@@YAXPAVMPE@@@Z			; MemLocalScratch
EXTRN	?SwapScalarBytes@@YIXPAI@Z:PROC			; SwapScalarBytes
EXTRN	?GetPointerToMemory@NuonEnvironment@@QAEPAXPAVMPE@@I_N@Z:PROC ; NuonEnvironment::GetPointerToMemory
EXTRN	?nuonEnv@@3PAVNuonEnvironment@@A:DWORD		; nuonEnv
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\nuanceexperimental\memory.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_pMem$ = -8						; size = 4
_pSize$ = -4						; size = 4
_the_mpe$ = 8						; size = 4
?MemLocalScratch@@YAXPAVMPE@@@Z PROC			; MemLocalScratch

; 13   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 14   :   uint32 pSize = the_mpe->regs[0];

	mov	eax, DWORD PTR _the_mpe$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pSize$[ebp], ecx

; 15   :   uint32 *pMem;
; 16   : 
; 17   :   the_mpe->regs[0] = 0x20100C80;

	mov	edx, DWORD PTR _the_mpe$[ebp]
	mov	DWORD PTR [edx], 537922688		; 20100c80H

; 18   : 
; 19   :   //pointer to size buffer may be zero
; 20   :   if(pSize != 0)

	cmp	DWORD PTR _pSize$[ebp], 0
	je	SHORT $LN2@MemLocalSc

; 21   :   {
; 22   :     //MML2D will corrupt memory in most commercial games of a size greater than 3968 is returned.
; 23   :     //The address and size returned in this implementation are identical to the values returned by
; 24   :     //the VMLabs BIOS
; 25   :     pMem = (uint32 *)nuonEnv->GetPointerToMemory(the_mpe, pSize);

	push	1
	mov	eax, DWORD PTR _pSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _the_mpe$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	call	?GetPointerToMemory@NuonEnvironment@@QAEPAXPAVMPE@@I_N@Z ; NuonEnvironment::GetPointerToMemory
	mov	DWORD PTR _pMem$[ebp], eax

; 26   :     *pMem = 512;

	mov	edx, DWORD PTR _pMem$[ebp]
	mov	DWORD PTR [edx], 512			; 00000200H

; 27   : 
; 28   :     SwapScalarBytes(pMem);

	mov	ecx, DWORD PTR _pMem$[ebp]
	call	?SwapScalarBytes@@YIXPAI@Z		; SwapScalarBytes
$LN2@MemLocalSc:

; 29   :   }
; 30   : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?MemLocalScratch@@YAXPAVMPE@@@Z ENDP			; MemLocalScratch
_TEXT	ENDS
PUBLIC	?MemAlloc@@YAXPAVMPE@@@Z			; MemAlloc
EXTRN	_printf:PROC
EXTRN	?Alloc@NuonMemoryManager@@QAEIIII@Z:PROC	; NuonMemoryManager::Alloc
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_result$ = -20						; size = 4
_flags$ = -16						; size = 4
_requestedAlignment$ = -12				; size = 4
_requestedBytes$ = -8					; size = 4
_address$ = -4						; size = 4
_mpe$ = 8						; size = 4
?MemAlloc@@YAXPAVMPE@@@Z PROC				; MemAlloc

; 33   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 34   :   uint32 *address = 0;

	mov	DWORD PTR _address$[ebp], 0

; 35   : 
; 36   :   uint32 requestedBytes = mpe->regs[0];

	mov	eax, DWORD PTR _mpe$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _requestedBytes$[ebp], ecx

; 37   :   uint32 requestedAlignment = mpe->regs[1];

	mov	edx, DWORD PTR _mpe$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _requestedAlignment$[ebp], eax

; 38   :   uint32 flags = mpe->regs[2];

	mov	ecx, DWORD PTR _mpe$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _flags$[ebp], edx

; 39   :   uint32 result;
; 40   : 
; 41   :   result = nuonEnv->nuonMemoryManager.Alloc(requestedBytes, requestedAlignment, flags);

	mov	eax, DWORD PTR _flags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _requestedAlignment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _requestedBytes$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	add	ecx, 16					; 00000010H
	call	?Alloc@NuonMemoryManager@@QAEIIII@Z	; NuonMemoryManager::Alloc
	mov	DWORD PTR _result$[ebp], eax

; 42   :   mpe->regs[0] = result;

	mov	eax, DWORD PTR _mpe$[ebp]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	DWORD PTR [eax], ecx

; 43   :   if(!result)

	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN2@MemAlloc

; 44   :   {
; 45   :     printf("WARNING WILL ROBINSON");

	push	OFFSET $SG41322
	call	_printf
	add	esp, 4
$LN2@MemAlloc:

; 46   :   }
; 47   : }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?MemAlloc@@YAXPAVMPE@@@Z ENDP				; MemAlloc
_TEXT	ENDS
PUBLIC	?MemFree@@YAXPAVMPE@@@Z				; MemFree
EXTRN	?Free@NuonMemoryManager@@QAEXI@Z:PROC		; NuonMemoryManager::Free
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_address$ = -4						; size = 4
_mpe$ = 8						; size = 4
?MemFree@@YAXPAVMPE@@@Z PROC				; MemFree

; 50   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 51   :   uint32 address = mpe->regs[0];

	mov	eax, DWORD PTR _mpe$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _address$[ebp], ecx

; 52   : 
; 53   :   nuonEnv->nuonMemoryManager.Free(address);

	mov	edx, DWORD PTR _address$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	add	ecx, 16					; 00000010H
	call	?Free@NuonMemoryManager@@QAEXI@Z	; NuonMemoryManager::Free

; 54   : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?MemFree@@YAXPAVMPE@@@Z ENDP				; MemFree
_TEXT	ENDS
PUBLIC	?MemInit@@YAXPAVMPE@@@Z				; MemInit
EXTRN	?Init@NuonMemoryManager@@QAEXXZ:PROC		; NuonMemoryManager::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_mpe$ = 8						; size = 4
?MemInit@@YAXPAVMPE@@@Z PROC				; MemInit

; 58   : {

	push	ebp
	mov	ebp, esp

; 59   :   nuonEnv->nuonMemoryManager.Init();

	mov	ecx, DWORD PTR ?nuonEnv@@3PAVNuonEnvironment@@A ; nuonEnv
	add	ecx, 16					; 00000010H
	call	?Init@NuonMemoryManager@@QAEXXZ		; NuonMemoryManager::Init

; 60   : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?MemInit@@YAXPAVMPE@@@Z ENDP				; MemInit
_TEXT	ENDS
END
