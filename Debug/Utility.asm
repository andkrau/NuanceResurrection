; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	c:\NuanceExperimental\Utility.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?OnesCount@@YAII@Z				; OnesCount
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\nuanceexperimental\utility.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_x$ = 8							; size = 4
?OnesCount@@YAII@Z PROC					; OnesCount

; 4    : {

	push	ebp
	mov	ebp, esp

; 5    :   x -= ((x >> 1) & 0x55555555);

	mov	eax, DWORD PTR _x$[ebp]
	shr	eax, 1
	and	eax, 1431655765				; 55555555H
	mov	ecx, DWORD PTR _x$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _x$[ebp], ecx

; 6    :   x = (((x >> 2) & 0x33333333) + (x & 0x33333333));

	mov	edx, DWORD PTR _x$[ebp]
	shr	edx, 2
	and	edx, 858993459				; 33333333H
	mov	eax, DWORD PTR _x$[ebp]
	and	eax, 858993459				; 33333333H
	add	edx, eax
	mov	DWORD PTR _x$[ebp], edx

; 7    :   x = (((x >> 4) + x) & 0x0f0f0f0f);

	mov	ecx, DWORD PTR _x$[ebp]
	shr	ecx, 4
	add	ecx, DWORD PTR _x$[ebp]
	and	ecx, 252645135				; 0f0f0f0fH
	mov	DWORD PTR _x$[ebp], ecx

; 8    :   x += (x >> 8);

	mov	edx, DWORD PTR _x$[ebp]
	shr	edx, 8
	add	edx, DWORD PTR _x$[ebp]
	mov	DWORD PTR _x$[ebp], edx

; 9    :   x += (x >> 16);

	mov	eax, DWORD PTR _x$[ebp]
	shr	eax, 16					; 00000010H
	add	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _x$[ebp], eax

; 10   :   return(x & 0x0000003f);

	mov	eax, DWORD PTR _x$[ebp]
	and	eax, 63					; 0000003fH

; 11   : }

	pop	ebp
	ret	0
?OnesCount@@YAII@Z ENDP					; OnesCount
_TEXT	ENDS
END
