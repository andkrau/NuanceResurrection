; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	c:\NuanceExperimental\DecodeECU.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?braConditionalFlags@@3IA			; braConditionalFlags
PUBLIC	?braConditionalNOPFlags@@3IA			; braConditionalNOPFlags
PUBLIC	?braAlwaysFlags@@3IA				; braAlwaysFlags
PUBLIC	?braAlwaysNOPFlags@@3IA				; braAlwaysNOPFlags
PUBLIC	?jmpAlwaysIndirectFlags@@3IA			; jmpAlwaysIndirectFlags
PUBLIC	?jmpAlwaysIndirectNOPFlags@@3IA			; jmpAlwaysIndirectNOPFlags
PUBLIC	?jmpConditionalIndirectFlags@@3IA		; jmpConditionalIndirectFlags
PUBLIC	?jmpConditionalIndirectNOPFlags@@3IA		; jmpConditionalIndirectNOPFlags
PUBLIC	?jsrAlwaysFlags@@3IA				; jsrAlwaysFlags
PUBLIC	?jsrAlwaysNOPFlags@@3IA				; jsrAlwaysNOPFlags
PUBLIC	?jsrAlwaysIndirectFlags@@3IA			; jsrAlwaysIndirectFlags
PUBLIC	?jsrAlwaysIndirectNOPFlags@@3IA			; jsrAlwaysIndirectNOPFlags
PUBLIC	?jsrConditionalFlags@@3IA			; jsrConditionalFlags
PUBLIC	?jsrConditionalNOPFlags@@3IA			; jsrConditionalNOPFlags
PUBLIC	?jsrConditionalIndirectFlags@@3IA		; jsrConditionalIndirectFlags
PUBLIC	?jsrConditionalIndirectNOPFlags@@3IA		; jsrConditionalIndirectNOPFlags
PUBLIC	?rtsAlwaysFlags@@3IA				; rtsAlwaysFlags
PUBLIC	?rtsAlwaysNOPFlags@@3IA				; rtsAlwaysNOPFlags
PUBLIC	?rtsConditionalFlags@@3IA			; rtsConditionalFlags
PUBLIC	?rtsConditionalNOPFlags@@3IA			; rtsConditionalNOPFlags
PUBLIC	?rti1ConditionalFlags@@3IA			; rti1ConditionalFlags
PUBLIC	?rti1ConditionalNOPFlags@@3IA			; rti1ConditionalNOPFlags
PUBLIC	?rti2ConditionalFlags@@3IA			; rti2ConditionalFlags
PUBLIC	?rti2ConditionalNOPFlags@@3IA			; rti2ConditionalNOPFlags
PUBLIC	?flagDependencies@@3PAIA			; flagDependencies
_BSS	SEGMENT
?braConditionalFlags@@3IA DD 01H DUP (?)		; braConditionalFlags
?braConditionalNOPFlags@@3IA DD 01H DUP (?)		; braConditionalNOPFlags
?braAlwaysFlags@@3IA DD 01H DUP (?)			; braAlwaysFlags
?braAlwaysNOPFlags@@3IA DD 01H DUP (?)			; braAlwaysNOPFlags
?jmpAlwaysIndirectFlags@@3IA DD 01H DUP (?)		; jmpAlwaysIndirectFlags
?jmpAlwaysIndirectNOPFlags@@3IA DD 01H DUP (?)		; jmpAlwaysIndirectNOPFlags
?jmpConditionalIndirectFlags@@3IA DD 01H DUP (?)	; jmpConditionalIndirectFlags
?jmpConditionalIndirectNOPFlags@@3IA DD 01H DUP (?)	; jmpConditionalIndirectNOPFlags
?jsrAlwaysFlags@@3IA DD 01H DUP (?)			; jsrAlwaysFlags
?jsrAlwaysNOPFlags@@3IA DD 01H DUP (?)			; jsrAlwaysNOPFlags
?jsrAlwaysIndirectFlags@@3IA DD 01H DUP (?)		; jsrAlwaysIndirectFlags
?jsrAlwaysIndirectNOPFlags@@3IA DD 01H DUP (?)		; jsrAlwaysIndirectNOPFlags
?jsrConditionalFlags@@3IA DD 01H DUP (?)		; jsrConditionalFlags
?jsrConditionalNOPFlags@@3IA DD 01H DUP (?)		; jsrConditionalNOPFlags
?jsrConditionalIndirectFlags@@3IA DD 01H DUP (?)	; jsrConditionalIndirectFlags
?jsrConditionalIndirectNOPFlags@@3IA DD 01H DUP (?)	; jsrConditionalIndirectNOPFlags
?rtsAlwaysFlags@@3IA DD 01H DUP (?)			; rtsAlwaysFlags
?rtsAlwaysNOPFlags@@3IA DD 01H DUP (?)			; rtsAlwaysNOPFlags
?rtsConditionalFlags@@3IA DD 01H DUP (?)		; rtsConditionalFlags
?rtsConditionalNOPFlags@@3IA DD 01H DUP (?)		; rtsConditionalNOPFlags
?rti1ConditionalFlags@@3IA DD 01H DUP (?)		; rti1ConditionalFlags
?rti1ConditionalNOPFlags@@3IA DD 01H DUP (?)		; rti1ConditionalNOPFlags
?rti2ConditionalFlags@@3IA DD 01H DUP (?)		; rti2ConditionalFlags
?rti2ConditionalNOPFlags@@3IA DD 01H DUP (?)		; rti2ConditionalNOPFlags
_BSS	ENDS
_DATA	SEGMENT
?flagDependencies@@3PAIA DD 08000H			; flagDependencies
	DD	0100000H
	DD	0200000H
	DD	010000H
	DD	08000H
	DD	010000H
	DD	020000H
	DD	020000H
	DD	060000H
	DD	080000H
	DD	080000H
	DD	018000H
	DD	068000H
	DD	018000H
	DD	040000H
	DD	040000H
	DD	068000H
	DD	00H
	DD	0800000H
	DD	0800000H
	DD	060000H
	DD	0400000H
	DD	0400000H
	DD	00H
	DD	0100000H
	DD	00H
	DD	00H
	DD	01000000H
	DD	0200000H
	DD	01000000H
	DD	02000000H
	DD	02000000H
_DATA	ENDS
PUBLIC	?DecodeInstruction_ECU16@MPE@@QAEXPAEPAVInstructionCacheEntry@@PAI@Z ; MPE::DecodeInstruction_ECU16
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\nuanceexperimental\decodeecu.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv229 = -36						; size = 4
_bImplicitNOP$ = -29					; size = 1
_offset$ = -28						; size = 4
_field_FF$ = -24					; size = 4
_field_7F$ = -20					; size = 4
_field_3E0$ = -16					; size = 4
_field_380$ = -12					; size = 4
_field_300$ = -8					; size = 4
_this$ = -4						; size = 4
_iPtr$ = 8						; size = 4
_entry$ = 12						; size = 4
_immExt$ = 16						; size = 4
?DecodeInstruction_ECU16@MPE@@QAEXPAEPAVInstructionCacheEntry@@PAI@Z PROC ; MPE::DecodeInstruction_ECU16
; _this$ = ecx

; 103  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 104  :   uint32 field_300 = *iPtr & 0x03UL;

	mov	eax, DWORD PTR _iPtr$[ebp]
	movzx	ecx, BYTE PTR [eax]
	and	ecx, 3
	mov	DWORD PTR _field_300$[ebp], ecx

; 105  :   uint32 field_380 = ((*iPtr & 0x03) << 1) | (*(iPtr + 1) >> 7);

	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx]
	and	eax, 3
	shl	eax, 1
	mov	ecx, DWORD PTR _iPtr$[ebp]
	movzx	edx, BYTE PTR [ecx+1]
	sar	edx, 7
	or	eax, edx
	mov	DWORD PTR _field_380$[ebp], eax

; 106  :   uint32 field_3E0 = ((*iPtr & 0x03) << 3) | (*(iPtr + 1) >> 5);

	mov	eax, DWORD PTR _iPtr$[ebp]
	movzx	ecx, BYTE PTR [eax]
	and	ecx, 3
	shl	ecx, 3
	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	sar	eax, 5
	or	ecx, eax
	mov	DWORD PTR _field_3E0$[ebp], ecx

; 107  :   uint32 field_7F = *(iPtr + 1) & 0x7FUL;

	mov	ecx, DWORD PTR _iPtr$[ebp]
	movzx	edx, BYTE PTR [ecx+1]
	and	edx, 127				; 0000007fH
	mov	DWORD PTR _field_7F$[ebp], edx

; 108  :   uint32 field_FF = *(iPtr + 1) & 0xFFUL;

	mov	eax, DWORD PTR _iPtr$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	and	ecx, 255				; 000000ffH
	mov	DWORD PTR _field_FF$[ebp], ecx

; 109  :   int32 offset;
; 110  :   bool bImplicitNOP;
; 111  : 
; 112  :   entry->packetInfo |= PACKETINFO_ECU;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	or	eax, 4
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 113  : 
; 114  :   if(*iPtr & 0x0C)

	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx]
	and	eax, 12					; 0000000cH
	je	$LN29@DecodeInst

; 115  :   {
; 116  :     //BRA
; 117  :     if((*iPtr & 0x04) == 0)

	mov	ecx, DWORD PTR _iPtr$[ebp]
	movzx	edx, BYTE PTR [ecx]
	and	edx, 4
	jne	$LN28@DecodeInst

; 118  :     {
; 119  :       //BRA cc
; 120  : 
; 121  :       //condition is 0x380 or 0x30380, offset is 07F or 0x7FFFFFF8007F
; 122  :       
; 123  :       if(*immExt == 0)

	mov	eax, DWORD PTR _immExt$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN27@DecodeInst

; 124  :       {
; 125  :         //BRA 16
; 126  : 
; 127  :         //can convert condition code sequencing using a simple multiply by four
; 128  :         entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_CONDITION)] = field_380 << 2;

	mov	ecx, DWORD PTR _field_380$[ebp]
	shl	ecx, 2
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+92], ecx

; 129  :         entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_ADDRESS)] = ((int32)(field_7F << 25)) >> (25 - 1);

	mov	eax, DWORD PTR _field_7F$[ebp]
	shl	eax, 25					; 00000019H
	sar	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+96], eax

; 130  :       }
; 131  :       else

	jmp	SHORT $LN26@DecodeInst
$LN27@DecodeInst:

; 132  :       {
; 133  :         //BRA 48 (LBRA)
; 134  :         entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_CONDITION)] = (field_380 << 2) | (*immExt & 0x03UL);

	mov	edx, DWORD PTR _field_380$[ebp]
	shl	edx, 2
	mov	eax, DWORD PTR _immExt$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 3
	or	edx, ecx
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+92], edx

; 135  :         entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_ADDRESS)] = (((*immExt & 0x07FFFFF8UL) << 4)| field_7F) << 1;

	mov	ecx, DWORD PTR _immExt$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 134217720				; 07fffff8H
	shl	edx, 4
	or	edx, DWORD PTR _field_7F$[ebp]
	shl	edx, 1
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+96], edx
$LN26@DecodeInst:

; 136  :       }
; 137  : 
; 138  :       if(entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_CONDITION)] == ECU_CONDITION_T)

	mov	ecx, DWORD PTR _entry$[ebp]
	cmp	DWORD PTR [ecx+92], 17			; 00000011H
	jne	SHORT $LN25@DecodeInst

; 139  :       {
; 140  :         if((*immExt & 0x04UL) >> 2)

	mov	edx, DWORD PTR _immExt$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 4
	shr	eax, 2
	je	SHORT $LN24@DecodeInst

; 141  :         {
; 142  :           //BRA T, NOP
; 143  :           entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_BRAAlways_NOP;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+88], 3

; 144  :           entry->packetInfo |= (PACKETINFO_BRANCH_ALWAYS | PACKETINFO_BRANCH_NOP);

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	or	eax, 167772160				; 0a000000H
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 145  :           entry->packetInfo |= braAlwaysNOPFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	or	eax, DWORD PTR ?braAlwaysNOPFlags@@3IA	; braAlwaysNOPFlags
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 146  :         }
; 147  :         else

	jmp	SHORT $LN23@DecodeInst
$LN24@DecodeInst:

; 148  :         {
; 149  :           //BRA T
; 150  :           entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_BRAAlways;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+88], 2

; 151  :           entry->packetInfo |= PACKETINFO_BRANCH_ALWAYS;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 134217728				; 08000000H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 152  :           entry->packetInfo |= braAlwaysFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, DWORD PTR ?braAlwaysFlags@@3IA	; braAlwaysFlags
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx
$LN23@DecodeInst:

; 153  :         }
; 154  :       }
; 155  :       else

	jmp	SHORT $LN22@DecodeInst
$LN25@DecodeInst:

; 156  :       {
; 157  :         if((*immExt & 0x04UL) >> 2)

	mov	eax, DWORD PTR _immExt$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 4
	shr	ecx, 2
	je	SHORT $LN21@DecodeInst

; 158  :         {
; 159  :           //BRA CC, NOP
; 160  :           entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_BRAConditional_NOP;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+88], 5

; 161  :           entry->packetInfo |= (PACKETINFO_BRANCH_CONDITIONAL | PACKETINFO_BRANCH_NOP);

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 100663296				; 06000000H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 162  :           entry->packetInfo |= braConditionalNOPFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, DWORD PTR ?braConditionalNOPFlags@@3IA ; braConditionalNOPFlags
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 163  :         }
; 164  :         else

	jmp	SHORT $LN22@DecodeInst
$LN21@DecodeInst:

; 165  :         {
; 166  :           //BRA CC
; 167  :           entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_BRAConditional;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+88], 4

; 168  :           entry->packetInfo |= PACKETINFO_BRANCH_CONDITIONAL;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, 67108864				; 04000000H
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx

; 169  :           entry->packetInfo |= braConditionalFlags;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, DWORD PTR ?braConditionalFlags@@3IA ; braConditionalFlags
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx
$LN22@DecodeInst:

; 170  :         }
; 171  :       }
; 172  :     }
; 173  :     else

	jmp	SHORT $LN19@DecodeInst
$LN28@DecodeInst:

; 174  :     {
; 175  :       //BRA always
; 176  : 
; 177  :       //offset is 0x3FF
; 178  :       entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_CONDITION)] = ECU_CONDITION_T;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+92], 17			; 00000011H

; 179  :       offset = ((int32)(field_300 << 30)) >> (30 - 8);

	mov	edx, DWORD PTR _field_300$[ebp]
	shl	edx, 30					; 0000001eH
	sar	edx, 22					; 00000016H
	mov	DWORD PTR _offset$[ebp], edx

; 180  :       entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_ADDRESS)] = (offset | field_FF) << 1;

	mov	eax, DWORD PTR _offset$[ebp]
	or	eax, DWORD PTR _field_FF$[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+96], eax

; 181  :       entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_BRAAlways;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+88], 2

; 182  :       entry->packetInfo |= PACKETINFO_BRANCH_ALWAYS;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 134217728				; 08000000H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 183  :       entry->packetInfo |= braAlwaysFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, DWORD PTR ?braAlwaysFlags@@3IA	; braAlwaysFlags
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx
$LN19@DecodeInst:

; 184  :     }
; 185  : 
; 186  :     entry->miscInputDependencies[SLOT_ECU] = flagDependencies[entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_CONDITION)]]; 

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR ?flagDependencies@@3PAIA[ecx*4]
	mov	DWORD PTR [edx+208], eax

; 187  :     //add packet address to offset
; 188  :     entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_ADDRESS)] += entry->pcexec;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	eax, DWORD PTR _entry$[ebp]
	add	edx, DWORD PTR [eax+28]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+96], edx

; 189  :   }
; 190  :   else

	jmp	$LN18@DecodeInst
$LN29@DecodeInst:

; 191  :   {
; 192  :     //RTI, RTS or HALT
; 193  :     if(*(iPtr + 1) != 0x01)

	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	cmp	eax, 1
	je	$LN17@DecodeInst

; 194  :     {
; 195  :       //RTI or RTS
; 196  : 
; 197  :       //The first three bits of the instruction determine the register to use as the target address
; 198  : 
; 199  :       //condition is 0x03E0
; 200  :       entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_CONDITION)] = field_3E0;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_3E0$[ebp]
	mov	DWORD PTR [ecx+92], edx

; 201  :       bImplicitNOP = ((*(iPtr + 1) & 0x01) != 0);

	mov	eax, DWORD PTR _iPtr$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	and	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	BYTE PTR _bImplicitNOP$[ebp], cl

; 202  : 
; 203  :       switch((*(iPtr + 1) & 0x07) >> 1)

	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	and	eax, 7
	sar	eax, 1
	mov	DWORD PTR tv229[ebp], eax
	je	SHORT $LN14@DecodeInst
	cmp	DWORD PTR tv229[ebp], 1
	je	$LN7@DecodeInst
	cmp	DWORD PTR tv229[ebp], 2
	je	$LN4@DecodeInst
	jmp	$LN15@DecodeInst
$LN14@DecodeInst:

; 204  :       {
; 205  :         case 0:
; 206  :           entry->miscInputDependencies[SLOT_ECU] = (flagDependencies[field_3E0] | DEPENDENCY_MASK_RZ);

	mov	ecx, DWORD PTR _field_3E0$[ebp]
	mov	edx, DWORD PTR ?flagDependencies@@3PAIA[ecx*4]
	or	edx, 64					; 00000040H
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+208], edx

; 207  : 
; 208  :           if(field_3E0 == ECU_CONDITION_T)

	cmp	DWORD PTR _field_3E0$[ebp], 17		; 00000011H
	jne	SHORT $LN13@DecodeInst

; 209  :           {
; 210  :             if(bImplicitNOP)

	movzx	ecx, BYTE PTR _bImplicitNOP$[ebp]
	test	ecx, ecx
	je	SHORT $LN12@DecodeInst

; 211  :             {
; 212  :               entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_RTSAlways_NOP;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+88], 23			; 00000017H

; 213  :               entry->packetInfo |= (PACKETINFO_BRANCH_ALWAYS | PACKETINFO_BRANCH_NOP);

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 167772160				; 0a000000H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 214  :               entry->packetInfo |= rtsAlwaysNOPFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, DWORD PTR ?rtsAlwaysNOPFlags@@3IA	; rtsAlwaysNOPFlags
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 215  :             }
; 216  :             else

	jmp	SHORT $LN11@DecodeInst
$LN12@DecodeInst:

; 217  :             {
; 218  :               entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_RTSAlways;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+88], 22			; 00000016H

; 219  :               entry->packetInfo |= PACKETINFO_BRANCH_ALWAYS;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, 134217728				; 08000000H
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx

; 220  :               entry->packetInfo |= rtsAlwaysFlags;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, DWORD PTR ?rtsAlwaysFlags@@3IA	; rtsAlwaysFlags
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx
$LN11@DecodeInst:

; 221  :             }
; 222  :           }
; 223  :           else

	jmp	SHORT $LN10@DecodeInst
$LN13@DecodeInst:

; 224  :           {
; 225  :             if(bImplicitNOP)

	movzx	ecx, BYTE PTR _bImplicitNOP$[ebp]
	test	ecx, ecx
	je	SHORT $LN9@DecodeInst

; 226  :             {
; 227  :               entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_RTSConditional_NOP;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+88], 25			; 00000019H

; 228  :               entry->packetInfo |= (PACKETINFO_BRANCH_CONDITIONAL | PACKETINFO_BRANCH_NOP);

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 100663296				; 06000000H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 229  :               entry->packetInfo |= rtsConditionalNOPFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, DWORD PTR ?rtsConditionalNOPFlags@@3IA ; rtsConditionalNOPFlags
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 230  :             }
; 231  :             else

	jmp	SHORT $LN10@DecodeInst
$LN9@DecodeInst:

; 232  :             {
; 233  :               entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_RTSConditional;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+88], 24			; 00000018H

; 234  :               entry->packetInfo |= PACKETINFO_BRANCH_CONDITIONAL;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, 67108864				; 04000000H
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx

; 235  :               entry->packetInfo |= rtsConditionalFlags;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, DWORD PTR ?rtsConditionalFlags@@3IA ; rtsConditionalFlags
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx
$LN10@DecodeInst:

; 236  :             }
; 237  :           }
; 238  :           break;

	jmp	$LN15@DecodeInst
$LN7@DecodeInst:

; 239  :         case 1:
; 240  :           entry->miscInputDependencies[SLOT_ECU] = flagDependencies[field_3E0] | DEPENDENCY_MASK_RZI1;

	mov	ecx, DWORD PTR _field_3E0$[ebp]
	mov	edx, DWORD PTR ?flagDependencies@@3PAIA[ecx*4]
	or	edx, 128				; 00000080H
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+208], edx

; 241  :           if(bImplicitNOP)

	movzx	ecx, BYTE PTR _bImplicitNOP$[ebp]
	test	ecx, ecx
	je	SHORT $LN6@DecodeInst

; 242  :           {
; 243  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_RTI1Conditional_NOP;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+88], 19			; 00000013H

; 244  :             entry->packetInfo |= (PACKETINFO_BRANCH_CONDITIONAL | PACKETINFO_BRANCH_NOP);

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 100663296				; 06000000H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 245  :             entry->packetInfo |= rti1ConditionalNOPFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, DWORD PTR ?rti1ConditionalNOPFlags@@3IA ; rti1ConditionalNOPFlags
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 246  :           }
; 247  :           else

	jmp	SHORT $LN5@DecodeInst
$LN6@DecodeInst:

; 248  :           {
; 249  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_RTI1Conditional;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+88], 18			; 00000012H

; 250  :             entry->packetInfo |= PACKETINFO_BRANCH_CONDITIONAL;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, 67108864				; 04000000H
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx

; 251  :             entry->packetInfo |= rti1ConditionalFlags;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, DWORD PTR ?rti1ConditionalFlags@@3IA ; rti1ConditionalFlags
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx
$LN5@DecodeInst:

; 252  :           }
; 253  :           break;

	jmp	SHORT $LN15@DecodeInst
$LN4@DecodeInst:

; 254  :         case 2:
; 255  :           entry->miscInputDependencies[SLOT_ECU] = flagDependencies[field_3E0] | DEPENDENCY_MASK_RZI2;

	mov	ecx, DWORD PTR _field_3E0$[ebp]
	mov	edx, DWORD PTR ?flagDependencies@@3PAIA[ecx*4]
	or	edx, 256				; 00000100H
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+208], edx

; 256  :           if(bImplicitNOP)

	movzx	ecx, BYTE PTR _bImplicitNOP$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@DecodeInst

; 257  :           {
; 258  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_RTI2Conditional_NOP;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+88], 21			; 00000015H

; 259  :             entry->packetInfo |= (PACKETINFO_BRANCH_CONDITIONAL | PACKETINFO_BRANCH_NOP);

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 100663296				; 06000000H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 260  :             entry->packetInfo |= rti2ConditionalNOPFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, DWORD PTR ?rti2ConditionalNOPFlags@@3IA ; rti2ConditionalNOPFlags
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 261  :           }
; 262  :           else

	jmp	SHORT $LN15@DecodeInst
$LN3@DecodeInst:

; 263  :           {
; 264  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_RTI2Conditional;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+88], 20			; 00000014H

; 265  :             entry->packetInfo |= PACKETINFO_BRANCH_CONDITIONAL;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, 67108864				; 04000000H
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx

; 266  :             entry->packetInfo |= rti2ConditionalFlags;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, DWORD PTR ?rti2ConditionalFlags@@3IA ; rti2ConditionalFlags
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx
$LN15@DecodeInst:

; 267  :           }
; 268  :           break;
; 269  :       }
; 270  :     }
; 271  :     else

	jmp	SHORT $LN18@DecodeInst
$LN17@DecodeInst:

; 272  :     {
; 273  :       //HALT
; 274  :       entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_Halt;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+88], 1

; 275  :       entry->packetInfo |= (PACKETINFO_NEVERCOMPILE | PACKETINFO_EXCEPTION);    

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	or	eax, 1610612736				; 60000000H
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+24], eax
$LN18@DecodeInst:

; 276  :     }
; 277  :   }
; 278  : 
; 279  :   entry->ecuConditionCode = entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_CONDITION)];

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	DWORD PTR [edx+84], ecx

; 280  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?DecodeInstruction_ECU16@MPE@@QAEXPAEPAVInstructionCacheEntry@@PAI@Z ENDP ; MPE::DecodeInstruction_ECU16
_TEXT	ENDS
PUBLIC	?DecodeInstruction_ECU32@MPE@@QAEXPAEPAVInstructionCacheEntry@@PAI@Z ; MPE::DecodeInstruction_ECU32
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv182 = -32						; size = 4
_bImplicitNOP$ = -25					; size = 1
_offset$ = -24						; size = 4
_field_FF$ = -20					; size = 4
_field_100$ = -16					; size = 4
_field_1F0000$ = -12					; size = 4
_field_3E00000$ = -8					; size = 4
_this$ = -4						; size = 4
_iPtr$ = 8						; size = 4
_entry$ = 12						; size = 4
_immExt$ = 16						; size = 4
?DecodeInstruction_ECU32@MPE@@QAEXPAEPAVInstructionCacheEntry@@PAI@Z PROC ; MPE::DecodeInstruction_ECU32
; _this$ = ecx

; 283  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 284  :   uint32 field_3E00000 = ((*iPtr & 0x03) << 3) | (*(iPtr + 1) >> 5);

	mov	eax, DWORD PTR _iPtr$[ebp]
	movzx	ecx, BYTE PTR [eax]
	and	ecx, 3
	shl	ecx, 3
	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	sar	eax, 5
	or	ecx, eax
	mov	DWORD PTR _field_3E00000$[ebp], ecx

; 285  :   uint32 field_1F0000 = *(iPtr + 1) & 0x1FUL;

	mov	ecx, DWORD PTR _iPtr$[ebp]
	movzx	edx, BYTE PTR [ecx+1]
	and	edx, 31					; 0000001fH
	mov	DWORD PTR _field_1F0000$[ebp], edx

; 286  :   uint32 field_100 = *(iPtr + 2) & 0x01UL;

	mov	eax, DWORD PTR _iPtr$[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	and	ecx, 1
	mov	DWORD PTR _field_100$[ebp], ecx

; 287  :   uint32 field_FF = *(iPtr + 3) & 0xFFUL;

	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+3]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _field_FF$[ebp], eax

; 288  :   int32 offset;
; 289  :   bool bImplicitNOP = (((*(iPtr + 2) & 0x08) >> 3) != 0);

	mov	ecx, DWORD PTR _iPtr$[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	and	edx, 8
	sar	edx, 3
	neg	edx
	sbb	edx, edx
	neg	edx
	mov	BYTE PTR _bImplicitNOP$[ebp], dl

; 290  : 
; 291  :   entry->packetInfo |= PACKETINFO_ECU;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 4
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 292  : 
; 293  :   entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_CONDITION)] = field_3E00000;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _field_3E00000$[ebp]
	mov	DWORD PTR [eax+92], ecx

; 294  :   entry->miscInputDependencies[SLOT_ECU] = flagDependencies[field_3E00000];

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR _field_3E00000$[ebp]
	mov	ecx, DWORD PTR ?flagDependencies@@3PAIA[eax*4]
	mov	DWORD PTR [edx+208], ecx

; 295  : 
; 296  :   if((*(iPtr + 2) & 0x06) == 0)

	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+2]
	and	eax, 6
	jne	$LN44@DecodeInst@2

; 297  :   {
; 298  :     //bra 32 (lbra)
; 299  : 
; 300  :     //address is 0x1F01FF, pcexec relative: lower bits are stored first!
; 301  : 
; 302  :     //offset = ((signed __int32)((signed __int8)(field_100 << 7))) << 6;
; 303  :     offset = ((int32)(field_100 << 31)) >> 18;

	mov	ecx, DWORD PTR _field_100$[ebp]
	shl	ecx, 31					; 0000001fH
	sar	ecx, 18					; 00000012H
	mov	DWORD PTR _offset$[ebp], ecx

; 304  :     offset |= ((field_FF << 5) | field_1F0000);

	mov	edx, DWORD PTR _field_FF$[ebp]
	shl	edx, 5
	or	edx, DWORD PTR _field_1F0000$[ebp]
	or	edx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _offset$[ebp], edx

; 305  :     entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_ADDRESS)] = entry->pcexec + (offset << 1);

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _offset$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+96], eax

; 306  : 
; 307  :     if(field_3E00000 == ECU_CONDITION_T)

	cmp	DWORD PTR _field_3E00000$[ebp], 17	; 00000011H
	jne	SHORT $LN43@DecodeInst@2

; 308  :     {
; 309  :       if(bImplicitNOP)

	movzx	edx, BYTE PTR _bImplicitNOP$[ebp]
	test	edx, edx
	je	SHORT $LN42@DecodeInst@2

; 310  :       {
; 311  :         //BRA T, NOP
; 312  :         entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_BRAAlways_NOP;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+88], 3

; 313  :         entry->packetInfo |= (PACKETINFO_BRANCH_ALWAYS | PACKETINFO_BRANCH_NOP);

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, 167772160				; 0a000000H
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx

; 314  :         entry->packetInfo |= braAlwaysNOPFlags;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, DWORD PTR ?braAlwaysNOPFlags@@3IA	; braAlwaysNOPFlags
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx

; 315  :       }
; 316  :       else

	jmp	SHORT $LN41@DecodeInst@2
$LN42@DecodeInst@2:

; 317  :       {
; 318  :         //BRA T
; 319  :         entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_BRAAlways;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+88], 2

; 320  :         entry->packetInfo |= PACKETINFO_BRANCH_ALWAYS;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	or	eax, 134217728				; 08000000H
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 321  :         entry->packetInfo |= braAlwaysFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	or	eax, DWORD PTR ?braAlwaysFlags@@3IA	; braAlwaysFlags
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+24], eax
$LN41@DecodeInst@2:

; 322  :       }
; 323  :     }
; 324  :     else

	jmp	SHORT $LN40@DecodeInst@2
$LN43@DecodeInst@2:

; 325  :     {
; 326  :       if(bImplicitNOP)

	movzx	edx, BYTE PTR _bImplicitNOP$[ebp]
	test	edx, edx
	je	SHORT $LN39@DecodeInst@2

; 327  :       {
; 328  :         //BRA CC, NOP
; 329  :         entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_BRAConditional_NOP;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+88], 5

; 330  :         entry->packetInfo |= (PACKETINFO_BRANCH_CONDITIONAL | PACKETINFO_BRANCH_NOP);

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, 100663296				; 06000000H
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx

; 331  :         entry->packetInfo |= braConditionalNOPFlags;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, DWORD PTR ?braConditionalNOPFlags@@3IA ; braConditionalNOPFlags
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx

; 332  :       }
; 333  :       else

	jmp	SHORT $LN40@DecodeInst@2
$LN39@DecodeInst@2:

; 334  :       {
; 335  :         //BRA CC
; 336  :         entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_BRAConditional;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+88], 4

; 337  :         entry->packetInfo |= PACKETINFO_BRANCH_CONDITIONAL;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	or	eax, 67108864				; 04000000H
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 338  :         entry->packetInfo |= braConditionalFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	or	eax, DWORD PTR ?braConditionalFlags@@3IA ; braConditionalFlags
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+24], eax
$LN40@DecodeInst@2:

; 339  :       }
; 340  :     }
; 341  :   }
; 342  :   else

	jmp	$LN37@DecodeInst@2
$LN44@DecodeInst@2:

; 343  :   {
; 344  :     //jmp or jsr
; 345  : 
; 346  :     switch(*(iPtr + 2) & 0x07)

	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+2]
	and	eax, 7
	mov	DWORD PTR tv182[ebp], eax
	mov	ecx, DWORD PTR tv182[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv182[ebp], ecx
	cmp	DWORD PTR tv182[ebp], 6
	ja	$LN37@DecodeInst@2
	mov	edx, DWORD PTR tv182[ebp]
	jmp	DWORD PTR $LN47@DecodeInst@2[edx*4]
$LN34@DecodeInst@2:

; 347  :     {
; 348  :       case 1:
; 349  :       case 2:
; 350  :       case 3:
; 351  :         //jmp cc, <label>
; 352  : 
; 353  :         //address is 0x1F00FF: if immExt == 0, base relative to bit 8: if bit 8 is clear, IROM, else IRAM
; 354  :         //if immExt is non-zero, instruction is 64 bit and the address is absolute
; 355  :         entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_ADDRESS)] = (((*immExt & 0x7FFFE00) << 4) | (((uint32)(*(iPtr + 3) & 0xFF)) << 5) | ((uint32)(*(iPtr + 1) & 0x1F))) << 1;

	mov	eax, DWORD PTR _immExt$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 134217216				; 07fffe00H
	shl	ecx, 4
	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+3]
	and	eax, 255				; 000000ffH
	shl	eax, 5
	or	ecx, eax
	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	and	eax, 31					; 0000001fH
	or	ecx, eax
	shl	ecx, 1
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+96], ecx

; 356  : 
; 357  :         if(*immExt == 0)

	mov	eax, DWORD PTR _immExt$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN33@DecodeInst@2

; 358  :         {
; 359  :           if(*(iPtr + 2) & 0x01)

	mov	ecx, DWORD PTR _iPtr$[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	and	edx, 1
	je	SHORT $LN32@DecodeInst@2

; 360  :           {
; 361  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_ADDRESS)] += MPE_IRAM_BASE;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	add	ecx, 540016640				; 20300000H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+96], ecx

; 362  :           }
; 363  :           else

	jmp	SHORT $LN33@DecodeInst@2
$LN32@DecodeInst@2:

; 364  :           {
; 365  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_ADDRESS)] += MPE_IROM_BASE;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	add	ecx, 538968064				; 20200000H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+96], ecx
$LN33@DecodeInst@2:

; 366  :           }
; 367  :         }
; 368  : 
; 369  :         if(field_3E00000 == ECU_CONDITION_T)

	cmp	DWORD PTR _field_3E00000$[ebp], 17	; 00000011H
	jne	SHORT $LN30@DecodeInst@2

; 370  :         {
; 371  :           if(bImplicitNOP)

	movzx	eax, BYTE PTR _bImplicitNOP$[ebp]
	test	eax, eax
	je	SHORT $LN29@DecodeInst@2

; 372  :           {
; 373  :             //JMP T, NOP
; 374  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_BRAAlways_NOP;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+88], 3

; 375  :             entry->packetInfo |= (PACKETINFO_BRANCH_ALWAYS | PACKETINFO_BRANCH_NOP);

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	or	eax, 167772160				; 0a000000H
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 376  :             entry->packetInfo |= braAlwaysNOPFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	or	eax, DWORD PTR ?braAlwaysNOPFlags@@3IA	; braAlwaysNOPFlags
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 377  :           }
; 378  :           else

	jmp	SHORT $LN28@DecodeInst@2
$LN29@DecodeInst@2:

; 379  :           {
; 380  :             //JMP T
; 381  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_BRAAlways;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+88], 2

; 382  :             entry->packetInfo |= PACKETINFO_BRANCH_ALWAYS;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 134217728				; 08000000H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 383  :             entry->packetInfo |= braAlwaysFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, DWORD PTR ?braAlwaysFlags@@3IA	; braAlwaysFlags
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx
$LN28@DecodeInst@2:

; 384  :           }
; 385  :         }
; 386  :         else

	jmp	SHORT $LN27@DecodeInst@2
$LN30@DecodeInst@2:

; 387  :         {
; 388  :           if(bImplicitNOP)

	movzx	eax, BYTE PTR _bImplicitNOP$[ebp]
	test	eax, eax
	je	SHORT $LN26@DecodeInst@2

; 389  :           {
; 390  :             //JMP CC, NOP
; 391  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_BRAConditional_NOP;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+88], 5

; 392  :             entry->packetInfo |= (PACKETINFO_BRANCH_CONDITIONAL | PACKETINFO_BRANCH_NOP);

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	or	eax, 100663296				; 06000000H
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 393  :             entry->packetInfo |= braConditionalNOPFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	or	eax, DWORD PTR ?braConditionalNOPFlags@@3IA ; braConditionalNOPFlags
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 394  :           }
; 395  :           else

	jmp	SHORT $LN27@DecodeInst@2
$LN26@DecodeInst@2:

; 396  :           {
; 397  :             //JMP CC
; 398  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_BRAConditional;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+88], 4

; 399  :             entry->packetInfo |= PACKETINFO_BRANCH_CONDITIONAL;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 67108864				; 04000000H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 400  :             entry->packetInfo |= braConditionalFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, DWORD PTR ?braConditionalFlags@@3IA ; braConditionalFlags
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx
$LN27@DecodeInst@2:

; 401  :           }
; 402  :         }
; 403  :         break;

	jmp	$LN37@DecodeInst@2
$LN24@DecodeInst@2:

; 404  :       case 4:
; 405  :       case 5:
; 406  :         //jsr cc, <label>
; 407  :         //address is 0x1F00FF: if immExt == 0, base relative to bit 8: if bit 8 is clear, IROM, else IRAM
; 408  :         //if immExt is non-zero, instruction is 64 bit and the address is absolute
; 409  :         entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_ADDRESS)] = (((*immExt & 0x7FFFE00) << 4) | (((uint32)(*(iPtr + 3) & 0xFF)) << 5) | ((uint32)(*(iPtr + 1) & 0x1F))) << 1;

	mov	eax, DWORD PTR _immExt$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 134217216				; 07fffe00H
	shl	ecx, 4
	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+3]
	and	eax, 255				; 000000ffH
	shl	eax, 5
	or	ecx, eax
	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	and	eax, 31					; 0000001fH
	or	ecx, eax
	shl	ecx, 1
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+96], ecx

; 410  :         entry->miscOutputDependencies[SLOT_ECU] = DEPENDENCY_MASK_RZ;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+248], 64			; 00000040H

; 411  : 
; 412  :         if(*immExt == 0)

	mov	ecx, DWORD PTR _immExt$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN23@DecodeInst@2

; 413  :         {
; 414  :           if(*(iPtr + 2) & 0x01)

	mov	edx, DWORD PTR _iPtr$[ebp]
	movzx	eax, BYTE PTR [edx+2]
	and	eax, 1
	je	SHORT $LN22@DecodeInst@2

; 415  :           {
; 416  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_ADDRESS)] += MPE_IRAM_BASE;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	add	edx, 540016640				; 20300000H
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+96], edx

; 417  :           }
; 418  :           else

	jmp	SHORT $LN23@DecodeInst@2
$LN22@DecodeInst@2:

; 419  :           {
; 420  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_ADDRESS)] += MPE_IROM_BASE;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	add	edx, 538968064				; 20200000H
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+96], edx
$LN23@DecodeInst@2:

; 421  :           }
; 422  :         }
; 423  : 
; 424  :         if(field_3E00000 == ECU_CONDITION_T)

	cmp	DWORD PTR _field_3E00000$[ebp], 17	; 00000011H
	jne	SHORT $LN20@DecodeInst@2

; 425  :         {
; 426  :           if(bImplicitNOP)

	movzx	ecx, BYTE PTR _bImplicitNOP$[ebp]
	test	ecx, ecx
	je	SHORT $LN19@DecodeInst@2

; 427  :           {
; 428  :             //JSR T, NOP
; 429  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_JSRAlways_NOP;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+88], 11			; 0000000bH

; 430  :             entry->packetInfo |= (PACKETINFO_BRANCH_ALWAYS | PACKETINFO_BRANCH_NOP);

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 167772160				; 0a000000H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 431  :             entry->packetInfo |= jsrAlwaysNOPFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, DWORD PTR ?jsrAlwaysNOPFlags@@3IA	; jsrAlwaysNOPFlags
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 432  :           }
; 433  :           else

	jmp	SHORT $LN18@DecodeInst@2
$LN19@DecodeInst@2:

; 434  :           {
; 435  :             //JSR T
; 436  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_JSRAlways;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+88], 10			; 0000000aH

; 437  :             entry->packetInfo |= (PACKETINFO_BRANCH_ALWAYS | PACKETINFO_NEEDS_PCFETCHNEXT);

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, 402653184				; 18000000H
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx

; 438  :             entry->packetInfo |= jsrAlwaysFlags;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, DWORD PTR ?jsrAlwaysFlags@@3IA	; jsrAlwaysFlags
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx
$LN18@DecodeInst@2:

; 439  :           }
; 440  :         }
; 441  :         else

	jmp	SHORT $LN17@DecodeInst@2
$LN20@DecodeInst@2:

; 442  :         {
; 443  :           if(bImplicitNOP)

	movzx	ecx, BYTE PTR _bImplicitNOP$[ebp]
	test	ecx, ecx
	je	SHORT $LN16@DecodeInst@2

; 444  :           {
; 445  :             //JSR CC, NOP
; 446  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_JSRConditional_NOP;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+88], 13			; 0000000dH

; 447  :             entry->packetInfo |= (PACKETINFO_BRANCH_CONDITIONAL | PACKETINFO_BRANCH_NOP);

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 100663296				; 06000000H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 448  :             entry->packetInfo |= jsrConditionalNOPFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, DWORD PTR ?jsrConditionalNOPFlags@@3IA ; jsrConditionalNOPFlags
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 449  :           }
; 450  :           else

	jmp	SHORT $LN17@DecodeInst@2
$LN16@DecodeInst@2:

; 451  :           {
; 452  :             //JSR CC
; 453  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_JSRConditional;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+88], 12			; 0000000cH

; 454  :             entry->packetInfo |= (PACKETINFO_BRANCH_CONDITIONAL | PACKETINFO_NEEDS_PCFETCHNEXT);

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, 335544320				; 14000000H
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx

; 455  :             entry->packetInfo |= jsrConditionalFlags;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, DWORD PTR ?jsrConditionalFlags@@3IA ; jsrConditionalFlags
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx
$LN17@DecodeInst@2:

; 456  :           }
; 457  :         }
; 458  :        break;

	jmp	$LN37@DecodeInst@2
$LN14@DecodeInst@2:

; 459  :       case 6:
; 460  :         //address is register indirect
; 461  :         //jmp cc, (Si)
; 462  :         entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_ADDRESS)] = field_1F0000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+96], edx

; 463  :         entry->scalarInputDependencies[SLOT_ECU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+188], eax

; 464  : 
; 465  :         if(field_3E00000 == ECU_CONDITION_T)

	cmp	DWORD PTR _field_3E00000$[ebp], 17	; 00000011H
	jne	SHORT $LN13@DecodeInst@2

; 466  :         {
; 467  :           entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_JMPAlwaysIndirect;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+88], 6

; 468  :           if(bImplicitNOP)

	movzx	eax, BYTE PTR _bImplicitNOP$[ebp]
	test	eax, eax
	je	SHORT $LN12@DecodeInst@2

; 469  :           {
; 470  :             //JMP T, (Si), NOP
; 471  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_JMPAlwaysIndirect_NOP;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+88], 7

; 472  :             entry->packetInfo |= (PACKETINFO_BRANCH_ALWAYS | PACKETINFO_BRANCH_NOP);

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	or	eax, 167772160				; 0a000000H
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 473  :             entry->packetInfo |= jmpAlwaysIndirectNOPFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	or	eax, DWORD PTR ?jmpAlwaysIndirectNOPFlags@@3IA ; jmpAlwaysIndirectNOPFlags
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 474  :           }
; 475  :           else

	jmp	SHORT $LN11@DecodeInst@2
$LN12@DecodeInst@2:

; 476  :           {
; 477  :             //JMP T, (Si)
; 478  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_JMPAlwaysIndirect;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+88], 6

; 479  :             entry->packetInfo |= PACKETINFO_BRANCH_ALWAYS;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 134217728				; 08000000H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 480  :             entry->packetInfo |= jmpAlwaysIndirectFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, DWORD PTR ?jmpAlwaysIndirectFlags@@3IA ; jmpAlwaysIndirectFlags
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx
$LN11@DecodeInst@2:

; 481  :           }
; 482  :         }
; 483  :         else

	jmp	SHORT $LN10@DecodeInst@2
$LN13@DecodeInst@2:

; 484  :         {
; 485  :           entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_JMPConditionalIndirect;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+88], 8

; 486  :           if(bImplicitNOP)

	movzx	ecx, BYTE PTR _bImplicitNOP$[ebp]
	test	ecx, ecx
	je	SHORT $LN9@DecodeInst@2

; 487  :           {
; 488  :             //JMP CC, (Si), NOP
; 489  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_JMPConditionalIndirect_NOP;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+88], 9

; 490  :             entry->packetInfo |= (PACKETINFO_BRANCH_CONDITIONAL | PACKETINFO_BRANCH_NOP);

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 100663296				; 06000000H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 491  :             entry->packetInfo |= jmpConditionalIndirectNOPFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, DWORD PTR ?jmpConditionalIndirectNOPFlags@@3IA ; jmpConditionalIndirectNOPFlags
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 492  :           }
; 493  :           else

	jmp	SHORT $LN10@DecodeInst@2
$LN9@DecodeInst@2:

; 494  :           {
; 495  :             //JMP CC, (Si)
; 496  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_JMPConditionalIndirect;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+88], 8

; 497  :             entry->packetInfo |= PACKETINFO_BRANCH_CONDITIONAL;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, 67108864				; 04000000H
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx

; 498  :             entry->packetInfo |= jmpConditionalIndirectFlags;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, DWORD PTR ?jmpConditionalIndirectFlags@@3IA ; jmpConditionalIndirectFlags
	mov	eax, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [eax+24], edx
$LN10@DecodeInst@2:

; 499  :           }
; 500  :         }
; 501  :         break;

	jmp	$LN37@DecodeInst@2
$LN7@DecodeInst@2:

; 502  :       case 7:
; 503  :         //address is register indirect
; 504  :         //jsr cc, (Si)
; 505  :         entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_ADDRESS)] = field_1F0000;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR _field_1F0000$[ebp]
	mov	DWORD PTR [ecx+96], edx

; 506  :         entry->scalarInputDependencies[SLOT_ECU] = SCALAR_REG_DEPENDENCY_MASK(field_1F0000);

	mov	eax, 1
	mov	ecx, DWORD PTR _field_1F0000$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+188], eax

; 507  :         entry->miscOutputDependencies[SLOT_ECU] = DEPENDENCY_MASK_RZ;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+248], 64			; 00000040H

; 508  : 
; 509  :         if(field_3E00000 == ECU_CONDITION_T)

	cmp	DWORD PTR _field_3E00000$[ebp], 17	; 00000011H
	jne	SHORT $LN6@DecodeInst@2

; 510  :         {
; 511  :           if(bImplicitNOP)

	movzx	eax, BYTE PTR _bImplicitNOP$[ebp]
	test	eax, eax
	je	SHORT $LN5@DecodeInst@2

; 512  :           {
; 513  :             //JSR T, (Si),  NOP
; 514  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_JSRAlwaysIndirect_NOP;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+88], 15			; 0000000fH

; 515  :             entry->packetInfo |= (PACKETINFO_BRANCH_ALWAYS | PACKETINFO_BRANCH_NOP);

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	or	eax, 167772160				; 0a000000H
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 516  :             entry->packetInfo |= jsrAlwaysIndirectNOPFlags;     

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	or	eax, DWORD PTR ?jsrAlwaysIndirectNOPFlags@@3IA ; jsrAlwaysIndirectNOPFlags
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 517  :           }
; 518  :           else

	jmp	SHORT $LN4@DecodeInst@2
$LN5@DecodeInst@2:

; 519  :           {
; 520  :             //JSR T, (Si)
; 521  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_JSRAlwaysIndirect;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+88], 14			; 0000000eH

; 522  :             entry->packetInfo |= (PACKETINFO_BRANCH_ALWAYS | PACKETINFO_NEEDS_PCFETCHNEXT);

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 402653184				; 18000000H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 523  :             entry->packetInfo |= jsrAlwaysIndirectFlags;        

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, DWORD PTR ?jsrAlwaysIndirectFlags@@3IA ; jsrAlwaysIndirectFlags
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx
$LN4@DecodeInst@2:

; 524  :           }
; 525  :         }
; 526  :         else

	jmp	SHORT $LN37@DecodeInst@2
$LN6@DecodeInst@2:

; 527  :         {
; 528  :           if(bImplicitNOP)

	movzx	eax, BYTE PTR _bImplicitNOP$[ebp]
	test	eax, eax
	je	SHORT $LN2@DecodeInst@2

; 529  :           {
; 530  :             //JSR CC, (Si), NOP
; 531  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_JSRConditionalIndirect_NOP;

	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+88], 17			; 00000011H

; 532  :             entry->packetInfo |= (PACKETINFO_BRANCH_CONDITIONAL | PACKETINFO_BRANCH_NOP);

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	or	eax, 100663296				; 06000000H
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 533  :             entry->packetInfo |= jsrConditionalIndirectNOPFlags;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	eax, DWORD PTR [edx+24]
	or	eax, DWORD PTR ?jsrConditionalIndirectNOPFlags@@3IA ; jsrConditionalIndirectNOPFlags
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 534  :           }
; 535  :           else

	jmp	SHORT $LN37@DecodeInst@2
$LN2@DecodeInst@2:

; 536  :           {
; 537  :             //JSR CC, (Si)
; 538  :             entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_HANDLER)] = Handler_JSRConditionalIndirect;

	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+88], 16			; 00000010H

; 539  :             entry->packetInfo |= (PACKETINFO_BRANCH_CONDITIONAL | PACKETINFO_NEEDS_PCFETCHNEXT);

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 335544320				; 14000000H
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 540  :             entry->packetInfo |= jsrConditionalIndirectFlags;

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, DWORD PTR ?jsrConditionalIndirectFlags@@3IA ; jsrConditionalIndirectFlags
	mov	edx, DWORD PTR _entry$[ebp]
	mov	DWORD PTR [edx+24], ecx
$LN37@DecodeInst@2:

; 541  :           }
; 542  :         }
; 543  :         break;
; 544  :     }
; 545  :   }
; 546  : 
; 547  :   entry->ecuConditionCode = entry->nuances[FIXED_FIELD(SLOT_ECU,FIELD_ECU_CONDITION)];

	mov	eax, DWORD PTR _entry$[ebp]
	mov	ecx, DWORD PTR _entry$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	DWORD PTR [eax+84], edx

; 548  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN47@DecodeInst@2:
	DD	$LN34@DecodeInst@2
	DD	$LN34@DecodeInst@2
	DD	$LN34@DecodeInst@2
	DD	$LN24@DecodeInst@2
	DD	$LN24@DecodeInst@2
	DD	$LN14@DecodeInst@2
	DD	$LN7@DecodeInst@2
?DecodeInstruction_ECU32@MPE@@QAEXPAEPAVInstructionCacheEntry@@PAI@Z ENDP ; MPE::DecodeInstruction_ECU32
_TEXT	ENDS
END
