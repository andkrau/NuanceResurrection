; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	c:\NuanceExperimental\byteswap.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?SwapWordBytes@@YIXPAG@Z			; SwapWordBytes
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\nuanceexperimental\byteswap.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_toswap$ = -4						; size = 4
?SwapWordBytes@@YIXPAG@Z PROC				; SwapWordBytes
; _toswap$ = ecx

; 10   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _toswap$[ebp], ecx

; 11   :   __asm
; 12   :   {
; 13   :     mov ax, [ecx]

	mov	ax, WORD PTR [ecx]

; 14   :     xchg ah, al

	xchg	ah, al

; 15   :     mov [ecx], ax

	mov	WORD PTR [ecx], ax

; 16   :   }
; 17   : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?SwapWordBytes@@YIXPAG@Z ENDP				; SwapWordBytes
_TEXT	ENDS
PUBLIC	?SwapScalarBytes@@YIXPAI@Z			; SwapScalarBytes
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_toswap$ = -4						; size = 4
?SwapScalarBytes@@YIXPAI@Z PROC				; SwapScalarBytes
; _toswap$ = ecx

; 20   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _toswap$[ebp], ecx

; 21   :   __asm
; 22   :   {
; 23   :     mov eax, [ecx]

	mov	eax, DWORD PTR [ecx]

; 24   :     bswap eax

	bswap	eax

; 25   :     mov [ecx], eax

	mov	DWORD PTR [ecx], eax

; 26   :   }
; 27   : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?SwapScalarBytes@@YIXPAI@Z ENDP				; SwapScalarBytes
_TEXT	ENDS
PUBLIC	?SwapShortVectorBytes@@YIXPAG@Z			; SwapShortVectorBytes
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_toswap$ = -4						; size = 4
?SwapShortVectorBytes@@YIXPAG@Z PROC			; SwapShortVectorBytes
; _toswap$ = ecx

; 30   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _toswap$[ebp], ecx

; 31   :   __asm
; 32   :   {
; 33   :     mov dx, [ecx]

	mov	dx, WORD PTR [ecx]

; 34   :     mov ax, [ecx + 2]

	mov	ax, WORD PTR [ecx+2]

; 35   :     xchg dl, dh

	xchg	dl, dh

; 36   :     xchg al, ah

	xchg	al, ah

; 37   :     mov [ecx], dx

	mov	WORD PTR [ecx], dx

; 38   :     mov [ecx + 2], ax

	mov	WORD PTR [ecx+2], ax

; 39   :     mov dx, [ecx + 4]

	mov	dx, WORD PTR [ecx+4]

; 40   :     mov ax, [ecx + 6]

	mov	ax, WORD PTR [ecx+6]

; 41   :     xchg dl, dh

	xchg	dl, dh

; 42   :     xchg al, ah

	xchg	al, ah

; 43   :     mov [ecx + 4], dx

	mov	WORD PTR [ecx+4], dx

; 44   :     mov [ecx + 6], ax

	mov	WORD PTR [ecx+6], ax

; 45   :   }
; 46   : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?SwapShortVectorBytes@@YIXPAG@Z ENDP			; SwapShortVectorBytes
_TEXT	ENDS
PUBLIC	?SwapVectorBytes@@YIXPAI@Z			; SwapVectorBytes
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_toswap$ = -4						; size = 4
?SwapVectorBytes@@YIXPAI@Z PROC				; SwapVectorBytes
; _toswap$ = ecx

; 49   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _toswap$[ebp], ecx

; 50   :   __asm
; 51   :   {
; 52   :     mov edx, [ecx]

	mov	edx, DWORD PTR [ecx]

; 53   :     mov eax, [ecx + 4]

	mov	eax, DWORD PTR [ecx+4]

; 54   :     bswap edx

	bswap	edx

; 55   :     bswap eax

	bswap	eax

; 56   :     mov [ecx],edx

	mov	DWORD PTR [ecx], edx

; 57   :     mov [ecx + 4],eax

	mov	DWORD PTR [ecx+4], eax

; 58   :     mov edx, [ecx + 8]

	mov	edx, DWORD PTR [ecx+8]

; 59   :     mov eax, [ecx + 12]

	mov	eax, DWORD PTR [ecx+12]

; 60   :     bswap edx

	bswap	edx

; 61   :     bswap eax

	bswap	eax

; 62   :     mov [ecx + 8],edx

	mov	DWORD PTR [ecx+8], edx

; 63   :     mov [ecx + 12],eax

	mov	DWORD PTR [ecx+12], eax

; 64   :   }
; 65   : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?SwapVectorBytes@@YIXPAI@Z ENDP				; SwapVectorBytes
_TEXT	ENDS
END
