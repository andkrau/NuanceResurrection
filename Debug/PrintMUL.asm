; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	c:\NuanceExperimental\PrintMUL.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG4431	DB	'16', 00H
$SG4448	DB	00H
$SG4433	DB	'24', 00H
$SG4458	DB	00H
$SG4435	DB	'32', 00H
$SG4468	DB	00H
$SG4437	DB	'30', 00H
$SG4478	DB	00H
$SG4439	DB	'???', 00H
$SG4446	DB	'addm #$%lX, r%lu, r%lu', 00H
$SG4488	DB	00H
$SG4447	DB	0aH, 00H
$SG4498	DB	00H
$SG4508	DB	00H
$SG4449	DB	'%s%s', 00H
$SG4518	DB	00H
$SG4528	DB	00H
$SG4538	DB	00H
$SG4456	DB	'addm r%lu, r%lu, r%lu', 00H
$SG4548	DB	00H
$SG4558	DB	00H
$SG4457	DB	0aH, 00H
$SG4568	DB	00H
$SG4578	DB	00H
$SG4459	DB	'%s%s', 00H
$SG4588	DB	00H
$SG4598	DB	00H
$SG4608	DB	00H
$SG4466	DB	'subm r%lu, #$%lX, r%lu', 00H
$SG4618	DB	00H
$SG4467	DB	0aH, 00H
$SG4628	DB	00H
$SG4638	DB	00H
$SG4469	DB	'%s%s', 00H
$SG4648	DB	00H
$SG4658	DB	00H
$SG4668	DB	00H
$SG4476	DB	'subm r%lu, r%lu, r%lu', 00H
$SG4678	DB	00H
$SG4688	DB	00H
$SG4477	DB	0aH, 00H
$SG4698	DB	00H
$SG4708	DB	00H
$SG4479	DB	'%s%s', 00H
$SG4718	DB	00H
$SG4728	DB	00H
$SG4738	DB	00H
$SG4486	DB	'mul r%lu, r%lu, >>acshift, r%lu', 00H
$SG4487	DB	0aH, 00H
$SG4748	DB	00H
$SG4758	DB	00H
$SG4489	DB	'%s%s', 00H
$SG4768	DB	00H
$SG4778	DB	00H
	ORG $+1
$SG4496	DB	'mul r%lu, r%lu, >>#%lu, r%lu', 00H
	ORG $+3
$SG4497	DB	0aH, 00H
	ORG $+2
$SG4499	DB	'%s%s', 00H
	ORG $+3
$SG4506	DB	'mul r%lu, r%lu, >>#-%lu, r%lu', 00H
	ORG $+2
$SG4507	DB	0aH, 00H
	ORG $+2
$SG4509	DB	'%s%s', 00H
	ORG $+3
$SG4516	DB	'mul #%lu, r%lu, >>acshift, r%lu', 00H
$SG4517	DB	0aH, 00H
	ORG $+2
$SG4519	DB	'%s%s', 00H
	ORG $+3
$SG4526	DB	'mul r%lu, r%lu, >>r%lu, r%lu', 00H
	ORG $+3
$SG4527	DB	0aH, 00H
	ORG $+2
$SG4529	DB	'%s%s', 00H
	ORG $+3
$SG4536	DB	'mul #%lu, r%lu, >>r%lu, r%lu', 00H
	ORG $+3
$SG4537	DB	0aH, 00H
	ORG $+2
$SG4539	DB	'%s%s', 00H
	ORG $+3
$SG4546	DB	'mul #%lu, r%lu, >>#%lu, r%lu', 00H
	ORG $+3
$SG4547	DB	0aH, 00H
	ORG $+2
$SG4549	DB	'%s%s', 00H
	ORG $+3
$SG4556	DB	'mul #%lu, r%lu, >>#-%lu, r%lu', 00H
	ORG $+2
$SG4557	DB	0aH, 00H
	ORG $+2
$SG4559	DB	'%s%s', 00H
	ORG $+3
$SG4566	DB	'mul_sv #$%lX, v%lu, >>#%s, v%lu', 00H
$SG4567	DB	0aH, 00H
	ORG $+2
$SG4569	DB	'%s%s', 00H
	ORG $+3
$SG4576	DB	'mul_sv r%lu, v%lu, >>#%s, v%lu', 00H
	ORG $+1
$SG4577	DB	0aH, 00H
	ORG $+2
$SG4579	DB	'%s%s', 00H
	ORG $+3
$SG4586	DB	'mul_sv r%lu, v%lu, >>svshift, v%lu', 00H
	ORG $+1
$SG4587	DB	0aH, 00H
	ORG $+2
$SG4589	DB	'%s%s', 00H
	ORG $+3
$SG4596	DB	'mul_sv ru, v%lu, >>#%s, v%lu', 00H
	ORG $+3
$SG4597	DB	0aH, 00H
	ORG $+2
$SG4599	DB	'%s%s', 00H
	ORG $+3
$SG4606	DB	'mul_sv ru, v%lu, >>svshift, v%lu', 00H
	ORG $+3
$SG4607	DB	0aH, 00H
	ORG $+2
$SG4609	DB	'%s%s', 00H
	ORG $+3
$SG4616	DB	'mul_sv rv, v%lu, >>#%s, v%lu', 00H
	ORG $+3
$SG4617	DB	0aH, 00H
	ORG $+2
$SG4619	DB	'%s%s', 00H
	ORG $+3
$SG4626	DB	'mul_sv ru, v%lu, >>svshift, v%lu', 00H
	ORG $+3
$SG4627	DB	0aH, 00H
	ORG $+2
$SG4629	DB	'%s%s', 00H
	ORG $+3
$SG4636	DB	'mul_sv v%lu, v%lu, >>#%s, v%lu', 00H
	ORG $+1
$SG4637	DB	0aH, 00H
	ORG $+2
$SG4639	DB	'%s%s', 00H
	ORG $+3
$SG4646	DB	'mul_sv v%lu, v%lu, >>svshift, v%lu', 00H
	ORG $+1
$SG4647	DB	0aH, 00H
	ORG $+2
$SG4649	DB	'%s%s', 00H
	ORG $+3
$SG4656	DB	'mul_p #$%lX, v%lu, >>#%s, v%lu', 00H
	ORG $+1
$SG4657	DB	0aH, 00H
	ORG $+2
$SG4659	DB	'%s%s', 00H
	ORG $+3
$SG4666	DB	'mul_p r%lu, v%lu, >>#%s, v%lu', 00H
	ORG $+2
$SG4667	DB	0aH, 00H
	ORG $+2
$SG4669	DB	'%s%s', 00H
	ORG $+3
$SG4676	DB	'mul_p r%lu, v%lu, >>svshift, v%lu', 00H
	ORG $+2
$SG4677	DB	0aH, 00H
	ORG $+2
$SG4679	DB	'%s%s', 00H
	ORG $+3
$SG4686	DB	'mul_p ru, v%lu, >>#%s, v%lu', 00H
$SG4687	DB	0aH, 00H
	ORG $+2
$SG4689	DB	'%s%s', 00H
	ORG $+3
$SG4696	DB	'mul_p ru, v%lu, >>svshift, v%lu', 00H
$SG4697	DB	0aH, 00H
	ORG $+2
$SG4699	DB	'%s%s', 00H
	ORG $+3
$SG4706	DB	'mul_p rv, v%lu, >>#%s, v%lu', 00H
$SG4707	DB	0aH, 00H
	ORG $+2
$SG4709	DB	'%s%s', 00H
	ORG $+3
$SG4716	DB	'mul_p ru, v%lu, >>svshift, v%lu', 00H
$SG4717	DB	0aH, 00H
	ORG $+2
$SG4719	DB	'%s%s', 00H
	ORG $+3
$SG4726	DB	'mul_p v%lu, v%lu, >>#%s, v%lu', 00H
	ORG $+2
$SG4727	DB	0aH, 00H
	ORG $+2
$SG4729	DB	'%s%s', 00H
	ORG $+3
$SG4736	DB	'mul_p v%lu, v%lu, >>svshift, v%lu', 00H
	ORG $+2
$SG4737	DB	0aH, 00H
	ORG $+2
$SG4739	DB	'%s%s', 00H
	ORG $+3
$SG4746	DB	'dotp r%lu, v%lu, >>#%s, r%lu', 00H
	ORG $+3
$SG4747	DB	0aH, 00H
	ORG $+2
$SG4749	DB	'%s%s', 00H
	ORG $+3
$SG4756	DB	'dotp r%lu, v%lu, >>svshift, r%lu', 00H
	ORG $+3
$SG4757	DB	0aH, 00H
	ORG $+2
$SG4759	DB	'%s%s', 00H
	ORG $+3
$SG4766	DB	'dotp v%lu, v%lu, >>#%s, r%lu', 00H
	ORG $+3
$SG4767	DB	0aH, 00H
	ORG $+2
$SG4769	DB	'%s%s', 00H
	ORG $+3
$SG4776	DB	'dotp v%lu, v%lu, >>svshift, r%lu', 00H
	ORG $+3
$SG4777	DB	0aH, 00H
	ORG $+2
$SG4779	DB	'%s%s', 00H
CONST	ENDS
PUBLIC	?GetImmediateShift@@YAPADI@Z			; GetImmediateShift
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\nuanceexperimental\printmul.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv64 = -4						; size = 4
_which$ = 8						; size = 4
?GetImmediateShift@@YAPADI@Z PROC			; GetImmediateShift

; 7    : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 8    :   switch(which)

	mov	eax, DWORD PTR _which$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 3
	ja	SHORT $LN1@GetImmedia
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN10@GetImmedia[ecx*4]
$LN5@GetImmedia:

; 9    :   {
; 10   :     case 0:
; 11   :       return "16";

	mov	eax, OFFSET $SG4431
	jmp	SHORT $LN8@GetImmedia
$LN4@GetImmedia:

; 12   :     case 1:
; 13   :       return "24";

	mov	eax, OFFSET $SG4433
	jmp	SHORT $LN8@GetImmedia
$LN3@GetImmedia:

; 14   :     case 2:
; 15   :       return "32";

	mov	eax, OFFSET $SG4435
	jmp	SHORT $LN8@GetImmedia
$LN2@GetImmedia:

; 16   :     case 3:
; 17   :       return "30";

	mov	eax, OFFSET $SG4437
	jmp	SHORT $LN8@GetImmedia
$LN1@GetImmedia:

; 18   :     default:
; 19   :       return "???";

	mov	eax, OFFSET $SG4439
$LN8@GetImmedia:

; 20   :   }
; 21   : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@GetImmedia:
	DD	$LN5@GetImmedia
	DD	$LN4@GetImmedia
	DD	$LN3@GetImmedia
	DD	$LN2@GetImmedia
?GetImmediateShift@@YAPADI@Z ENDP			; GetImmediateShift
_TEXT	ENDS
PUBLIC	?Print_ADDMImmediate@@YAIPADAAVNuance@@_N@Z	; Print_ADDMImmediate
EXTRN	_strlen:PROC
EXTRN	_sprintf:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ADDMImmediate@@YAIPADAAVNuance@@_N@Z PROC	; Print_ADDMImmediate

; 24   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 25   :   char tempStr[512];
; 26   :   sprintf(tempStr,"addm #$%lX, r%lu, r%lu",nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_SRC2],nuance.fields[FIELD_MUL_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4446
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 27   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ADDM
	mov	DWORD PTR tv75[ebp], OFFSET $SG4447
	jmp	SHORT $LN4@Print_ADDM
$LN3@Print_ADDM:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4448
$LN4@Print_ADDM:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4449
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 28   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 29   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ADDM
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ADDM:
	DD	1
	DD	$LN6@Print_ADDM
$LN6@Print_ADDM:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ADDM
$LN5@Print_ADDM:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ADDMImmediate@@YAIPADAAVNuance@@_N@Z ENDP	; Print_ADDMImmediate
_TEXT	ENDS
PUBLIC	?Print_ADDM@@YAIPADAAVNuance@@_N@Z		; Print_ADDM
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ADDM@@YAIPADAAVNuance@@_N@Z PROC			; Print_ADDM

; 32   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 33   :   char tempStr[512];
; 34   :   sprintf(tempStr,"addm r%lu, r%lu, r%lu",nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_SRC2],nuance.fields[FIELD_MUL_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4456
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 35   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ADDM@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG4457
	jmp	SHORT $LN4@Print_ADDM@2
$LN3@Print_ADDM@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4458
$LN4@Print_ADDM@2:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4459
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 36   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 37   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ADDM@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ADDM@2:
	DD	1
	DD	$LN6@Print_ADDM@2
$LN6@Print_ADDM@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ADDM@2
$LN5@Print_ADDM@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ADDM@@YAIPADAAVNuance@@_N@Z ENDP			; Print_ADDM
_TEXT	ENDS
PUBLIC	?Print_SUBMImmediateReverse@@YAIPADAAVNuance@@_N@Z ; Print_SUBMImmediateReverse
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_SUBMImmediateReverse@@YAIPADAAVNuance@@_N@Z PROC	; Print_SUBMImmediateReverse

; 40   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 41   :   char tempStr[512];
; 42   :   sprintf(tempStr,"subm r%lu, #$%lX, r%lu",nuance.fields[FIELD_MUL_SRC2],nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	push	OFFSET $SG4466
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 43   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_SUBM
	mov	DWORD PTR tv75[ebp], OFFSET $SG4467
	jmp	SHORT $LN4@Print_SUBM
$LN3@Print_SUBM:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4468
$LN4@Print_SUBM:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4469
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 44   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 45   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_SUBM
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_SUBM:
	DD	1
	DD	$LN6@Print_SUBM
$LN6@Print_SUBM:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_SUBM
$LN5@Print_SUBM:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_SUBMImmediateReverse@@YAIPADAAVNuance@@_N@Z ENDP	; Print_SUBMImmediateReverse
_TEXT	ENDS
PUBLIC	?Print_SUBM@@YAIPADAAVNuance@@_N@Z		; Print_SUBM
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_SUBM@@YAIPADAAVNuance@@_N@Z PROC			; Print_SUBM

; 48   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 49   :   char tempStr[512];
; 50   :   sprintf(tempStr,"subm r%lu, r%lu, r%lu",nuance.fields[FIELD_MUL_SRC2],nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	push	OFFSET $SG4476
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 51   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_SUBM@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG4477
	jmp	SHORT $LN4@Print_SUBM@2
$LN3@Print_SUBM@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4478
$LN4@Print_SUBM@2:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4479
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 52   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 53   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_SUBM@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_SUBM@2:
	DD	1
	DD	$LN6@Print_SUBM@2
$LN6@Print_SUBM@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_SUBM@2
$LN5@Print_SUBM@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_SUBM@@YAIPADAAVNuance@@_N@Z ENDP			; Print_SUBM
_TEXT	ENDS
PUBLIC	?Print_MULScalarShiftAcshift@@YAIPADAAVNuance@@_N@Z ; Print_MULScalarShiftAcshift
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MULScalarShiftAcshift@@YAIPADAAVNuance@@_N@Z PROC ; Print_MULScalarShiftAcshift

; 56   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 57   :   char tempStr[512];
; 58   :   sprintf(tempStr,"mul r%lu, r%lu, >>acshift, r%lu",nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_SRC2],nuance.fields[FIELD_MUL_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4486
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 59   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_MULS
	mov	DWORD PTR tv75[ebp], OFFSET $SG4487
	jmp	SHORT $LN4@Print_MULS
$LN3@Print_MULS:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4488
$LN4@Print_MULS:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4489
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 60   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 61   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MULS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_MULS:
	DD	1
	DD	$LN6@Print_MULS
$LN6@Print_MULS:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MULS
$LN5@Print_MULS:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MULScalarShiftAcshift@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MULScalarShiftAcshift
_TEXT	ENDS
PUBLIC	?Print_MULScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ; Print_MULScalarShiftRightImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv77 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MULScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_MULScalarShiftRightImmediate

; 64   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   :   char tempStr[512];
; 66   :   sprintf(tempStr,"mul r%lu, r%lu, >>#%lu, r%lu",nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_SRC2],nuance.fields[FIELD_MUL_INFO],nuance.fields[FIELD_MUL_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG4496
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 67   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_MULS@2
	mov	DWORD PTR tv77[ebp], OFFSET $SG4497
	jmp	SHORT $LN4@Print_MULS@2
$LN3@Print_MULS@2:
	mov	DWORD PTR tv77[ebp], OFFSET $SG4498
$LN4@Print_MULS@2:
	mov	ecx, DWORD PTR tv77[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4499
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 68   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 69   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MULS@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_MULS@2:
	DD	1
	DD	$LN6@Print_MULS@2
$LN6@Print_MULS@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MULS@2
$LN5@Print_MULS@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MULScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MULScalarShiftRightImmediate
_TEXT	ENDS
PUBLIC	?Print_MULScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_MULScalarShiftLeftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv77 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MULScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_MULScalarShiftLeftImmediate

; 72   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 73   :   char tempStr[512];
; 74   :   sprintf(tempStr,"mul r%lu, r%lu, >>#-%lu, r%lu",nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_SRC2],nuance.fields[FIELD_MUL_INFO],nuance.fields[FIELD_MUL_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG4506
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 75   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_MULS@3
	mov	DWORD PTR tv77[ebp], OFFSET $SG4507
	jmp	SHORT $LN4@Print_MULS@3
$LN3@Print_MULS@3:
	mov	DWORD PTR tv77[ebp], OFFSET $SG4508
$LN4@Print_MULS@3:
	mov	ecx, DWORD PTR tv77[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4509
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 76   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 77   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MULS@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_MULS@3:
	DD	1
	DD	$LN6@Print_MULS@3
$LN6@Print_MULS@3:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MULS@3
$LN5@Print_MULS@3:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MULScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MULScalarShiftLeftImmediate
_TEXT	ENDS
PUBLIC	?Print_MULImmediateShiftAcshift@@YAIPADAAVNuance@@_N@Z ; Print_MULImmediateShiftAcshift
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MULImmediateShiftAcshift@@YAIPADAAVNuance@@_N@Z PROC ; Print_MULImmediateShiftAcshift

; 80   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 81   :   char tempStr[512];
; 82   :   sprintf(tempStr,"mul #%lu, r%lu, >>acshift, r%lu",nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_SRC2],nuance.fields[FIELD_MUL_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4516
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 83   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_MULI
	mov	DWORD PTR tv75[ebp], OFFSET $SG4517
	jmp	SHORT $LN4@Print_MULI
$LN3@Print_MULI:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4518
$LN4@Print_MULI:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4519
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 84   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 85   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MULI
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_MULI:
	DD	1
	DD	$LN6@Print_MULI
$LN6@Print_MULI:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MULI
$LN5@Print_MULI:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MULImmediateShiftAcshift@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MULImmediateShiftAcshift
_TEXT	ENDS
PUBLIC	?Print_MULScalarShiftScalar@@YAIPADAAVNuance@@_N@Z ; Print_MULScalarShiftScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv77 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MULScalarShiftScalar@@YAIPADAAVNuance@@_N@Z PROC	; Print_MULScalarShiftScalar

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 89   :   char tempStr[512];
; 90   :   sprintf(tempStr,"mul r%lu, r%lu, >>r%lu, r%lu",nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_SRC2],nuance.fields[FIELD_MUL_INFO],nuance.fields[FIELD_MUL_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG4526
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 91   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_MULS@4
	mov	DWORD PTR tv77[ebp], OFFSET $SG4527
	jmp	SHORT $LN4@Print_MULS@4
$LN3@Print_MULS@4:
	mov	DWORD PTR tv77[ebp], OFFSET $SG4528
$LN4@Print_MULS@4:
	mov	ecx, DWORD PTR tv77[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4529
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 92   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 93   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MULS@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_MULS@4:
	DD	1
	DD	$LN6@Print_MULS@4
$LN6@Print_MULS@4:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MULS@4
$LN5@Print_MULS@4:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MULScalarShiftScalar@@YAIPADAAVNuance@@_N@Z ENDP	; Print_MULScalarShiftScalar
_TEXT	ENDS
PUBLIC	?Print_MULImmediateShiftScalar@@YAIPADAAVNuance@@_N@Z ; Print_MULImmediateShiftScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv77 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MULImmediateShiftScalar@@YAIPADAAVNuance@@_N@Z PROC ; Print_MULImmediateShiftScalar

; 96   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 97   :   char tempStr[512];
; 98   :   sprintf(tempStr,"mul #%lu, r%lu, >>r%lu, r%lu",nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_SRC2],nuance.fields[FIELD_MUL_INFO],nuance.fields[FIELD_MUL_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG4536
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 99   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_MULI@2
	mov	DWORD PTR tv77[ebp], OFFSET $SG4537
	jmp	SHORT $LN4@Print_MULI@2
$LN3@Print_MULI@2:
	mov	DWORD PTR tv77[ebp], OFFSET $SG4538
$LN4@Print_MULI@2:
	mov	ecx, DWORD PTR tv77[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4539
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 100  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 101  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MULI@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_MULI@2:
	DD	1
	DD	$LN6@Print_MULI@2
$LN6@Print_MULI@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MULI@2
$LN5@Print_MULI@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MULImmediateShiftScalar@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MULImmediateShiftScalar
_TEXT	ENDS
PUBLIC	?Print_MULImmediateShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ; Print_MULImmediateShiftRightImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv77 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MULImmediateShiftRightImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_MULImmediateShiftRightImmediate

; 104  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 105  :   char tempStr[512];
; 106  :   sprintf(tempStr,"mul #%lu, r%lu, >>#%lu, r%lu",nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_SRC2],nuance.fields[FIELD_MUL_INFO],nuance.fields[FIELD_MUL_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG4546
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 107  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_MULI@3
	mov	DWORD PTR tv77[ebp], OFFSET $SG4547
	jmp	SHORT $LN4@Print_MULI@3
$LN3@Print_MULI@3:
	mov	DWORD PTR tv77[ebp], OFFSET $SG4548
$LN4@Print_MULI@3:
	mov	ecx, DWORD PTR tv77[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4549
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 108  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 109  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MULI@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_MULI@3:
	DD	1
	DD	$LN6@Print_MULI@3
$LN6@Print_MULI@3:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MULI@3
$LN5@Print_MULI@3:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MULImmediateShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MULImmediateShiftRightImmediate
_TEXT	ENDS
PUBLIC	?Print_MULImmediateShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_MULImmediateShiftLeftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv77 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MULImmediateShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_MULImmediateShiftLeftImmediate

; 112  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 113  :   char tempStr[512];
; 114  :   sprintf(tempStr,"mul #%lu, r%lu, >>#-%lu, r%lu",nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_SRC2],nuance.fields[FIELD_MUL_INFO],nuance.fields[FIELD_MUL_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG4556
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 115  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_MULI@4
	mov	DWORD PTR tv77[ebp], OFFSET $SG4557
	jmp	SHORT $LN4@Print_MULI@4
$LN3@Print_MULI@4:
	mov	DWORD PTR tv77[ebp], OFFSET $SG4558
$LN4@Print_MULI@4:
	mov	ecx, DWORD PTR tv77[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4559
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 116  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 117  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MULI@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_MULI@4:
	DD	1
	DD	$LN6@Print_MULI@4
$LN6@Print_MULI@4:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MULI@4
$LN5@Print_MULI@4:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MULImmediateShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MULImmediateShiftLeftImmediate
_TEXT	ENDS
PUBLIC	?Print_MUL_SVImmediateShiftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_MUL_SVImmediateShiftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv81 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MUL_SVImmediateShiftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_MUL_SVImmediateShiftImmediate

; 120  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 121  :   char tempStr[512];
; 122  :   sprintf(tempStr,"mul_sv #$%lX, v%lu, >>#%s, v%lu",nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_SRC2] >> 2,GetImmediateShift(nuance.fields[FIELD_MUL_INFO]),nuance.fields[FIELD_MUL_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?GetImmediateShift@@YAPADI@Z		; GetImmediateShift
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 2
	push	edx
	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG4566
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 123  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_MUL_
	mov	DWORD PTR tv81[ebp], OFFSET $SG4567
	jmp	SHORT $LN4@Print_MUL_
$LN3@Print_MUL_:
	mov	DWORD PTR tv81[ebp], OFFSET $SG4568
$LN4@Print_MUL_:
	mov	ecx, DWORD PTR tv81[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4569
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 124  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 125  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MUL_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Print_MUL_:
	DD	1
	DD	$LN6@Print_MUL_
$LN6@Print_MUL_:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MUL_
$LN5@Print_MUL_:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MUL_SVImmediateShiftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MUL_SVImmediateShiftImmediate
_TEXT	ENDS
PUBLIC	?Print_MUL_SVScalarShiftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_MUL_SVScalarShiftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv81 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MUL_SVScalarShiftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_MUL_SVScalarShiftImmediate

; 128  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 129  :   char tempStr[512];
; 130  :   sprintf(tempStr,"mul_sv r%lu, v%lu, >>#%s, v%lu",nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_SRC2] >> 2,GetImmediateShift(nuance.fields[FIELD_MUL_INFO]),nuance.fields[FIELD_MUL_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?GetImmediateShift@@YAPADI@Z		; GetImmediateShift
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 2
	push	edx
	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG4576
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 131  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_MUL_@2
	mov	DWORD PTR tv81[ebp], OFFSET $SG4577
	jmp	SHORT $LN4@Print_MUL_@2
$LN3@Print_MUL_@2:
	mov	DWORD PTR tv81[ebp], OFFSET $SG4578
$LN4@Print_MUL_@2:
	mov	ecx, DWORD PTR tv81[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4579
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 132  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 133  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MUL_@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Print_MUL_@2:
	DD	1
	DD	$LN6@Print_MUL_@2
$LN6@Print_MUL_@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MUL_@2
$LN5@Print_MUL_@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MUL_SVScalarShiftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MUL_SVScalarShiftImmediate
_TEXT	ENDS
PUBLIC	?Print_MUL_SVScalarShiftSvshift@@YAIPADAAVNuance@@_N@Z ; Print_MUL_SVScalarShiftSvshift
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv77 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MUL_SVScalarShiftSvshift@@YAIPADAAVNuance@@_N@Z PROC ; Print_MUL_SVScalarShiftSvshift

; 135  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 136  :   char tempStr[512];
; 137  :   sprintf(tempStr,"mul_sv r%lu, v%lu, >>svshift, v%lu",nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_SRC2] >> 2,nuance.fields[FIELD_MUL_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 2
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4586
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 138  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_MUL_@3
	mov	DWORD PTR tv77[ebp], OFFSET $SG4587
	jmp	SHORT $LN4@Print_MUL_@3
$LN3@Print_MUL_@3:
	mov	DWORD PTR tv77[ebp], OFFSET $SG4588
$LN4@Print_MUL_@3:
	mov	edx, DWORD PTR tv77[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4589
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 139  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 140  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MUL_@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Print_MUL_@3:
	DD	1
	DD	$LN6@Print_MUL_@3
$LN6@Print_MUL_@3:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MUL_@3
$LN5@Print_MUL_@3:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MUL_SVScalarShiftSvshift@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MUL_SVScalarShiftSvshift
_TEXT	ENDS
PUBLIC	?Print_MUL_SVRuShiftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_MUL_SVRuShiftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv79 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MUL_SVRuShiftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_MUL_SVRuShiftImmediate

; 142  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 143  :   char tempStr[512];
; 144  :   sprintf(tempStr,"mul_sv ru, v%lu, >>#%s, v%lu",nuance.fields[FIELD_MUL_SRC2] >> 2,GetImmediateShift(nuance.fields[FIELD_MUL_INFO]),nuance.fields[FIELD_MUL_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?GetImmediateShift@@YAPADI@Z		; GetImmediateShift
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 2
	push	edx
	push	OFFSET $SG4596
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 145  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_MUL_@4
	mov	DWORD PTR tv79[ebp], OFFSET $SG4597
	jmp	SHORT $LN4@Print_MUL_@4
$LN3@Print_MUL_@4:
	mov	DWORD PTR tv79[ebp], OFFSET $SG4598
$LN4@Print_MUL_@4:
	mov	edx, DWORD PTR tv79[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4599
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 146  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 147  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MUL_@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_MUL_@4:
	DD	1
	DD	$LN6@Print_MUL_@4
$LN6@Print_MUL_@4:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MUL_@4
$LN5@Print_MUL_@4:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MUL_SVRuShiftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MUL_SVRuShiftImmediate
_TEXT	ENDS
PUBLIC	?Print_MUL_SVRuShiftSvshift@@YAIPADAAVNuance@@_N@Z ; Print_MUL_SVRuShiftSvshift
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MUL_SVRuShiftSvshift@@YAIPADAAVNuance@@_N@Z PROC	; Print_MUL_SVRuShiftSvshift

; 150  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 151  :   char tempStr[512];
; 152  :   sprintf(tempStr,"mul_sv ru, v%lu, >>svshift, v%lu",nuance.fields[FIELD_MUL_SRC2] >> 2,nuance.fields[FIELD_MUL_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 2
	push	eax
	push	OFFSET $SG4606
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 153  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_MUL_@5
	mov	DWORD PTR tv75[ebp], OFFSET $SG4607
	jmp	SHORT $LN4@Print_MUL_@5
$LN3@Print_MUL_@5:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4608
$LN4@Print_MUL_@5:
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG4609
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 154  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 155  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MUL_@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_MUL_@5:
	DD	1
	DD	$LN6@Print_MUL_@5
$LN6@Print_MUL_@5:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MUL_@5
$LN5@Print_MUL_@5:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MUL_SVRuShiftSvshift@@YAIPADAAVNuance@@_N@Z ENDP	; Print_MUL_SVRuShiftSvshift
_TEXT	ENDS
PUBLIC	?Print_MUL_SVRvShiftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_MUL_SVRvShiftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv79 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MUL_SVRvShiftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_MUL_SVRvShiftImmediate

; 158  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 159  :   char tempStr[512];
; 160  :   sprintf(tempStr,"mul_sv rv, v%lu, >>#%s, v%lu",nuance.fields[FIELD_MUL_SRC2] >> 2,GetImmediateShift(nuance.fields[FIELD_MUL_INFO]),nuance.fields[FIELD_MUL_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?GetImmediateShift@@YAPADI@Z		; GetImmediateShift
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 2
	push	edx
	push	OFFSET $SG4616
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 161  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_MUL_@6
	mov	DWORD PTR tv79[ebp], OFFSET $SG4617
	jmp	SHORT $LN4@Print_MUL_@6
$LN3@Print_MUL_@6:
	mov	DWORD PTR tv79[ebp], OFFSET $SG4618
$LN4@Print_MUL_@6:
	mov	edx, DWORD PTR tv79[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4619
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 162  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 163  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MUL_@6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_MUL_@6:
	DD	1
	DD	$LN6@Print_MUL_@6
$LN6@Print_MUL_@6:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MUL_@6
$LN5@Print_MUL_@6:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MUL_SVRvShiftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MUL_SVRvShiftImmediate
_TEXT	ENDS
PUBLIC	?Print_MUL_SVRvShiftSvshift@@YAIPADAAVNuance@@_N@Z ; Print_MUL_SVRvShiftSvshift
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MUL_SVRvShiftSvshift@@YAIPADAAVNuance@@_N@Z PROC	; Print_MUL_SVRvShiftSvshift

; 166  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 167  :   char tempStr[512];
; 168  :   sprintf(tempStr,"mul_sv ru, v%lu, >>svshift, v%lu",nuance.fields[FIELD_MUL_SRC2] >> 2,nuance.fields[FIELD_MUL_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 2
	push	eax
	push	OFFSET $SG4626
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 169  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_MUL_@7
	mov	DWORD PTR tv75[ebp], OFFSET $SG4627
	jmp	SHORT $LN4@Print_MUL_@7
$LN3@Print_MUL_@7:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4628
$LN4@Print_MUL_@7:
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG4629
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 170  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 171  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MUL_@7
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_MUL_@7:
	DD	1
	DD	$LN6@Print_MUL_@7
$LN6@Print_MUL_@7:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MUL_@7
$LN5@Print_MUL_@7:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MUL_SVRvShiftSvshift@@YAIPADAAVNuance@@_N@Z ENDP	; Print_MUL_SVRvShiftSvshift
_TEXT	ENDS
PUBLIC	?Print_MUL_SVVectorShiftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_MUL_SVVectorShiftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv82 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MUL_SVVectorShiftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_MUL_SVVectorShiftImmediate

; 174  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 175  :   char tempStr[512];
; 176  :   sprintf(tempStr,"mul_sv v%lu, v%lu, >>#%s, v%lu",nuance.fields[FIELD_MUL_SRC1] >> 2,nuance.fields[FIELD_MUL_SRC2] >> 2,GetImmediateShift(nuance.fields[FIELD_MUL_INFO]),nuance.fields[FIELD_MUL_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?GetImmediateShift@@YAPADI@Z		; GetImmediateShift
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 2
	push	edx
	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	push	ecx
	push	OFFSET $SG4636
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 177  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_MUL_@8
	mov	DWORD PTR tv82[ebp], OFFSET $SG4637
	jmp	SHORT $LN4@Print_MUL_@8
$LN3@Print_MUL_@8:
	mov	DWORD PTR tv82[ebp], OFFSET $SG4638
$LN4@Print_MUL_@8:
	mov	ecx, DWORD PTR tv82[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4639
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 178  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 179  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MUL_@8
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Print_MUL_@8:
	DD	1
	DD	$LN6@Print_MUL_@8
$LN6@Print_MUL_@8:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MUL_@8
$LN5@Print_MUL_@8:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MUL_SVVectorShiftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MUL_SVVectorShiftImmediate
_TEXT	ENDS
PUBLIC	?Print_MUL_SVVectorShiftSvshift@@YAIPADAAVNuance@@_N@Z ; Print_MUL_SVVectorShiftSvshift
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv78 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MUL_SVVectorShiftSvshift@@YAIPADAAVNuance@@_N@Z PROC ; Print_MUL_SVVectorShiftSvshift

; 182  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 183  :   char tempStr[512];
; 184  :   sprintf(tempStr,"mul_sv v%lu, v%lu, >>svshift, v%lu",nuance.fields[FIELD_MUL_SRC1] >> 2,nuance.fields[FIELD_MUL_SRC2] >> 2,nuance.fields[FIELD_MUL_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 2
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shr	edx, 2
	push	edx
	push	OFFSET $SG4646
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 185  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_MUL_@9
	mov	DWORD PTR tv78[ebp], OFFSET $SG4647
	jmp	SHORT $LN4@Print_MUL_@9
$LN3@Print_MUL_@9:
	mov	DWORD PTR tv78[ebp], OFFSET $SG4648
$LN4@Print_MUL_@9:
	mov	edx, DWORD PTR tv78[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4649
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 186  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 187  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MUL_@9
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Print_MUL_@9:
	DD	1
	DD	$LN6@Print_MUL_@9
$LN6@Print_MUL_@9:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MUL_@9
$LN5@Print_MUL_@9:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MUL_SVVectorShiftSvshift@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MUL_SVVectorShiftSvshift
_TEXT	ENDS
PUBLIC	?Print_MUL_PImmediateShiftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_MUL_PImmediateShiftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv81 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MUL_PImmediateShiftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_MUL_PImmediateShiftImmediate

; 190  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 191  :   char tempStr[512];
; 192  :   sprintf(tempStr,"mul_p #$%lX, v%lu, >>#%s, v%lu",nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_SRC2] >> 2,GetImmediateShift(nuance.fields[FIELD_MUL_INFO]),nuance.fields[FIELD_MUL_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?GetImmediateShift@@YAPADI@Z		; GetImmediateShift
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 2
	push	edx
	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG4656
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 193  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_MUL_@10
	mov	DWORD PTR tv81[ebp], OFFSET $SG4657
	jmp	SHORT $LN4@Print_MUL_@10
$LN3@Print_MUL_@10:
	mov	DWORD PTR tv81[ebp], OFFSET $SG4658
$LN4@Print_MUL_@10:
	mov	ecx, DWORD PTR tv81[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4659
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 194  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 195  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MUL_@10
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Print_MUL_@10:
	DD	1
	DD	$LN6@Print_MUL_@10
$LN6@Print_MUL_@10:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MUL_@10
$LN5@Print_MUL_@10:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MUL_PImmediateShiftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MUL_PImmediateShiftImmediate
_TEXT	ENDS
PUBLIC	?Print_MUL_PScalarShiftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_MUL_PScalarShiftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv81 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MUL_PScalarShiftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_MUL_PScalarShiftImmediate

; 198  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 199  :   char tempStr[512];
; 200  :   sprintf(tempStr,"mul_p r%lu, v%lu, >>#%s, v%lu",nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_SRC2] >> 2,GetImmediateShift(nuance.fields[FIELD_MUL_INFO]),nuance.fields[FIELD_MUL_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?GetImmediateShift@@YAPADI@Z		; GetImmediateShift
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 2
	push	edx
	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG4666
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 201  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_MUL_@11
	mov	DWORD PTR tv81[ebp], OFFSET $SG4667
	jmp	SHORT $LN4@Print_MUL_@11
$LN3@Print_MUL_@11:
	mov	DWORD PTR tv81[ebp], OFFSET $SG4668
$LN4@Print_MUL_@11:
	mov	ecx, DWORD PTR tv81[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4669
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 202  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 203  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MUL_@11
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Print_MUL_@11:
	DD	1
	DD	$LN6@Print_MUL_@11
$LN6@Print_MUL_@11:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MUL_@11
$LN5@Print_MUL_@11:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MUL_PScalarShiftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MUL_PScalarShiftImmediate
_TEXT	ENDS
PUBLIC	?Print_MUL_PScalarShiftSvshift@@YAIPADAAVNuance@@_N@Z ; Print_MUL_PScalarShiftSvshift
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv77 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MUL_PScalarShiftSvshift@@YAIPADAAVNuance@@_N@Z PROC ; Print_MUL_PScalarShiftSvshift

; 206  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 207  :   char tempStr[512];
; 208  :   sprintf(tempStr,"mul_p r%lu, v%lu, >>svshift, v%lu",nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_SRC2] >> 2,nuance.fields[FIELD_MUL_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 2
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4676
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 209  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_MUL_@12
	mov	DWORD PTR tv77[ebp], OFFSET $SG4677
	jmp	SHORT $LN4@Print_MUL_@12
$LN3@Print_MUL_@12:
	mov	DWORD PTR tv77[ebp], OFFSET $SG4678
$LN4@Print_MUL_@12:
	mov	edx, DWORD PTR tv77[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4679
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 210  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 211  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MUL_@12
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Print_MUL_@12:
	DD	1
	DD	$LN6@Print_MUL_@12
$LN6@Print_MUL_@12:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MUL_@12
$LN5@Print_MUL_@12:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MUL_PScalarShiftSvshift@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MUL_PScalarShiftSvshift
_TEXT	ENDS
PUBLIC	?Print_MUL_PRuShiftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_MUL_PRuShiftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv79 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MUL_PRuShiftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_MUL_PRuShiftImmediate

; 214  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 215  :   char tempStr[512];
; 216  :   sprintf(tempStr,"mul_p ru, v%lu, >>#%s, v%lu",nuance.fields[FIELD_MUL_SRC2] >> 2,GetImmediateShift(nuance.fields[FIELD_MUL_INFO]),nuance.fields[FIELD_MUL_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?GetImmediateShift@@YAPADI@Z		; GetImmediateShift
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 2
	push	edx
	push	OFFSET $SG4686
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 217  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_MUL_@13
	mov	DWORD PTR tv79[ebp], OFFSET $SG4687
	jmp	SHORT $LN4@Print_MUL_@13
$LN3@Print_MUL_@13:
	mov	DWORD PTR tv79[ebp], OFFSET $SG4688
$LN4@Print_MUL_@13:
	mov	edx, DWORD PTR tv79[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4689
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 218  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 219  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MUL_@13
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_MUL_@13:
	DD	1
	DD	$LN6@Print_MUL_@13
$LN6@Print_MUL_@13:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MUL_@13
$LN5@Print_MUL_@13:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MUL_PRuShiftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MUL_PRuShiftImmediate
_TEXT	ENDS
PUBLIC	?Print_MUL_PRuShiftSvshift@@YAIPADAAVNuance@@_N@Z ; Print_MUL_PRuShiftSvshift
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MUL_PRuShiftSvshift@@YAIPADAAVNuance@@_N@Z PROC	; Print_MUL_PRuShiftSvshift

; 222  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 223  :   char tempStr[512];
; 224  :   sprintf(tempStr,"mul_p ru, v%lu, >>svshift, v%lu",nuance.fields[FIELD_MUL_SRC2] >> 2,nuance.fields[FIELD_MUL_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 2
	push	eax
	push	OFFSET $SG4696
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 225  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_MUL_@14
	mov	DWORD PTR tv75[ebp], OFFSET $SG4697
	jmp	SHORT $LN4@Print_MUL_@14
$LN3@Print_MUL_@14:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4698
$LN4@Print_MUL_@14:
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG4699
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 226  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 227  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MUL_@14
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_MUL_@14:
	DD	1
	DD	$LN6@Print_MUL_@14
$LN6@Print_MUL_@14:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MUL_@14
$LN5@Print_MUL_@14:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MUL_PRuShiftSvshift@@YAIPADAAVNuance@@_N@Z ENDP	; Print_MUL_PRuShiftSvshift
_TEXT	ENDS
PUBLIC	?Print_MUL_PRvShiftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_MUL_PRvShiftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv79 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MUL_PRvShiftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_MUL_PRvShiftImmediate

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 231  :   char tempStr[512];
; 232  :   sprintf(tempStr,"mul_p rv, v%lu, >>#%s, v%lu",nuance.fields[FIELD_MUL_SRC2] >> 2,GetImmediateShift(nuance.fields[FIELD_MUL_INFO]),nuance.fields[FIELD_MUL_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?GetImmediateShift@@YAPADI@Z		; GetImmediateShift
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 2
	push	edx
	push	OFFSET $SG4706
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 233  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_MUL_@15
	mov	DWORD PTR tv79[ebp], OFFSET $SG4707
	jmp	SHORT $LN4@Print_MUL_@15
$LN3@Print_MUL_@15:
	mov	DWORD PTR tv79[ebp], OFFSET $SG4708
$LN4@Print_MUL_@15:
	mov	edx, DWORD PTR tv79[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4709
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 234  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 235  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MUL_@15
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_MUL_@15:
	DD	1
	DD	$LN6@Print_MUL_@15
$LN6@Print_MUL_@15:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MUL_@15
$LN5@Print_MUL_@15:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MUL_PRvShiftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MUL_PRvShiftImmediate
_TEXT	ENDS
PUBLIC	?Print_MUL_PRvShiftSvshift@@YAIPADAAVNuance@@_N@Z ; Print_MUL_PRvShiftSvshift
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MUL_PRvShiftSvshift@@YAIPADAAVNuance@@_N@Z PROC	; Print_MUL_PRvShiftSvshift

; 238  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 239  :   char tempStr[512];
; 240  :   sprintf(tempStr,"mul_p ru, v%lu, >>svshift, v%lu",nuance.fields[FIELD_MUL_SRC2] >> 2,nuance.fields[FIELD_MUL_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 2
	push	eax
	push	OFFSET $SG4716
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 241  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_MUL_@16
	mov	DWORD PTR tv75[ebp], OFFSET $SG4717
	jmp	SHORT $LN4@Print_MUL_@16
$LN3@Print_MUL_@16:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4718
$LN4@Print_MUL_@16:
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG4719
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 242  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 243  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MUL_@16
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_MUL_@16:
	DD	1
	DD	$LN6@Print_MUL_@16
$LN6@Print_MUL_@16:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MUL_@16
$LN5@Print_MUL_@16:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MUL_PRvShiftSvshift@@YAIPADAAVNuance@@_N@Z ENDP	; Print_MUL_PRvShiftSvshift
_TEXT	ENDS
PUBLIC	?Print_MUL_PVectorShiftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_MUL_PVectorShiftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv82 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MUL_PVectorShiftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_MUL_PVectorShiftImmediate

; 246  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 247  :   char tempStr[512];
; 248  :   sprintf(tempStr,"mul_p v%lu, v%lu, >>#%s, v%lu",nuance.fields[FIELD_MUL_SRC1] >> 2,nuance.fields[FIELD_MUL_SRC2] >> 2,GetImmediateShift(nuance.fields[FIELD_MUL_INFO]),nuance.fields[FIELD_MUL_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?GetImmediateShift@@YAPADI@Z		; GetImmediateShift
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 2
	push	edx
	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	push	ecx
	push	OFFSET $SG4726
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 249  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_MUL_@17
	mov	DWORD PTR tv82[ebp], OFFSET $SG4727
	jmp	SHORT $LN4@Print_MUL_@17
$LN3@Print_MUL_@17:
	mov	DWORD PTR tv82[ebp], OFFSET $SG4728
$LN4@Print_MUL_@17:
	mov	ecx, DWORD PTR tv82[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4729
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 250  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 251  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MUL_@17
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Print_MUL_@17:
	DD	1
	DD	$LN6@Print_MUL_@17
$LN6@Print_MUL_@17:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MUL_@17
$LN5@Print_MUL_@17:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MUL_PVectorShiftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MUL_PVectorShiftImmediate
_TEXT	ENDS
PUBLIC	?Print_MUL_PVectorShiftSvshift@@YAIPADAAVNuance@@_N@Z ; Print_MUL_PVectorShiftSvshift
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv78 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MUL_PVectorShiftSvshift@@YAIPADAAVNuance@@_N@Z PROC ; Print_MUL_PVectorShiftSvshift

; 254  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 255  :   char tempStr[512];
; 256  :   sprintf(tempStr,"mul_p v%lu, v%lu, >>svshift, v%lu",nuance.fields[FIELD_MUL_SRC1] >> 2,nuance.fields[FIELD_MUL_SRC2] >> 2,nuance.fields[FIELD_MUL_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 2
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shr	edx, 2
	push	edx
	push	OFFSET $SG4736
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 257  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_MUL_@18
	mov	DWORD PTR tv78[ebp], OFFSET $SG4737
	jmp	SHORT $LN4@Print_MUL_@18
$LN3@Print_MUL_@18:
	mov	DWORD PTR tv78[ebp], OFFSET $SG4738
$LN4@Print_MUL_@18:
	mov	edx, DWORD PTR tv78[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4739
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 258  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 259  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MUL_@18
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Print_MUL_@18:
	DD	1
	DD	$LN6@Print_MUL_@18
$LN6@Print_MUL_@18:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MUL_@18
$LN5@Print_MUL_@18:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MUL_PVectorShiftSvshift@@YAIPADAAVNuance@@_N@Z ENDP ; Print_MUL_PVectorShiftSvshift
_TEXT	ENDS
PUBLIC	?Print_DOTPScalarShiftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_DOTPScalarShiftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv80 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_DOTPScalarShiftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_DOTPScalarShiftImmediate

; 262  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 263  :   char tempStr[512];
; 264  :   sprintf(tempStr,"dotp r%lu, v%lu, >>#%s, r%lu",nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_SRC2] >> 2,GetImmediateShift(nuance.fields[FIELD_MUL_INFO]),nuance.fields[FIELD_MUL_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?GetImmediateShift@@YAPADI@Z		; GetImmediateShift
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 2
	push	edx
	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG4746
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 265  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_DOTP
	mov	DWORD PTR tv80[ebp], OFFSET $SG4747
	jmp	SHORT $LN4@Print_DOTP
$LN3@Print_DOTP:
	mov	DWORD PTR tv80[ebp], OFFSET $SG4748
$LN4@Print_DOTP:
	mov	ecx, DWORD PTR tv80[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4749
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 266  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 267  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_DOTP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_DOTP:
	DD	1
	DD	$LN6@Print_DOTP
$LN6@Print_DOTP:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_DOTP
$LN5@Print_DOTP:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_DOTPScalarShiftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_DOTPScalarShiftImmediate
_TEXT	ENDS
PUBLIC	?Print_DOTPScalarShiftSvshift@@YAIPADAAVNuance@@_N@Z ; Print_DOTPScalarShiftSvshift
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv76 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_DOTPScalarShiftSvshift@@YAIPADAAVNuance@@_N@Z PROC ; Print_DOTPScalarShiftSvshift

; 270  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 271  :   char tempStr[512];
; 272  :   sprintf(tempStr,"dotp r%lu, v%lu, >>svshift, r%lu",nuance.fields[FIELD_MUL_SRC1],nuance.fields[FIELD_MUL_SRC2] >> 2,nuance.fields[FIELD_MUL_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 2
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4756
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 273  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_DOTP@2
	mov	DWORD PTR tv76[ebp], OFFSET $SG4757
	jmp	SHORT $LN4@Print_DOTP@2
$LN3@Print_DOTP@2:
	mov	DWORD PTR tv76[ebp], OFFSET $SG4758
$LN4@Print_DOTP@2:
	mov	edx, DWORD PTR tv76[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4759
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 274  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 275  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_DOTP@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_DOTP@2:
	DD	1
	DD	$LN6@Print_DOTP@2
$LN6@Print_DOTP@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_DOTP@2
$LN5@Print_DOTP@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_DOTPScalarShiftSvshift@@YAIPADAAVNuance@@_N@Z ENDP ; Print_DOTPScalarShiftSvshift
_TEXT	ENDS
PUBLIC	?Print_DOTPVectorShiftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_DOTPVectorShiftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv81 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_DOTPVectorShiftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_DOTPVectorShiftImmediate

; 278  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 279  :   char tempStr[512];
; 280  :   sprintf(tempStr,"dotp v%lu, v%lu, >>#%s, r%lu",nuance.fields[FIELD_MUL_SRC1] >> 2,nuance.fields[FIELD_MUL_SRC2] >> 2,GetImmediateShift(nuance.fields[FIELD_MUL_INFO]),nuance.fields[FIELD_MUL_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?GetImmediateShift@@YAPADI@Z		; GetImmediateShift
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shr	edx, 2
	push	edx
	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	push	ecx
	push	OFFSET $SG4766
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 281  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_DOTP@3
	mov	DWORD PTR tv81[ebp], OFFSET $SG4767
	jmp	SHORT $LN4@Print_DOTP@3
$LN3@Print_DOTP@3:
	mov	DWORD PTR tv81[ebp], OFFSET $SG4768
$LN4@Print_DOTP@3:
	mov	ecx, DWORD PTR tv81[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4769
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 282  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 283  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_DOTP@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Print_DOTP@3:
	DD	1
	DD	$LN6@Print_DOTP@3
$LN6@Print_DOTP@3:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_DOTP@3
$LN5@Print_DOTP@3:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_DOTPVectorShiftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_DOTPVectorShiftImmediate
_TEXT	ENDS
PUBLIC	?Print_DOTPVectorShiftSvshift@@YAIPADAAVNuance@@_N@Z ; Print_DOTPVectorShiftSvshift
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv77 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_DOTPVectorShiftSvshift@@YAIPADAAVNuance@@_N@Z PROC ; Print_DOTPVectorShiftSvshift

; 286  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 287  :   char tempStr[512];
; 288  :   sprintf(tempStr,"dotp v%lu, v%lu, >>svshift, r%lu",nuance.fields[FIELD_MUL_SRC1] >> 2,nuance.fields[FIELD_MUL_SRC2] >> 2,nuance.fields[FIELD_MUL_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 2
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shr	edx, 2
	push	edx
	push	OFFSET $SG4776
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 289  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_DOTP@4
	mov	DWORD PTR tv77[ebp], OFFSET $SG4777
	jmp	SHORT $LN4@Print_DOTP@4
$LN3@Print_DOTP@4:
	mov	DWORD PTR tv77[ebp], OFFSET $SG4778
$LN4@Print_DOTP@4:
	mov	edx, DWORD PTR tv77[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4779
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 290  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 291  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_DOTP@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Print_DOTP@4:
	DD	1
	DD	$LN6@Print_DOTP@4
$LN6@Print_DOTP@4:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_DOTP@4
$LN5@Print_DOTP@4:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_DOTPVectorShiftSvshift@@YAIPADAAVNuance@@_N@Z ENDP ; Print_DOTPVectorShiftSvshift
_TEXT	ENDS
END
