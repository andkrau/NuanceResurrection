; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	c:\NuanceExperimental\PrintALU.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG4437	DB	'abs r%lu', 00H
$SG4439	DB	00H
$SG4449	DB	00H
$SG4459	DB	00H
$SG4438	DB	0aH, 00H
$SG4469	DB	00H
$SG4479	DB	00H
$SG4440	DB	'%s%s', 00H
$SG4489	DB	00H
$SG4499	DB	00H
$SG4509	DB	00H
$SG4447	DB	'bits #%lu, >>r%lu, r%lu', 00H
$SG4448	DB	0aH, 00H
$SG4519	DB	00H
$SG4529	DB	00H
$SG4450	DB	'%s%s', 00H
$SG4539	DB	00H
$SG4549	DB	00H
$SG4559	DB	00H
$SG4457	DB	'bits #%lu, >>#%lu, r%lu', 00H
$SG4458	DB	0aH, 00H
$SG4569	DB	00H
$SG4579	DB	00H
$SG4460	DB	'%s%s', 00H
$SG4589	DB	00H
$SG4599	DB	00H
$SG4609	DB	00H
$SG4467	DB	'btst #%lu, r%lu', 00H
$SG4468	DB	0aH, 00H
$SG4619	DB	00H
$SG4629	DB	00H
$SG4470	DB	'%s%s', 00H
$SG4639	DB	00H
$SG4649	DB	00H
$SG4659	DB	00H
$SG4477	DB	'butt r%lu, r%lu, r%lu', 00H
$SG4669	DB	00H
$SG4679	DB	00H
$SG4478	DB	0aH, 00H
$SG4689	DB	00H
$SG4699	DB	00H
$SG4480	DB	'%s%s', 00H
$SG4709	DB	00H
$SG4719	DB	00H
$SG4729	DB	00H
$SG4487	DB	'copy r%lu, r%lu', 00H
$SG4488	DB	0aH, 00H
$SG4739	DB	00H
$SG4749	DB	00H
$SG4490	DB	'%s%s', 00H
$SG4759	DB	00H
$SG4769	DB	00H
$SG4779	DB	00H
$SG4497	DB	'msb r%lu, r%lu', 00H
$SG4789	DB	00H
$SG4498	DB	0aH, 00H
$SG4799	DB	00H
$SG4809	DB	00H
$SG4500	DB	'%s%s', 00H
$SG4819	DB	00H
$SG4829	DB	00H
$SG4839	DB	00H
$SG4507	DB	'sat #%lu, r%lu, r%lu', 00H
$SG4849	DB	00H
$SG4859	DB	00H
$SG4869	DB	00H
$SG4508	DB	0aH, 00H
$SG4879	DB	00H
$SG4889	DB	00H
$SG4510	DB	'%s%s', 00H
$SG4899	DB	00H
$SG4909	DB	00H
$SG4919	DB	00H
$SG4517	DB	'as >>r%lu, r%lu, r%lu', 00H
$SG4929	DB	00H
$SG4939	DB	00H
$SG4518	DB	0aH, 00H
$SG4949	DB	00H
$SG4959	DB	00H
$SG4520	DB	'%s%s', 00H
$SG4969	DB	00H
$SG4979	DB	00H
$SG4989	DB	00H
$SG4527	DB	'asl #%lu, r%lu, r%lu', 00H
$SG4999	DB	00H
$SG5009	DB	00H
$SG5019	DB	00H
$SG4528	DB	0aH, 00H
$SG5029	DB	00H
$SG5039	DB	00H
$SG4530	DB	'%s%s', 00H
$SG5049	DB	00H
$SG5059	DB	00H
$SG5069	DB	00H
$SG4537	DB	'asr #%lu, r%lu, r%lu', 00H
$SG5079	DB	00H
$SG5089	DB	00H
$SG5099	DB	00H
$SG4538	DB	0aH, 00H
$SG5109	DB	00H
$SG5119	DB	00H
$SG4540	DB	'%s%s', 00H
$SG5129	DB	00H
$SG5139	DB	00H
$SG5149	DB	00H
$SG4547	DB	'ls >>r%lu, r%lu, r%lu', 00H
$SG5159	DB	00H
$SG5169	DB	00H
$SG4548	DB	0aH, 00H
$SG5179	DB	00H
$SG5189	DB	00H
$SG4550	DB	'%s%s', 00H
	ORG $+3
$SG4557	DB	'lsr #%lu, r%lu, r%lu', 00H
	ORG $+3
$SG4558	DB	0aH, 00H
	ORG $+2
$SG4560	DB	'%s%s', 00H
	ORG $+3
$SG4567	DB	'rot <>r%lu, r%lu, r%lu', 00H
	ORG $+1
$SG4568	DB	0aH, 00H
	ORG $+2
$SG4570	DB	'%s%s', 00H
	ORG $+3
$SG4577	DB	'rot #-%lu, r%lu, r%lu', 00H
	ORG $+2
$SG4578	DB	0aH, 00H
	ORG $+2
$SG4580	DB	'%s%s', 00H
	ORG $+3
$SG4587	DB	'rot #%lu, r%lu, r%lu', 00H
	ORG $+3
$SG4588	DB	0aH, 00H
	ORG $+2
$SG4590	DB	'%s%s', 00H
	ORG $+3
$SG4597	DB	'add_p v%lu, v%lu, v%lu', 00H
	ORG $+1
$SG4598	DB	0aH, 00H
	ORG $+2
$SG4600	DB	'%s%s', 00H
	ORG $+3
$SG4607	DB	'sub_p v%lu, v%lu, v%lu', 00H
	ORG $+1
$SG4608	DB	0aH, 00H
	ORG $+2
$SG4610	DB	'%s%s', 00H
	ORG $+3
$SG4617	DB	'add_sv v%lu, v%lu, v%lu', 00H
$SG4618	DB	0aH, 00H
	ORG $+2
$SG4620	DB	'%s%s', 00H
	ORG $+3
$SG4627	DB	'sub_sv v%lu, v%lu, v%lu', 00H
$SG4628	DB	0aH, 00H
	ORG $+2
$SG4630	DB	'%s%s', 00H
	ORG $+3
$SG4637	DB	'add #$%8.8lX, r%lu, r%lu', 00H
	ORG $+3
$SG4638	DB	0aH, 00H
	ORG $+2
$SG4640	DB	'%s%s', 00H
	ORG $+3
$SG4647	DB	'add r%lu, r%lu, r%lu', 00H
	ORG $+3
$SG4648	DB	0aH, 00H
	ORG $+2
$SG4650	DB	'%s%s', 00H
	ORG $+3
$SG4657	DB	'add r%lu, >>#%lu, r%lu', 00H
	ORG $+1
$SG4658	DB	0aH, 00H
	ORG $+2
$SG4660	DB	'%s%s', 00H
	ORG $+3
$SG4667	DB	'add r%lu, >>#-%lu, r%lu', 00H
$SG4668	DB	0aH, 00H
	ORG $+2
$SG4670	DB	'%s%s', 00H
	ORG $+3
$SG4677	DB	'sub #$%8.8lX, r%lu, r%lu', 00H
	ORG $+3
$SG4678	DB	0aH, 00H
	ORG $+2
$SG4680	DB	'%s%s', 00H
	ORG $+3
$SG4687	DB	'sub r%lu, #$%8.8lX, r%lu', 00H
	ORG $+3
$SG4688	DB	0aH, 00H
	ORG $+2
$SG4690	DB	'%s%s', 00H
	ORG $+3
$SG4697	DB	'sub r%lu, r%lu, r%lu', 00H
	ORG $+3
$SG4698	DB	0aH, 00H
	ORG $+2
$SG4700	DB	'%s%s', 00H
	ORG $+3
$SG4707	DB	'sub r%lu, >>#%lu, r%lu', 00H
	ORG $+1
$SG4708	DB	0aH, 00H
	ORG $+2
$SG4710	DB	'%s%s', 00H
	ORG $+3
$SG4717	DB	'sub r%lu, >>#-%lu, r%lu', 00H
$SG4718	DB	0aH, 00H
	ORG $+2
$SG4720	DB	'%s%s', 00H
	ORG $+3
$SG4727	DB	'cmp #$%8.8lX, r%lu', 00H
	ORG $+1
$SG4728	DB	0aH, 00H
	ORG $+2
$SG4730	DB	'%s%s', 00H
	ORG $+3
$SG4737	DB	'cmp r%lu, #$%8.8lX', 00H
	ORG $+1
$SG4738	DB	0aH, 00H
	ORG $+2
$SG4740	DB	'%s%s', 00H
	ORG $+3
$SG4747	DB	'cmp r%lu, r%lu', 00H
	ORG $+1
$SG4748	DB	0aH, 00H
	ORG $+2
$SG4750	DB	'%s%s', 00H
	ORG $+3
$SG4757	DB	'cmp r%lu, >>#%lu, r%lu', 00H
	ORG $+1
$SG4758	DB	0aH, 00H
	ORG $+2
$SG4760	DB	'%s%s', 00H
	ORG $+3
$SG4767	DB	'cmp r%lu, >>#-%lu, r%lu', 00H
$SG4768	DB	0aH, 00H
	ORG $+2
$SG4770	DB	'%s%s', 00H
	ORG $+3
$SG4777	DB	'and #$%8.8lX, r%lu, r%lu', 00H
	ORG $+3
$SG4778	DB	0aH, 00H
	ORG $+2
$SG4780	DB	'%s%s', 00H
	ORG $+3
$SG4787	DB	'and r%lu, r%lu, r%lu', 00H
	ORG $+3
$SG4788	DB	0aH, 00H
	ORG $+2
$SG4790	DB	'%s%s', 00H
	ORG $+3
$SG4797	DB	'and #$%8.8lX, >>r%lu, r%lu', 00H
	ORG $+1
$SG4798	DB	0aH, 00H
	ORG $+2
$SG4800	DB	'%s%s', 00H
	ORG $+3
$SG4807	DB	'and r%lu, >>#%lu, r%lu', 00H
	ORG $+1
$SG4808	DB	0aH, 00H
	ORG $+2
$SG4810	DB	'%s%s', 00H
	ORG $+3
$SG4817	DB	'and r%lu, >>#-%lu, r%lu', 00H
$SG4818	DB	0aH, 00H
	ORG $+2
$SG4820	DB	'%s%s', 00H
	ORG $+3
$SG4827	DB	'and r%lu, >>r%lu, r%lu', 00H
	ORG $+1
$SG4828	DB	0aH, 00H
	ORG $+2
$SG4830	DB	'%s%s', 00H
	ORG $+3
$SG4837	DB	'and r%lu, <>r%lu, r%lu', 00H
	ORG $+1
$SG4838	DB	0aH, 00H
	ORG $+2
$SG4840	DB	'%s%s', 00H
	ORG $+3
$SG4847	DB	'ftst #$%8.8lX, r%lu', 00H
$SG4848	DB	0aH, 00H
	ORG $+2
$SG4850	DB	'%s%s', 00H
	ORG $+3
$SG4857	DB	'ftst r%lu, r%lu', 00H
$SG4858	DB	0aH, 00H
	ORG $+2
$SG4860	DB	'%s%s', 00H
	ORG $+3
$SG4867	DB	'ftst #$%8.8lX, >>r%lu, r%lu', 00H
$SG4868	DB	0aH, 00H
	ORG $+2
$SG4870	DB	'%s%s', 00H
	ORG $+3
$SG4877	DB	'ftst r%lu, >>#%lu, r%lu', 00H
$SG4878	DB	0aH, 00H
	ORG $+2
$SG4880	DB	'%s%s', 00H
	ORG $+3
$SG4887	DB	'ftst r%lu, >>#-%lu, r%lu', 00H
	ORG $+3
$SG4888	DB	0aH, 00H
	ORG $+2
$SG4890	DB	'%s%s', 00H
	ORG $+3
$SG4897	DB	'ftst r%lu, >>r%lu, r%lu', 00H
$SG4898	DB	0aH, 00H
	ORG $+2
$SG4900	DB	'%s%s', 00H
	ORG $+3
$SG4907	DB	'ftst r%lu, <>r%lu, r%lu', 00H
$SG4908	DB	0aH, 00H
	ORG $+2
$SG4910	DB	'%s%s', 00H
	ORG $+3
$SG4917	DB	'or #$%8.8lX, r%lu, r%lu', 00H
$SG4918	DB	0aH, 00H
	ORG $+2
$SG4920	DB	'%s%s', 00H
	ORG $+3
$SG4927	DB	'or r%lu, r%lu, r%lu', 00H
$SG4928	DB	0aH, 00H
	ORG $+2
$SG4930	DB	'%s%s', 00H
	ORG $+3
$SG4937	DB	'or #$%8.8lX, >>r%lu, r%lu', 00H
	ORG $+2
$SG4938	DB	0aH, 00H
	ORG $+2
$SG4940	DB	'%s%s', 00H
	ORG $+3
$SG4947	DB	'or r%lu, >>#%lu, r%lu', 00H
	ORG $+2
$SG4948	DB	0aH, 00H
	ORG $+2
$SG4950	DB	'%s%s', 00H
	ORG $+3
$SG4957	DB	'or r%lu, >>#-%lu, r%lu', 00H
	ORG $+1
$SG4958	DB	0aH, 00H
	ORG $+2
$SG4960	DB	'%s%s', 00H
	ORG $+3
$SG4967	DB	'or r%lu, >>r%lu, r%lu', 00H
	ORG $+2
$SG4968	DB	0aH, 00H
	ORG $+2
$SG4970	DB	'%s%s', 00H
	ORG $+3
$SG4977	DB	'or r%lu, <>r%lu, r%lu', 00H
	ORG $+2
$SG4978	DB	0aH, 00H
	ORG $+2
$SG4980	DB	'%s%s', 00H
	ORG $+3
$SG4987	DB	'eor #$%8.8lX, r%lu, r%lu', 00H
	ORG $+3
$SG4988	DB	0aH, 00H
	ORG $+2
$SG4990	DB	'%s%s', 00H
	ORG $+3
$SG4997	DB	'eor r%lu, r%lu, r%lu', 00H
	ORG $+3
$SG4998	DB	0aH, 00H
	ORG $+2
$SG5000	DB	'%s%s', 00H
	ORG $+3
$SG5007	DB	'eor #$%8.8lX, >>r%lu, r%lu', 00H
	ORG $+1
$SG5008	DB	0aH, 00H
	ORG $+2
$SG5010	DB	'%s%s', 00H
	ORG $+3
$SG5017	DB	'eor r%lu, >>#%lu, r%lu', 00H
	ORG $+1
$SG5018	DB	0aH, 00H
	ORG $+2
$SG5020	DB	'%s%s', 00H
	ORG $+3
$SG5027	DB	'eor r%lu, >>#-%lu, r%lu', 00H
$SG5028	DB	0aH, 00H
	ORG $+2
$SG5030	DB	'%s%s', 00H
	ORG $+3
$SG5037	DB	'eor r%lu, >>r%lu, r%lu', 00H
	ORG $+1
$SG5038	DB	0aH, 00H
	ORG $+2
$SG5040	DB	'%s%s', 00H
	ORG $+3
$SG5047	DB	'eor r%lu, <>r%lu, r%lu', 00H
	ORG $+1
$SG5048	DB	0aH, 00H
	ORG $+2
$SG5050	DB	'%s%s', 00H
	ORG $+3
$SG5057	DB	'addwc #$%8.8lX, r%lu, r%lu', 00H
	ORG $+1
$SG5058	DB	0aH, 00H
	ORG $+2
$SG5060	DB	'%s%s', 00H
	ORG $+3
$SG5067	DB	'addwc r%lu, r%lu, r%lu', 00H
	ORG $+1
$SG5068	DB	0aH, 00H
	ORG $+2
$SG5070	DB	'%s%s', 00H
	ORG $+3
$SG5077	DB	'addwc r%lu, >>#%lu, r%lu', 00H
	ORG $+3
$SG5078	DB	0aH, 00H
	ORG $+2
$SG5080	DB	'%s%s', 00H
	ORG $+3
$SG5087	DB	'addwc r%lu, >>#-%lu, r%lu', 00H
	ORG $+2
$SG5088	DB	0aH, 00H
	ORG $+2
$SG5090	DB	'%s%s', 00H
	ORG $+3
$SG5097	DB	'subwc #$%8.8lX, r%lu, r%lu', 00H
	ORG $+1
$SG5098	DB	0aH, 00H
	ORG $+2
$SG5100	DB	'%s%s', 00H
	ORG $+3
$SG5107	DB	'subwc r%lu, #$%8.8lX, r%lu', 00H
	ORG $+1
$SG5108	DB	0aH, 00H
	ORG $+2
$SG5110	DB	'%s%s', 00H
	ORG $+3
$SG5117	DB	'subwc r%lu, r%lu, r%lu', 00H
	ORG $+1
$SG5118	DB	0aH, 00H
	ORG $+2
$SG5120	DB	'%s%s', 00H
	ORG $+3
$SG5127	DB	'subwc r%lu, >>#%lu, r%lu', 00H
	ORG $+3
$SG5128	DB	0aH, 00H
	ORG $+2
$SG5130	DB	'%s%s', 00H
	ORG $+3
$SG5137	DB	'subwc r%lu, >>#-%lu, r%lu', 00H
	ORG $+2
$SG5138	DB	0aH, 00H
	ORG $+2
$SG5140	DB	'%s%s', 00H
	ORG $+3
$SG5147	DB	'cmpwc #$%8.8lX, r%lu', 00H
	ORG $+3
$SG5148	DB	0aH, 00H
	ORG $+2
$SG5150	DB	'%s%s', 00H
	ORG $+3
$SG5157	DB	'cmpwc r%lu, #$%8.8lX', 00H
	ORG $+3
$SG5158	DB	0aH, 00H
	ORG $+2
$SG5160	DB	'%s%s', 00H
	ORG $+3
$SG5167	DB	'cmpwc r%lu, r%lu', 00H
	ORG $+3
$SG5168	DB	0aH, 00H
	ORG $+2
$SG5170	DB	'%s%s', 00H
	ORG $+3
$SG5177	DB	'cmpwc r%lu, >>#%lu, r%lu', 00H
	ORG $+3
$SG5178	DB	0aH, 00H
	ORG $+2
$SG5180	DB	'%s%s', 00H
	ORG $+3
$SG5187	DB	'cmpwc r%lu, >>#-%lu, r%lu', 00H
	ORG $+2
$SG5188	DB	0aH, 00H
	ORG $+2
$SG5190	DB	'%s%s', 00H
CONST	ENDS
PUBLIC	?GetBtstSrc1@@YAII@Z				; GetBtstSrc1
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\nuanceexperimental\printalu.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_i$4426 = -4						; size = 4
_src1$ = 8						; size = 4
?GetBtstSrc1@@YAII@Z PROC				; GetBtstSrc1

; 7    : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 8    :   for(uint32 i = 0; i < 32; i++)

	mov	DWORD PTR _i$4426[ebp], 0
	jmp	SHORT $LN4@GetBtstSrc
$LN3@GetBtstSrc:
	mov	eax, DWORD PTR _i$4426[ebp]
	add	eax, 1
	mov	DWORD PTR _i$4426[ebp], eax
$LN4@GetBtstSrc:
	cmp	DWORD PTR _i$4426[ebp], 32		; 00000020H
	jae	SHORT $LN2@GetBtstSrc

; 9    :   {
; 10   :     if(src1 == (1UL << i))

	mov	edx, 1
	mov	ecx, DWORD PTR _i$4426[ebp]
	shl	edx, cl
	cmp	DWORD PTR _src1$[ebp], edx
	jne	SHORT $LN1@GetBtstSrc

; 11   :     {
; 12   :       return i;

	mov	eax, DWORD PTR _i$4426[ebp]
	jmp	SHORT $LN5@GetBtstSrc
$LN1@GetBtstSrc:

; 13   :     }
; 14   :   }

	jmp	SHORT $LN3@GetBtstSrc
$LN2@GetBtstSrc:

; 15   : 
; 16   :   return src1;

	mov	eax, DWORD PTR _src1$[ebp]
$LN5@GetBtstSrc:

; 17   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetBtstSrc1@@YAII@Z ENDP				; GetBtstSrc1
_TEXT	ENDS
PUBLIC	?Print_ABS@@YAIPADAAVNuance@@_N@Z		; Print_ABS
EXTRN	_strlen:PROC
EXTRN	_sprintf:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv71 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ABS@@YAIPADAAVNuance@@_N@Z PROC			; Print_ABS

; 20   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 21   :   char tempStr[512];
; 22   :   sprintf(tempStr,"abs r%lu",nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	push	OFFSET $SG4437
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 23   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	eax, BYTE PTR _bNewline$[ebp]
	test	eax, eax
	je	SHORT $LN3@Print_ABS
	mov	DWORD PTR tv71[ebp], OFFSET $SG4438
	jmp	SHORT $LN4@Print_ABS
$LN3@Print_ABS:
	mov	DWORD PTR tv71[ebp], OFFSET $SG4439
$LN4@Print_ABS:
	mov	ecx, DWORD PTR tv71[ebp]
	push	ecx
	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	push	OFFSET $SG4440
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 24   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	movzx	edx, BYTE PTR _bNewline$[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	eax, edx

; 25   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ABS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Print_ABS:
	DD	1
	DD	$LN6@Print_ABS
$LN6@Print_ABS:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ABS
$LN5@Print_ABS:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ABS@@YAIPADAAVNuance@@_N@Z ENDP			; Print_ABS
_TEXT	ENDS
PUBLIC	?Print_BITSScalar@@YAIPADAAVNuance@@_N@Z	; Print_BITSScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_BITSScalar@@YAIPADAAVNuance@@_N@Z PROC		; Print_BITSScalar

; 28   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 29   :   char tempStr[512];
; 30   :   sprintf(tempStr,"bits #%lu, >>r%lu, r%lu",nuance.fields[FIELD_ALU_INFO],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	OFFSET $SG4447
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 31   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_BITS
	mov	DWORD PTR tv75[ebp], OFFSET $SG4448
	jmp	SHORT $LN4@Print_BITS
$LN3@Print_BITS:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4449
$LN4@Print_BITS:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4450
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 32   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 33   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_BITS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_BITS:
	DD	1
	DD	$LN6@Print_BITS
$LN6@Print_BITS:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_BITS
$LN5@Print_BITS:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_BITSScalar@@YAIPADAAVNuance@@_N@Z ENDP		; Print_BITSScalar
_TEXT	ENDS
PUBLIC	?Print_BITSImmediate@@YAIPADAAVNuance@@_N@Z	; Print_BITSImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_BITSImmediate@@YAIPADAAVNuance@@_N@Z PROC	; Print_BITSImmediate

; 36   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 37   :   char tempStr[512];
; 38   :   sprintf(tempStr,"bits #%lu, >>#%lu, r%lu",nuance.fields[FIELD_ALU_INFO],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	OFFSET $SG4457
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 39   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_BITS@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG4458
	jmp	SHORT $LN4@Print_BITS@2
$LN3@Print_BITS@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4459
$LN4@Print_BITS@2:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4460
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 40   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 41   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_BITS@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_BITS@2:
	DD	1
	DD	$LN6@Print_BITS@2
$LN6@Print_BITS@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_BITS@2
$LN5@Print_BITS@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_BITSImmediate@@YAIPADAAVNuance@@_N@Z ENDP	; Print_BITSImmediate
_TEXT	ENDS
PUBLIC	?Print_BTST@@YAIPADAAVNuance@@_N@Z		; Print_BTST
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_BTST@@YAIPADAAVNuance@@_N@Z PROC			; Print_BTST

; 44   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 45   :   char tempStr[512];
; 46   :   sprintf(tempStr,"btst #%lu, r%lu",GetBtstSrc1(nuance.fields[FIELD_ALU_SRC1]),nuance.fields[FIELD_ALU_SRC2]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?GetBtstSrc1@@YAII@Z			; GetBtstSrc1
	add	esp, 4
	push	eax
	push	OFFSET $SG4467
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 47   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_BTST
	mov	DWORD PTR tv75[ebp], OFFSET $SG4468
	jmp	SHORT $LN4@Print_BTST
$LN3@Print_BTST:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4469
$LN4@Print_BTST:
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG4470
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 48   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 49   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_BTST
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Print_BTST:
	DD	1
	DD	$LN6@Print_BTST
$LN6@Print_BTST:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_BTST
$LN5@Print_BTST:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_BTST@@YAIPADAAVNuance@@_N@Z ENDP			; Print_BTST
_TEXT	ENDS
PUBLIC	?Print_BUTT@@YAIPADAAVNuance@@_N@Z		; Print_BUTT
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_BUTT@@YAIPADAAVNuance@@_N@Z PROC			; Print_BUTT

; 52   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 53   :   char tempStr[512];
; 54   :   sprintf(tempStr,"butt r%lu, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4477
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 55   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_BUTT
	mov	DWORD PTR tv75[ebp], OFFSET $SG4478
	jmp	SHORT $LN4@Print_BUTT
$LN3@Print_BUTT:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4479
$LN4@Print_BUTT:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4480
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 56   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 57   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_BUTT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_BUTT:
	DD	1
	DD	$LN6@Print_BUTT
$LN6@Print_BUTT:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_BUTT
$LN5@Print_BUTT:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_BUTT@@YAIPADAAVNuance@@_N@Z ENDP			; Print_BUTT
_TEXT	ENDS
PUBLIC	?Print_COPY@@YAIPADAAVNuance@@_N@Z		; Print_COPY
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_COPY@@YAIPADAAVNuance@@_N@Z PROC			; Print_COPY

; 60   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 61   :   char tempStr[512];
; 62   :   sprintf(tempStr,"copy r%lu, r%lu",nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	push	OFFSET $SG4487
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 63   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_COPY
	mov	DWORD PTR tv73[ebp], OFFSET $SG4488
	jmp	SHORT $LN4@Print_COPY
$LN3@Print_COPY:
	mov	DWORD PTR tv73[ebp], OFFSET $SG4489
$LN4@Print_COPY:
	mov	eax, DWORD PTR tv73[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG4490
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 64   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 65   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_COPY
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Print_COPY:
	DD	1
	DD	$LN6@Print_COPY
$LN6@Print_COPY:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_COPY
$LN5@Print_COPY:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_COPY@@YAIPADAAVNuance@@_N@Z ENDP			; Print_COPY
_TEXT	ENDS
PUBLIC	?Print_MSB@@YAIPADAAVNuance@@_N@Z		; Print_MSB
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_MSB@@YAIPADAAVNuance@@_N@Z PROC			; Print_MSB

; 68   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 69   :   char tempStr[512];
; 70   :   sprintf(tempStr,"msb r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET $SG4497
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 71   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_MSB
	mov	DWORD PTR tv73[ebp], OFFSET $SG4498
	jmp	SHORT $LN4@Print_MSB
$LN3@Print_MSB:
	mov	DWORD PTR tv73[ebp], OFFSET $SG4499
$LN4@Print_MSB:
	mov	eax, DWORD PTR tv73[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG4500
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 72   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 73   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_MSB
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Print_MSB:
	DD	1
	DD	$LN6@Print_MSB
$LN6@Print_MSB:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_MSB
$LN5@Print_MSB:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_MSB@@YAIPADAAVNuance@@_N@Z ENDP			; Print_MSB
_TEXT	ENDS
PUBLIC	?Print_SAT@@YAIPADAAVNuance@@_N@Z		; Print_SAT
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv76 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_SAT@@YAIPADAAVNuance@@_N@Z PROC			; Print_SAT

; 76   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 77   :   char tempStr[512];
; 78   :   sprintf(tempStr,"sat #%lu, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC2] + 1,nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	add	edx, 1
	push	edx
	push	OFFSET $SG4507
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 79   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_SAT
	mov	DWORD PTR tv76[ebp], OFFSET $SG4508
	jmp	SHORT $LN4@Print_SAT
$LN3@Print_SAT:
	mov	DWORD PTR tv76[ebp], OFFSET $SG4509
$LN4@Print_SAT:
	mov	edx, DWORD PTR tv76[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4510
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 80   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 81   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_SAT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Print_SAT:
	DD	1
	DD	$LN6@Print_SAT
$LN6@Print_SAT:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_SAT
$LN5@Print_SAT:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_SAT@@YAIPADAAVNuance@@_N@Z ENDP			; Print_SAT
_TEXT	ENDS
PUBLIC	?Print_AS@@YAIPADAAVNuance@@_N@Z		; Print_AS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_AS@@YAIPADAAVNuance@@_N@Z PROC			; Print_AS

; 84   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 85   :   char tempStr[512];
; 86   :   sprintf(tempStr,"as >>r%lu, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4517
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 87   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_AS
	mov	DWORD PTR tv75[ebp], OFFSET $SG4518
	jmp	SHORT $LN4@Print_AS
$LN3@Print_AS:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4519
$LN4@Print_AS:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4520
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 88   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 89   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_AS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_AS:
	DD	1
	DD	$LN6@Print_AS
$LN6@Print_AS:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_AS
$LN5@Print_AS:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_AS@@YAIPADAAVNuance@@_N@Z ENDP			; Print_AS
_TEXT	ENDS
PUBLIC	?Print_ASL@@YAIPADAAVNuance@@_N@Z		; Print_ASL
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ASL@@YAIPADAAVNuance@@_N@Z PROC			; Print_ASL

; 92   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 93   :   char tempStr[512];
; 94   :   sprintf(tempStr,"asl #%lu, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4527
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 95   :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ASL
	mov	DWORD PTR tv75[ebp], OFFSET $SG4528
	jmp	SHORT $LN4@Print_ASL
$LN3@Print_ASL:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4529
$LN4@Print_ASL:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4530
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 96   :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 97   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ASL
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ASL:
	DD	1
	DD	$LN6@Print_ASL
$LN6@Print_ASL:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ASL
$LN5@Print_ASL:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ASL@@YAIPADAAVNuance@@_N@Z ENDP			; Print_ASL
_TEXT	ENDS
PUBLIC	?Print_ASR@@YAIPADAAVNuance@@_N@Z		; Print_ASR
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ASR@@YAIPADAAVNuance@@_N@Z PROC			; Print_ASR

; 100  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 101  :   char tempStr[512];
; 102  :   sprintf(tempStr,"asr #%lu, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4537
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 103  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ASR
	mov	DWORD PTR tv75[ebp], OFFSET $SG4538
	jmp	SHORT $LN4@Print_ASR
$LN3@Print_ASR:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4539
$LN4@Print_ASR:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4540
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 104  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 105  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ASR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ASR:
	DD	1
	DD	$LN6@Print_ASR
$LN6@Print_ASR:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ASR
$LN5@Print_ASR:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ASR@@YAIPADAAVNuance@@_N@Z ENDP			; Print_ASR
_TEXT	ENDS
PUBLIC	?Print_LS@@YAIPADAAVNuance@@_N@Z		; Print_LS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_LS@@YAIPADAAVNuance@@_N@Z PROC			; Print_LS

; 108  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 109  :   char tempStr[512];
; 110  :   sprintf(tempStr,"ls >>r%lu, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4547
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 111  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_LS
	mov	DWORD PTR tv75[ebp], OFFSET $SG4548
	jmp	SHORT $LN4@Print_LS
$LN3@Print_LS:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4549
$LN4@Print_LS:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4550
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 112  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 113  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_LS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_LS:
	DD	1
	DD	$LN6@Print_LS
$LN6@Print_LS:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_LS
$LN5@Print_LS:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_LS@@YAIPADAAVNuance@@_N@Z ENDP			; Print_LS
_TEXT	ENDS
PUBLIC	?Print_LSR@@YAIPADAAVNuance@@_N@Z		; Print_LSR
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_LSR@@YAIPADAAVNuance@@_N@Z PROC			; Print_LSR

; 116  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 117  :   char tempStr[512];
; 118  :   sprintf(tempStr,"lsr #%lu, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4557
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 119  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_LSR@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG4558
	jmp	SHORT $LN4@Print_LSR@2
$LN3@Print_LSR@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4559
$LN4@Print_LSR@2:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4560
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 120  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 121  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_LSR@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_LSR@2:
	DD	1
	DD	$LN6@Print_LSR@2
$LN6@Print_LSR@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_LSR@2
$LN5@Print_LSR@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_LSR@@YAIPADAAVNuance@@_N@Z ENDP			; Print_LSR
_TEXT	ENDS
PUBLIC	?Print_ROT@@YAIPADAAVNuance@@_N@Z		; Print_ROT
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ROT@@YAIPADAAVNuance@@_N@Z PROC			; Print_ROT

; 124  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 125  :   char tempStr[512];
; 126  :   sprintf(tempStr,"rot <>r%lu, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4567
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 127  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ROT
	mov	DWORD PTR tv75[ebp], OFFSET $SG4568
	jmp	SHORT $LN4@Print_ROT
$LN3@Print_ROT:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4569
$LN4@Print_ROT:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4570
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 128  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 129  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ROT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ROT:
	DD	1
	DD	$LN6@Print_ROT
$LN6@Print_ROT:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ROT
$LN5@Print_ROT:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ROT@@YAIPADAAVNuance@@_N@Z ENDP			; Print_ROT
_TEXT	ENDS
PUBLIC	?Print_ROL@@YAIPADAAVNuance@@_N@Z		; Print_ROL
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ROL@@YAIPADAAVNuance@@_N@Z PROC			; Print_ROL

; 132  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 133  :   char tempStr[512];
; 134  :   sprintf(tempStr,"rot #-%lu, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4577
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 135  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ROL
	mov	DWORD PTR tv75[ebp], OFFSET $SG4578
	jmp	SHORT $LN4@Print_ROL
$LN3@Print_ROL:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4579
$LN4@Print_ROL:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4580
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 136  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 137  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ROL
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ROL:
	DD	1
	DD	$LN6@Print_ROL
$LN6@Print_ROL:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ROL
$LN5@Print_ROL:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ROL@@YAIPADAAVNuance@@_N@Z ENDP			; Print_ROL
_TEXT	ENDS
PUBLIC	?Print_ROR@@YAIPADAAVNuance@@_N@Z		; Print_ROR
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ROR@@YAIPADAAVNuance@@_N@Z PROC			; Print_ROR

; 140  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 141  :   char tempStr[512];
; 142  :   sprintf(tempStr,"rot #%lu, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4587
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 143  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ROR
	mov	DWORD PTR tv75[ebp], OFFSET $SG4588
	jmp	SHORT $LN4@Print_ROR
$LN3@Print_ROR:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4589
$LN4@Print_ROR:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4590
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 144  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 145  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ROR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ROR:
	DD	1
	DD	$LN6@Print_ROR
$LN6@Print_ROR:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ROR
$LN5@Print_ROR:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ROR@@YAIPADAAVNuance@@_N@Z ENDP			; Print_ROR
_TEXT	ENDS
PUBLIC	?Print_ADD_P@@YAIPADAAVNuance@@_N@Z		; Print_ADD_P
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv78 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ADD_P@@YAIPADAAVNuance@@_N@Z PROC		; Print_ADD_P

; 147  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 148  :   char tempStr[512];
; 149  :   sprintf(tempStr,"add_p v%lu, v%lu, v%lu",nuance.fields[FIELD_ALU_SRC1] >> 2,nuance.fields[FIELD_ALU_SRC2] >> 2,nuance.fields[FIELD_ALU_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 2
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shr	edx, 2
	push	edx
	push	OFFSET $SG4597
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 150  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ADD_
	mov	DWORD PTR tv78[ebp], OFFSET $SG4598
	jmp	SHORT $LN4@Print_ADD_
$LN3@Print_ADD_:
	mov	DWORD PTR tv78[ebp], OFFSET $SG4599
$LN4@Print_ADD_:
	mov	edx, DWORD PTR tv78[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4600
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 151  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 152  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ADD_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Print_ADD_:
	DD	1
	DD	$LN6@Print_ADD_
$LN6@Print_ADD_:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ADD_
$LN5@Print_ADD_:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ADD_P@@YAIPADAAVNuance@@_N@Z ENDP		; Print_ADD_P
_TEXT	ENDS
PUBLIC	?Print_SUB_P@@YAIPADAAVNuance@@_N@Z		; Print_SUB_P
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv78 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_SUB_P@@YAIPADAAVNuance@@_N@Z PROC		; Print_SUB_P

; 155  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 156  :   char tempStr[512];
; 157  :   sprintf(tempStr,"sub_p v%lu, v%lu, v%lu",nuance.fields[FIELD_ALU_SRC1] >> 2,nuance.fields[FIELD_ALU_SRC2] >> 2,nuance.fields[FIELD_ALU_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 2
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shr	edx, 2
	push	edx
	push	OFFSET $SG4607
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 158  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_SUB_
	mov	DWORD PTR tv78[ebp], OFFSET $SG4608
	jmp	SHORT $LN4@Print_SUB_
$LN3@Print_SUB_:
	mov	DWORD PTR tv78[ebp], OFFSET $SG4609
$LN4@Print_SUB_:
	mov	edx, DWORD PTR tv78[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4610
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 159  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 160  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_SUB_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Print_SUB_:
	DD	1
	DD	$LN6@Print_SUB_
$LN6@Print_SUB_:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_SUB_
$LN5@Print_SUB_:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_SUB_P@@YAIPADAAVNuance@@_N@Z ENDP		; Print_SUB_P
_TEXT	ENDS
PUBLIC	?Print_ADD_SV@@YAIPADAAVNuance@@_N@Z		; Print_ADD_SV
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv78 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ADD_SV@@YAIPADAAVNuance@@_N@Z PROC		; Print_ADD_SV

; 163  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 164  :   char tempStr[512];
; 165  :   sprintf(tempStr,"add_sv v%lu, v%lu, v%lu",nuance.fields[FIELD_ALU_SRC1] >> 2,nuance.fields[FIELD_ALU_SRC2] >> 2,nuance.fields[FIELD_ALU_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 2
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shr	edx, 2
	push	edx
	push	OFFSET $SG4617
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 166  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ADD_@2
	mov	DWORD PTR tv78[ebp], OFFSET $SG4618
	jmp	SHORT $LN4@Print_ADD_@2
$LN3@Print_ADD_@2:
	mov	DWORD PTR tv78[ebp], OFFSET $SG4619
$LN4@Print_ADD_@2:
	mov	edx, DWORD PTR tv78[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4620
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 167  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 168  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ADD_@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Print_ADD_@2:
	DD	1
	DD	$LN6@Print_ADD_@2
$LN6@Print_ADD_@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ADD_@2
$LN5@Print_ADD_@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ADD_SV@@YAIPADAAVNuance@@_N@Z ENDP		; Print_ADD_SV
_TEXT	ENDS
PUBLIC	?Print_SUB_SV@@YAIPADAAVNuance@@_N@Z		; Print_SUB_SV
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv78 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_SUB_SV@@YAIPADAAVNuance@@_N@Z PROC		; Print_SUB_SV

; 171  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 172  :   char tempStr[512];
; 173  :   sprintf(tempStr,"sub_sv v%lu, v%lu, v%lu",nuance.fields[FIELD_ALU_SRC1] >> 2,nuance.fields[FIELD_ALU_SRC2] >> 2,nuance.fields[FIELD_ALU_DEST] >> 2);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	shr	eax, 2
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shr	edx, 2
	push	edx
	push	OFFSET $SG4627
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 174  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_SUB_@2
	mov	DWORD PTR tv78[ebp], OFFSET $SG4628
	jmp	SHORT $LN4@Print_SUB_@2
$LN3@Print_SUB_@2:
	mov	DWORD PTR tv78[ebp], OFFSET $SG4629
$LN4@Print_SUB_@2:
	mov	edx, DWORD PTR tv78[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4630
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 175  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 176  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_SUB_@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Print_SUB_@2:
	DD	1
	DD	$LN6@Print_SUB_@2
$LN6@Print_SUB_@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_SUB_@2
$LN5@Print_SUB_@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_SUB_SV@@YAIPADAAVNuance@@_N@Z ENDP		; Print_SUB_SV
_TEXT	ENDS
PUBLIC	?Print_ADDImmediate@@YAIPADAAVNuance@@_N@Z	; Print_ADDImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ADDImmediate@@YAIPADAAVNuance@@_N@Z PROC		; Print_ADDImmediate

; 179  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 180  :   char tempStr[512];
; 181  :   sprintf(tempStr,"add #$%8.8lX, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4637
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 182  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ADDI
	mov	DWORD PTR tv75[ebp], OFFSET $SG4638
	jmp	SHORT $LN4@Print_ADDI
$LN3@Print_ADDI:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4639
$LN4@Print_ADDI:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4640
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 183  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 184  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ADDI
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ADDI:
	DD	1
	DD	$LN6@Print_ADDI
$LN6@Print_ADDI:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ADDI
$LN5@Print_ADDI:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ADDImmediate@@YAIPADAAVNuance@@_N@Z ENDP		; Print_ADDImmediate
_TEXT	ENDS
PUBLIC	?Print_ADDScalar@@YAIPADAAVNuance@@_N@Z		; Print_ADDScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ADDScalar@@YAIPADAAVNuance@@_N@Z PROC		; Print_ADDScalar

; 187  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 188  :   char tempStr[512];
; 189  :   sprintf(tempStr,"add r%lu, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4647
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 190  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ADDS
	mov	DWORD PTR tv75[ebp], OFFSET $SG4648
	jmp	SHORT $LN4@Print_ADDS
$LN3@Print_ADDS:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4649
$LN4@Print_ADDS:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4650
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 191  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 192  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ADDS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ADDS:
	DD	1
	DD	$LN6@Print_ADDS
$LN6@Print_ADDS:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ADDS
$LN5@Print_ADDS:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ADDScalar@@YAIPADAAVNuance@@_N@Z ENDP		; Print_ADDScalar
_TEXT	ENDS
PUBLIC	?Print_ADDScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ; Print_ADDScalarShiftRightImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ADDScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_ADDScalarShiftRightImmediate

; 195  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 196  :   char tempStr[512];
; 197  :   sprintf(tempStr,"add r%lu, >>#%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4657
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 198  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ADDS@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG4658
	jmp	SHORT $LN4@Print_ADDS@2
$LN3@Print_ADDS@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4659
$LN4@Print_ADDS@2:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4660
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 199  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 200  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ADDS@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ADDS@2:
	DD	1
	DD	$LN6@Print_ADDS@2
$LN6@Print_ADDS@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ADDS@2
$LN5@Print_ADDS@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ADDScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_ADDScalarShiftRightImmediate
_TEXT	ENDS
PUBLIC	?Print_ADDScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_ADDScalarShiftLeftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ADDScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_ADDScalarShiftLeftImmediate

; 203  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 204  :   char tempStr[512];
; 205  :   sprintf(tempStr,"add r%lu, >>#-%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4667
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 206  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ADDS@3
	mov	DWORD PTR tv75[ebp], OFFSET $SG4668
	jmp	SHORT $LN4@Print_ADDS@3
$LN3@Print_ADDS@3:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4669
$LN4@Print_ADDS@3:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4670
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 207  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 208  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ADDS@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ADDS@3:
	DD	1
	DD	$LN6@Print_ADDS@3
$LN6@Print_ADDS@3:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ADDS@3
$LN5@Print_ADDS@3:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ADDScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_ADDScalarShiftLeftImmediate
_TEXT	ENDS
PUBLIC	?Print_SUBImmediate@@YAIPADAAVNuance@@_N@Z	; Print_SUBImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_SUBImmediate@@YAIPADAAVNuance@@_N@Z PROC		; Print_SUBImmediate

; 211  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 212  :   char tempStr[512];
; 213  :   sprintf(tempStr,"sub #$%8.8lX, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4677
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 214  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_SUBI
	mov	DWORD PTR tv75[ebp], OFFSET $SG4678
	jmp	SHORT $LN4@Print_SUBI
$LN3@Print_SUBI:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4679
$LN4@Print_SUBI:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4680
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 215  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 216  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_SUBI
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_SUBI:
	DD	1
	DD	$LN6@Print_SUBI
$LN6@Print_SUBI:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_SUBI
$LN5@Print_SUBI:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_SUBImmediate@@YAIPADAAVNuance@@_N@Z ENDP		; Print_SUBImmediate
_TEXT	ENDS
PUBLIC	?Print_SUBImmediateReverse@@YAIPADAAVNuance@@_N@Z ; Print_SUBImmediateReverse
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_SUBImmediateReverse@@YAIPADAAVNuance@@_N@Z PROC	; Print_SUBImmediateReverse

; 218  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 219  :   char tempStr[512];
; 220  :   sprintf(tempStr,"sub r%lu, #$%8.8lX, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4687
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 221  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_SUBI@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG4688
	jmp	SHORT $LN4@Print_SUBI@2
$LN3@Print_SUBI@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4689
$LN4@Print_SUBI@2:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4690
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 222  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 223  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_SUBI@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_SUBI@2:
	DD	1
	DD	$LN6@Print_SUBI@2
$LN6@Print_SUBI@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_SUBI@2
$LN5@Print_SUBI@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_SUBImmediateReverse@@YAIPADAAVNuance@@_N@Z ENDP	; Print_SUBImmediateReverse
_TEXT	ENDS
PUBLIC	?Print_SUBScalar@@YAIPADAAVNuance@@_N@Z		; Print_SUBScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_SUBScalar@@YAIPADAAVNuance@@_N@Z PROC		; Print_SUBScalar

; 226  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 227  :   char tempStr[512];
; 228  :   sprintf(tempStr,"sub r%lu, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4697
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 229  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_SUBS
	mov	DWORD PTR tv75[ebp], OFFSET $SG4698
	jmp	SHORT $LN4@Print_SUBS
$LN3@Print_SUBS:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4699
$LN4@Print_SUBS:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4700
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 230  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 231  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_SUBS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_SUBS:
	DD	1
	DD	$LN6@Print_SUBS
$LN6@Print_SUBS:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_SUBS
$LN5@Print_SUBS:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_SUBScalar@@YAIPADAAVNuance@@_N@Z ENDP		; Print_SUBScalar
_TEXT	ENDS
PUBLIC	?Print_SUBScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ; Print_SUBScalarShiftRightImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_SUBScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_SUBScalarShiftRightImmediate

; 234  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 235  :   char tempStr[512];
; 236  :   sprintf(tempStr,"sub r%lu, >>#%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4707
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 237  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_SUBS@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG4708
	jmp	SHORT $LN4@Print_SUBS@2
$LN3@Print_SUBS@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4709
$LN4@Print_SUBS@2:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4710
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 238  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 239  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_SUBS@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_SUBS@2:
	DD	1
	DD	$LN6@Print_SUBS@2
$LN6@Print_SUBS@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_SUBS@2
$LN5@Print_SUBS@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_SUBScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_SUBScalarShiftRightImmediate
_TEXT	ENDS
PUBLIC	?Print_SUBScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_SUBScalarShiftLeftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_SUBScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_SUBScalarShiftLeftImmediate

; 242  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 243  :   char tempStr[512];
; 244  :   sprintf(tempStr,"sub r%lu, >>#-%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4717
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 245  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_SUBS@3
	mov	DWORD PTR tv75[ebp], OFFSET $SG4718
	jmp	SHORT $LN4@Print_SUBS@3
$LN3@Print_SUBS@3:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4719
$LN4@Print_SUBS@3:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4720
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 246  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 247  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_SUBS@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_SUBS@3:
	DD	1
	DD	$LN6@Print_SUBS@3
$LN6@Print_SUBS@3:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_SUBS@3
$LN5@Print_SUBS@3:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_SUBScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_SUBScalarShiftLeftImmediate
_TEXT	ENDS
PUBLIC	?Print_CMPImmediate@@YAIPADAAVNuance@@_N@Z	; Print_CMPImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_CMPImmediate@@YAIPADAAVNuance@@_N@Z PROC		; Print_CMPImmediate

; 250  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 251  :   char tempStr[512];
; 252  :   sprintf(tempStr,"cmp #$%8.8lX, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET $SG4727
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 253  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_CMPI
	mov	DWORD PTR tv73[ebp], OFFSET $SG4728
	jmp	SHORT $LN4@Print_CMPI
$LN3@Print_CMPI:
	mov	DWORD PTR tv73[ebp], OFFSET $SG4729
$LN4@Print_CMPI:
	mov	eax, DWORD PTR tv73[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG4730
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 254  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 255  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_CMPI
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Print_CMPI:
	DD	1
	DD	$LN6@Print_CMPI
$LN6@Print_CMPI:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_CMPI
$LN5@Print_CMPI:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_CMPImmediate@@YAIPADAAVNuance@@_N@Z ENDP		; Print_CMPImmediate
_TEXT	ENDS
PUBLIC	?Print_CMPImmediateReverse@@YAIPADAAVNuance@@_N@Z ; Print_CMPImmediateReverse
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_CMPImmediateReverse@@YAIPADAAVNuance@@_N@Z PROC	; Print_CMPImmediateReverse

; 258  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 259  :   char tempStr[512];
; 260  :   sprintf(tempStr,"cmp r%lu, #$%8.8lX",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET $SG4737
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 261  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_CMPI@2
	mov	DWORD PTR tv73[ebp], OFFSET $SG4738
	jmp	SHORT $LN4@Print_CMPI@2
$LN3@Print_CMPI@2:
	mov	DWORD PTR tv73[ebp], OFFSET $SG4739
$LN4@Print_CMPI@2:
	mov	eax, DWORD PTR tv73[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG4740
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 262  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 263  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_CMPI@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Print_CMPI@2:
	DD	1
	DD	$LN6@Print_CMPI@2
$LN6@Print_CMPI@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_CMPI@2
$LN5@Print_CMPI@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_CMPImmediateReverse@@YAIPADAAVNuance@@_N@Z ENDP	; Print_CMPImmediateReverse
_TEXT	ENDS
PUBLIC	?Print_CMPScalar@@YAIPADAAVNuance@@_N@Z		; Print_CMPScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_CMPScalar@@YAIPADAAVNuance@@_N@Z PROC		; Print_CMPScalar

; 266  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 267  :   char tempStr[512];
; 268  :   sprintf(tempStr,"cmp r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET $SG4747
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 269  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_CMPS
	mov	DWORD PTR tv73[ebp], OFFSET $SG4748
	jmp	SHORT $LN4@Print_CMPS
$LN3@Print_CMPS:
	mov	DWORD PTR tv73[ebp], OFFSET $SG4749
$LN4@Print_CMPS:
	mov	eax, DWORD PTR tv73[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG4750
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 270  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 271  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_CMPS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Print_CMPS:
	DD	1
	DD	$LN6@Print_CMPS
$LN6@Print_CMPS:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_CMPS
$LN5@Print_CMPS:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_CMPScalar@@YAIPADAAVNuance@@_N@Z ENDP		; Print_CMPScalar
_TEXT	ENDS
PUBLIC	?Print_CMPScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ; Print_CMPScalarShiftRightImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_CMPScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_CMPScalarShiftRightImmediate

; 274  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 275  :   char tempStr[512];
; 276  :   sprintf(tempStr,"cmp r%lu, >>#%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4757
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 277  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_CMPS@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG4758
	jmp	SHORT $LN4@Print_CMPS@2
$LN3@Print_CMPS@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4759
$LN4@Print_CMPS@2:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4760
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 278  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 279  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_CMPS@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_CMPS@2:
	DD	1
	DD	$LN6@Print_CMPS@2
$LN6@Print_CMPS@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_CMPS@2
$LN5@Print_CMPS@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_CMPScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_CMPScalarShiftRightImmediate
_TEXT	ENDS
PUBLIC	?Print_CMPScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_CMPScalarShiftLeftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_CMPScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_CMPScalarShiftLeftImmediate

; 282  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 283  :   char tempStr[512];
; 284  :   sprintf(tempStr,"cmp r%lu, >>#-%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4767
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 285  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_CMPS@3
	mov	DWORD PTR tv75[ebp], OFFSET $SG4768
	jmp	SHORT $LN4@Print_CMPS@3
$LN3@Print_CMPS@3:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4769
$LN4@Print_CMPS@3:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4770
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 286  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 287  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_CMPS@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_CMPS@3:
	DD	1
	DD	$LN6@Print_CMPS@3
$LN6@Print_CMPS@3:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_CMPS@3
$LN5@Print_CMPS@3:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_CMPScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_CMPScalarShiftLeftImmediate
_TEXT	ENDS
PUBLIC	?Print_ANDImmediate@@YAIPADAAVNuance@@_N@Z	; Print_ANDImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ANDImmediate@@YAIPADAAVNuance@@_N@Z PROC		; Print_ANDImmediate

; 290  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 291  :   char tempStr[512];
; 292  :   sprintf(tempStr,"and #$%8.8lX, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4777
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 293  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ANDI
	mov	DWORD PTR tv75[ebp], OFFSET $SG4778
	jmp	SHORT $LN4@Print_ANDI
$LN3@Print_ANDI:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4779
$LN4@Print_ANDI:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4780
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 294  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 295  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ANDI
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ANDI:
	DD	1
	DD	$LN6@Print_ANDI
$LN6@Print_ANDI:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ANDI
$LN5@Print_ANDI:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ANDImmediate@@YAIPADAAVNuance@@_N@Z ENDP		; Print_ANDImmediate
_TEXT	ENDS
PUBLIC	?Print_ANDScalar@@YAIPADAAVNuance@@_N@Z		; Print_ANDScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ANDScalar@@YAIPADAAVNuance@@_N@Z PROC		; Print_ANDScalar

; 298  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 299  :   char tempStr[512];
; 300  :   sprintf(tempStr,"and r%lu, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4787
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 301  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ANDS
	mov	DWORD PTR tv75[ebp], OFFSET $SG4788
	jmp	SHORT $LN4@Print_ANDS
$LN3@Print_ANDS:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4789
$LN4@Print_ANDS:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4790
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 302  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 303  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ANDS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ANDS:
	DD	1
	DD	$LN6@Print_ANDS
$LN6@Print_ANDS:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ANDS
$LN5@Print_ANDS:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ANDScalar@@YAIPADAAVNuance@@_N@Z ENDP		; Print_ANDScalar
_TEXT	ENDS
PUBLIC	?Print_ANDImmediateShiftScalar@@YAIPADAAVNuance@@_N@Z ; Print_ANDImmediateShiftScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ANDImmediateShiftScalar@@YAIPADAAVNuance@@_N@Z PROC ; Print_ANDImmediateShiftScalar

; 306  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 307  :   char tempStr[512];
; 308  :   sprintf(tempStr,"and #$%8.8lX, >>r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4797
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 309  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ANDI@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG4798
	jmp	SHORT $LN4@Print_ANDI@2
$LN3@Print_ANDI@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4799
$LN4@Print_ANDI@2:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4800
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 310  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 311  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ANDI@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ANDI@2:
	DD	1
	DD	$LN6@Print_ANDI@2
$LN6@Print_ANDI@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ANDI@2
$LN5@Print_ANDI@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ANDImmediateShiftScalar@@YAIPADAAVNuance@@_N@Z ENDP ; Print_ANDImmediateShiftScalar
_TEXT	ENDS
PUBLIC	?Print_ANDScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ; Print_ANDScalarShiftRightImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ANDScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_ANDScalarShiftRightImmediate

; 314  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 315  :   char tempStr[512];
; 316  :   sprintf(tempStr,"and r%lu, >>#%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4807
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 317  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ANDS@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG4808
	jmp	SHORT $LN4@Print_ANDS@2
$LN3@Print_ANDS@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4809
$LN4@Print_ANDS@2:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4810
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 318  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 319  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ANDS@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ANDS@2:
	DD	1
	DD	$LN6@Print_ANDS@2
$LN6@Print_ANDS@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ANDS@2
$LN5@Print_ANDS@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ANDScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_ANDScalarShiftRightImmediate
_TEXT	ENDS
PUBLIC	?Print_ANDScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_ANDScalarShiftLeftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ANDScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_ANDScalarShiftLeftImmediate

; 322  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 323  :   char tempStr[512];
; 324  :   sprintf(tempStr,"and r%lu, >>#-%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4817
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 325  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ANDS@3
	mov	DWORD PTR tv75[ebp], OFFSET $SG4818
	jmp	SHORT $LN4@Print_ANDS@3
$LN3@Print_ANDS@3:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4819
$LN4@Print_ANDS@3:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4820
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 326  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 327  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ANDS@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ANDS@3:
	DD	1
	DD	$LN6@Print_ANDS@3
$LN6@Print_ANDS@3:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ANDS@3
$LN5@Print_ANDS@3:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ANDScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_ANDScalarShiftLeftImmediate
_TEXT	ENDS
PUBLIC	?Print_ANDScalarShiftScalar@@YAIPADAAVNuance@@_N@Z ; Print_ANDScalarShiftScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ANDScalarShiftScalar@@YAIPADAAVNuance@@_N@Z PROC	; Print_ANDScalarShiftScalar

; 330  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 331  :   char tempStr[512];
; 332  :   sprintf(tempStr,"and r%lu, >>r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4827
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 333  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ANDS@4
	mov	DWORD PTR tv75[ebp], OFFSET $SG4828
	jmp	SHORT $LN4@Print_ANDS@4
$LN3@Print_ANDS@4:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4829
$LN4@Print_ANDS@4:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4830
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 334  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 335  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ANDS@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ANDS@4:
	DD	1
	DD	$LN6@Print_ANDS@4
$LN6@Print_ANDS@4:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ANDS@4
$LN5@Print_ANDS@4:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ANDScalarShiftScalar@@YAIPADAAVNuance@@_N@Z ENDP	; Print_ANDScalarShiftScalar
_TEXT	ENDS
PUBLIC	?Print_ANDScalarRotateScalar@@YAIPADAAVNuance@@_N@Z ; Print_ANDScalarRotateScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ANDScalarRotateScalar@@YAIPADAAVNuance@@_N@Z PROC ; Print_ANDScalarRotateScalar

; 338  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 339  :   char tempStr[512];
; 340  :   sprintf(tempStr,"and r%lu, <>r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4837
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 341  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ANDS@5
	mov	DWORD PTR tv75[ebp], OFFSET $SG4838
	jmp	SHORT $LN4@Print_ANDS@5
$LN3@Print_ANDS@5:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4839
$LN4@Print_ANDS@5:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4840
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 342  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 343  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ANDS@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ANDS@5:
	DD	1
	DD	$LN6@Print_ANDS@5
$LN6@Print_ANDS@5:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ANDS@5
$LN5@Print_ANDS@5:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ANDScalarRotateScalar@@YAIPADAAVNuance@@_N@Z ENDP ; Print_ANDScalarRotateScalar
_TEXT	ENDS
PUBLIC	?Print_FTSTImmediate@@YAIPADAAVNuance@@_N@Z	; Print_FTSTImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_FTSTImmediate@@YAIPADAAVNuance@@_N@Z PROC	; Print_FTSTImmediate

; 346  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 347  :   char tempStr[512];
; 348  :   sprintf(tempStr,"ftst #$%8.8lX, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET $SG4847
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 349  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_FTST
	mov	DWORD PTR tv73[ebp], OFFSET $SG4848
	jmp	SHORT $LN4@Print_FTST
$LN3@Print_FTST:
	mov	DWORD PTR tv73[ebp], OFFSET $SG4849
$LN4@Print_FTST:
	mov	eax, DWORD PTR tv73[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG4850
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 350  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 351  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_FTST
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Print_FTST:
	DD	1
	DD	$LN6@Print_FTST
$LN6@Print_FTST:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_FTST
$LN5@Print_FTST:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_FTSTImmediate@@YAIPADAAVNuance@@_N@Z ENDP	; Print_FTSTImmediate
_TEXT	ENDS
PUBLIC	?Print_FTSTScalar@@YAIPADAAVNuance@@_N@Z	; Print_FTSTScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_FTSTScalar@@YAIPADAAVNuance@@_N@Z PROC		; Print_FTSTScalar

; 354  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 355  :   char tempStr[512];
; 356  :   sprintf(tempStr,"ftst r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET $SG4857
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 357  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_FTST@2
	mov	DWORD PTR tv73[ebp], OFFSET $SG4858
	jmp	SHORT $LN4@Print_FTST@2
$LN3@Print_FTST@2:
	mov	DWORD PTR tv73[ebp], OFFSET $SG4859
$LN4@Print_FTST@2:
	mov	eax, DWORD PTR tv73[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG4860
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 358  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 359  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_FTST@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Print_FTST@2:
	DD	1
	DD	$LN6@Print_FTST@2
$LN6@Print_FTST@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_FTST@2
$LN5@Print_FTST@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_FTSTScalar@@YAIPADAAVNuance@@_N@Z ENDP		; Print_FTSTScalar
_TEXT	ENDS
PUBLIC	?Print_FTSTImmediateShiftScalar@@YAIPADAAVNuance@@_N@Z ; Print_FTSTImmediateShiftScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_FTSTImmediateShiftScalar@@YAIPADAAVNuance@@_N@Z PROC ; Print_FTSTImmediateShiftScalar

; 362  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 363  :   char tempStr[512];
; 364  :   sprintf(tempStr,"ftst #$%8.8lX, >>r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4867
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 365  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_FTST@3
	mov	DWORD PTR tv75[ebp], OFFSET $SG4868
	jmp	SHORT $LN4@Print_FTST@3
$LN3@Print_FTST@3:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4869
$LN4@Print_FTST@3:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4870
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 366  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 367  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_FTST@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_FTST@3:
	DD	1
	DD	$LN6@Print_FTST@3
$LN6@Print_FTST@3:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_FTST@3
$LN5@Print_FTST@3:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_FTSTImmediateShiftScalar@@YAIPADAAVNuance@@_N@Z ENDP ; Print_FTSTImmediateShiftScalar
_TEXT	ENDS
PUBLIC	?Print_FTSTScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ; Print_FTSTScalarShiftRightImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_FTSTScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_FTSTScalarShiftRightImmediate

; 370  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 371  :   char tempStr[512];
; 372  :   sprintf(tempStr,"ftst r%lu, >>#%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4877
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 373  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_FTST@4
	mov	DWORD PTR tv75[ebp], OFFSET $SG4878
	jmp	SHORT $LN4@Print_FTST@4
$LN3@Print_FTST@4:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4879
$LN4@Print_FTST@4:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4880
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 374  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 375  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_FTST@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_FTST@4:
	DD	1
	DD	$LN6@Print_FTST@4
$LN6@Print_FTST@4:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_FTST@4
$LN5@Print_FTST@4:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_FTSTScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_FTSTScalarShiftRightImmediate
_TEXT	ENDS
PUBLIC	?Print_FTSTScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_FTSTScalarShiftLeftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_FTSTScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_FTSTScalarShiftLeftImmediate

; 378  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 379  :   char tempStr[512];
; 380  :   sprintf(tempStr,"ftst r%lu, >>#-%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4887
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 381  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_FTST@5
	mov	DWORD PTR tv75[ebp], OFFSET $SG4888
	jmp	SHORT $LN4@Print_FTST@5
$LN3@Print_FTST@5:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4889
$LN4@Print_FTST@5:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4890
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 382  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 383  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_FTST@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_FTST@5:
	DD	1
	DD	$LN6@Print_FTST@5
$LN6@Print_FTST@5:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_FTST@5
$LN5@Print_FTST@5:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_FTSTScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_FTSTScalarShiftLeftImmediate
_TEXT	ENDS
PUBLIC	?Print_FTSTScalarShiftScalar@@YAIPADAAVNuance@@_N@Z ; Print_FTSTScalarShiftScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_FTSTScalarShiftScalar@@YAIPADAAVNuance@@_N@Z PROC ; Print_FTSTScalarShiftScalar

; 385  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 386  :   char tempStr[512];
; 387  :   sprintf(tempStr,"ftst r%lu, >>r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4897
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 388  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_FTST@6
	mov	DWORD PTR tv75[ebp], OFFSET $SG4898
	jmp	SHORT $LN4@Print_FTST@6
$LN3@Print_FTST@6:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4899
$LN4@Print_FTST@6:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4900
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 389  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 390  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_FTST@6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_FTST@6:
	DD	1
	DD	$LN6@Print_FTST@6
$LN6@Print_FTST@6:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_FTST@6
$LN5@Print_FTST@6:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_FTSTScalarShiftScalar@@YAIPADAAVNuance@@_N@Z ENDP ; Print_FTSTScalarShiftScalar
_TEXT	ENDS
PUBLIC	?Print_FTSTScalarRotateScalar@@YAIPADAAVNuance@@_N@Z ; Print_FTSTScalarRotateScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_FTSTScalarRotateScalar@@YAIPADAAVNuance@@_N@Z PROC ; Print_FTSTScalarRotateScalar

; 392  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 393  :   char tempStr[512];
; 394  :   sprintf(tempStr,"ftst r%lu, <>r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4907
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 395  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_FTST@7
	mov	DWORD PTR tv75[ebp], OFFSET $SG4908
	jmp	SHORT $LN4@Print_FTST@7
$LN3@Print_FTST@7:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4909
$LN4@Print_FTST@7:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4910
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 396  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 397  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_FTST@7
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_FTST@7:
	DD	1
	DD	$LN6@Print_FTST@7
$LN6@Print_FTST@7:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_FTST@7
$LN5@Print_FTST@7:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_FTSTScalarRotateScalar@@YAIPADAAVNuance@@_N@Z ENDP ; Print_FTSTScalarRotateScalar
_TEXT	ENDS
PUBLIC	?Print_ORImmediate@@YAIPADAAVNuance@@_N@Z	; Print_ORImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ORImmediate@@YAIPADAAVNuance@@_N@Z PROC		; Print_ORImmediate

; 400  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 401  :   char tempStr[512];
; 402  :   sprintf(tempStr,"or #$%8.8lX, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4917
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 403  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ORIm
	mov	DWORD PTR tv75[ebp], OFFSET $SG4918
	jmp	SHORT $LN4@Print_ORIm
$LN3@Print_ORIm:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4919
$LN4@Print_ORIm:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4920
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 404  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 405  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ORIm
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ORIm:
	DD	1
	DD	$LN6@Print_ORIm
$LN6@Print_ORIm:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ORIm
$LN5@Print_ORIm:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ORImmediate@@YAIPADAAVNuance@@_N@Z ENDP		; Print_ORImmediate
_TEXT	ENDS
PUBLIC	?Print_ORScalar@@YAIPADAAVNuance@@_N@Z		; Print_ORScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ORScalar@@YAIPADAAVNuance@@_N@Z PROC		; Print_ORScalar

; 408  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 409  :   char tempStr[512];
; 410  :   sprintf(tempStr,"or r%lu, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4927
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 411  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ORSc
	mov	DWORD PTR tv75[ebp], OFFSET $SG4928
	jmp	SHORT $LN4@Print_ORSc
$LN3@Print_ORSc:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4929
$LN4@Print_ORSc:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4930
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 412  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 413  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ORSc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ORSc:
	DD	1
	DD	$LN6@Print_ORSc
$LN6@Print_ORSc:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ORSc
$LN5@Print_ORSc:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ORScalar@@YAIPADAAVNuance@@_N@Z ENDP		; Print_ORScalar
_TEXT	ENDS
PUBLIC	?Print_ORImmediateShiftScalar@@YAIPADAAVNuance@@_N@Z ; Print_ORImmediateShiftScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ORImmediateShiftScalar@@YAIPADAAVNuance@@_N@Z PROC ; Print_ORImmediateShiftScalar

; 416  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 417  :   char tempStr[512];
; 418  :   sprintf(tempStr,"or #$%8.8lX, >>r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4937
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 419  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ORIm@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG4938
	jmp	SHORT $LN4@Print_ORIm@2
$LN3@Print_ORIm@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4939
$LN4@Print_ORIm@2:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4940
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 420  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 421  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ORIm@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ORIm@2:
	DD	1
	DD	$LN6@Print_ORIm@2
$LN6@Print_ORIm@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ORIm@2
$LN5@Print_ORIm@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ORImmediateShiftScalar@@YAIPADAAVNuance@@_N@Z ENDP ; Print_ORImmediateShiftScalar
_TEXT	ENDS
PUBLIC	?Print_ORScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ; Print_ORScalarShiftRightImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ORScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_ORScalarShiftRightImmediate

; 424  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 425  :   char tempStr[512];
; 426  :   sprintf(tempStr,"or r%lu, >>#%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4947
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 427  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ORSc@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG4948
	jmp	SHORT $LN4@Print_ORSc@2
$LN3@Print_ORSc@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4949
$LN4@Print_ORSc@2:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4950
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 428  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 429  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ORSc@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ORSc@2:
	DD	1
	DD	$LN6@Print_ORSc@2
$LN6@Print_ORSc@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ORSc@2
$LN5@Print_ORSc@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ORScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_ORScalarShiftRightImmediate
_TEXT	ENDS
PUBLIC	?Print_ORScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_ORScalarShiftLeftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ORScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_ORScalarShiftLeftImmediate

; 432  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 433  :   char tempStr[512];
; 434  :   sprintf(tempStr,"or r%lu, >>#-%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4957
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 435  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ORSc@3
	mov	DWORD PTR tv75[ebp], OFFSET $SG4958
	jmp	SHORT $LN4@Print_ORSc@3
$LN3@Print_ORSc@3:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4959
$LN4@Print_ORSc@3:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4960
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 436  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 437  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ORSc@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ORSc@3:
	DD	1
	DD	$LN6@Print_ORSc@3
$LN6@Print_ORSc@3:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ORSc@3
$LN5@Print_ORSc@3:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ORScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_ORScalarShiftLeftImmediate
_TEXT	ENDS
PUBLIC	?Print_ORScalarShiftScalar@@YAIPADAAVNuance@@_N@Z ; Print_ORScalarShiftScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ORScalarShiftScalar@@YAIPADAAVNuance@@_N@Z PROC	; Print_ORScalarShiftScalar

; 440  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 441  :   char tempStr[512];
; 442  :   sprintf(tempStr,"or r%lu, >>r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4967
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 443  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ORSc@4
	mov	DWORD PTR tv75[ebp], OFFSET $SG4968
	jmp	SHORT $LN4@Print_ORSc@4
$LN3@Print_ORSc@4:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4969
$LN4@Print_ORSc@4:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4970
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 444  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 445  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ORSc@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ORSc@4:
	DD	1
	DD	$LN6@Print_ORSc@4
$LN6@Print_ORSc@4:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ORSc@4
$LN5@Print_ORSc@4:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ORScalarShiftScalar@@YAIPADAAVNuance@@_N@Z ENDP	; Print_ORScalarShiftScalar
_TEXT	ENDS
PUBLIC	?Print_ORScalarRotateScalar@@YAIPADAAVNuance@@_N@Z ; Print_ORScalarRotateScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ORScalarRotateScalar@@YAIPADAAVNuance@@_N@Z PROC	; Print_ORScalarRotateScalar

; 448  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 449  :   char tempStr[512];
; 450  :   sprintf(tempStr,"or r%lu, <>r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4977
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 451  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ORSc@5
	mov	DWORD PTR tv75[ebp], OFFSET $SG4978
	jmp	SHORT $LN4@Print_ORSc@5
$LN3@Print_ORSc@5:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4979
$LN4@Print_ORSc@5:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4980
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 452  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 453  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ORSc@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ORSc@5:
	DD	1
	DD	$LN6@Print_ORSc@5
$LN6@Print_ORSc@5:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ORSc@5
$LN5@Print_ORSc@5:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ORScalarRotateScalar@@YAIPADAAVNuance@@_N@Z ENDP	; Print_ORScalarRotateScalar
_TEXT	ENDS
PUBLIC	?Print_EORImmediate@@YAIPADAAVNuance@@_N@Z	; Print_EORImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_EORImmediate@@YAIPADAAVNuance@@_N@Z PROC		; Print_EORImmediate

; 456  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 457  :   char tempStr[512];
; 458  :   sprintf(tempStr,"eor #$%8.8lX, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4987
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 459  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_EORI
	mov	DWORD PTR tv75[ebp], OFFSET $SG4988
	jmp	SHORT $LN4@Print_EORI
$LN3@Print_EORI:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4989
$LN4@Print_EORI:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG4990
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 460  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 461  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_EORI
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_EORI:
	DD	1
	DD	$LN6@Print_EORI
$LN6@Print_EORI:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_EORI
$LN5@Print_EORI:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_EORImmediate@@YAIPADAAVNuance@@_N@Z ENDP		; Print_EORImmediate
_TEXT	ENDS
PUBLIC	?Print_EORScalar@@YAIPADAAVNuance@@_N@Z		; Print_EORScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_EORScalar@@YAIPADAAVNuance@@_N@Z PROC		; Print_EORScalar

; 464  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 465  :   char tempStr[512];
; 466  :   sprintf(tempStr,"eor r%lu, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG4997
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 467  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_EORS
	mov	DWORD PTR tv75[ebp], OFFSET $SG4998
	jmp	SHORT $LN4@Print_EORS
$LN3@Print_EORS:
	mov	DWORD PTR tv75[ebp], OFFSET $SG4999
$LN4@Print_EORS:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG5000
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 468  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 469  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_EORS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_EORS:
	DD	1
	DD	$LN6@Print_EORS
$LN6@Print_EORS:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_EORS
$LN5@Print_EORS:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_EORScalar@@YAIPADAAVNuance@@_N@Z ENDP		; Print_EORScalar
_TEXT	ENDS
PUBLIC	?Print_EORImmediateShiftScalar@@YAIPADAAVNuance@@_N@Z ; Print_EORImmediateShiftScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_EORImmediateShiftScalar@@YAIPADAAVNuance@@_N@Z PROC ; Print_EORImmediateShiftScalar

; 472  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 473  :   char tempStr[512];
; 474  :   sprintf(tempStr,"eor #$%8.8lX, >>r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG5007
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 475  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_EORI@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG5008
	jmp	SHORT $LN4@Print_EORI@2
$LN3@Print_EORI@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG5009
$LN4@Print_EORI@2:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG5010
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 476  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 477  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_EORI@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_EORI@2:
	DD	1
	DD	$LN6@Print_EORI@2
$LN6@Print_EORI@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_EORI@2
$LN5@Print_EORI@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_EORImmediateShiftScalar@@YAIPADAAVNuance@@_N@Z ENDP ; Print_EORImmediateShiftScalar
_TEXT	ENDS
PUBLIC	?Print_EORScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ; Print_EORScalarShiftRightImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_EORScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_EORScalarShiftRightImmediate

; 480  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 481  :   char tempStr[512];
; 482  :   sprintf(tempStr,"eor r%lu, >>#%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG5017
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 483  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_EORS@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG5018
	jmp	SHORT $LN4@Print_EORS@2
$LN3@Print_EORS@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG5019
$LN4@Print_EORS@2:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG5020
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 484  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 485  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_EORS@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_EORS@2:
	DD	1
	DD	$LN6@Print_EORS@2
$LN6@Print_EORS@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_EORS@2
$LN5@Print_EORS@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_EORScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_EORScalarShiftRightImmediate
_TEXT	ENDS
PUBLIC	?Print_EORScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_EORScalarShiftLeftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_EORScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_EORScalarShiftLeftImmediate

; 488  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 489  :   char tempStr[512];
; 490  :   sprintf(tempStr,"eor r%lu, >>#-%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG5027
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 491  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_EORS@3
	mov	DWORD PTR tv75[ebp], OFFSET $SG5028
	jmp	SHORT $LN4@Print_EORS@3
$LN3@Print_EORS@3:
	mov	DWORD PTR tv75[ebp], OFFSET $SG5029
$LN4@Print_EORS@3:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG5030
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 492  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 493  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_EORS@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_EORS@3:
	DD	1
	DD	$LN6@Print_EORS@3
$LN6@Print_EORS@3:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_EORS@3
$LN5@Print_EORS@3:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_EORScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_EORScalarShiftLeftImmediate
_TEXT	ENDS
PUBLIC	?Print_EORScalarShiftScalar@@YAIPADAAVNuance@@_N@Z ; Print_EORScalarShiftScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_EORScalarShiftScalar@@YAIPADAAVNuance@@_N@Z PROC	; Print_EORScalarShiftScalar

; 496  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 497  :   char tempStr[512];
; 498  :   sprintf(tempStr,"eor r%lu, >>r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG5037
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 499  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_EORS@4
	mov	DWORD PTR tv75[ebp], OFFSET $SG5038
	jmp	SHORT $LN4@Print_EORS@4
$LN3@Print_EORS@4:
	mov	DWORD PTR tv75[ebp], OFFSET $SG5039
$LN4@Print_EORS@4:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG5040
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 500  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 501  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_EORS@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_EORS@4:
	DD	1
	DD	$LN6@Print_EORS@4
$LN6@Print_EORS@4:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_EORS@4
$LN5@Print_EORS@4:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_EORScalarShiftScalar@@YAIPADAAVNuance@@_N@Z ENDP	; Print_EORScalarShiftScalar
_TEXT	ENDS
PUBLIC	?Print_EORScalarRotateScalar@@YAIPADAAVNuance@@_N@Z ; Print_EORScalarRotateScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_EORScalarRotateScalar@@YAIPADAAVNuance@@_N@Z PROC ; Print_EORScalarRotateScalar

; 504  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 505  :   char tempStr[512];
; 506  :   sprintf(tempStr,"eor r%lu, <>r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG5047
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 507  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_EORS@5
	mov	DWORD PTR tv75[ebp], OFFSET $SG5048
	jmp	SHORT $LN4@Print_EORS@5
$LN3@Print_EORS@5:
	mov	DWORD PTR tv75[ebp], OFFSET $SG5049
$LN4@Print_EORS@5:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG5050
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 508  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 509  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_EORS@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_EORS@5:
	DD	1
	DD	$LN6@Print_EORS@5
$LN6@Print_EORS@5:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_EORS@5
$LN5@Print_EORS@5:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_EORScalarRotateScalar@@YAIPADAAVNuance@@_N@Z ENDP ; Print_EORScalarRotateScalar
_TEXT	ENDS
PUBLIC	?Print_ADDWCImmediate@@YAIPADAAVNuance@@_N@Z	; Print_ADDWCImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ADDWCImmediate@@YAIPADAAVNuance@@_N@Z PROC	; Print_ADDWCImmediate

; 512  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 513  :   char tempStr[512];
; 514  :   sprintf(tempStr,"addwc #$%8.8lX, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG5057
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 515  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ADDW
	mov	DWORD PTR tv75[ebp], OFFSET $SG5058
	jmp	SHORT $LN4@Print_ADDW
$LN3@Print_ADDW:
	mov	DWORD PTR tv75[ebp], OFFSET $SG5059
$LN4@Print_ADDW:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG5060
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 516  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 517  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ADDW
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ADDW:
	DD	1
	DD	$LN6@Print_ADDW
$LN6@Print_ADDW:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ADDW
$LN5@Print_ADDW:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ADDWCImmediate@@YAIPADAAVNuance@@_N@Z ENDP	; Print_ADDWCImmediate
_TEXT	ENDS
PUBLIC	?Print_ADDWCScalar@@YAIPADAAVNuance@@_N@Z	; Print_ADDWCScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ADDWCScalar@@YAIPADAAVNuance@@_N@Z PROC		; Print_ADDWCScalar

; 520  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 521  :   char tempStr[512];
; 522  :   sprintf(tempStr,"addwc r%lu, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG5067
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 523  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ADDW@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG5068
	jmp	SHORT $LN4@Print_ADDW@2
$LN3@Print_ADDW@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG5069
$LN4@Print_ADDW@2:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG5070
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 524  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 525  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ADDW@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ADDW@2:
	DD	1
	DD	$LN6@Print_ADDW@2
$LN6@Print_ADDW@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ADDW@2
$LN5@Print_ADDW@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ADDWCScalar@@YAIPADAAVNuance@@_N@Z ENDP		; Print_ADDWCScalar
_TEXT	ENDS
PUBLIC	?Print_ADDWCScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ; Print_ADDWCScalarShiftRightImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ADDWCScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_ADDWCScalarShiftRightImmediate

; 528  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 529  :   char tempStr[512];
; 530  :   sprintf(tempStr,"addwc r%lu, >>#%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG5077
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 531  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ADDW@3
	mov	DWORD PTR tv75[ebp], OFFSET $SG5078
	jmp	SHORT $LN4@Print_ADDW@3
$LN3@Print_ADDW@3:
	mov	DWORD PTR tv75[ebp], OFFSET $SG5079
$LN4@Print_ADDW@3:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG5080
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 532  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 533  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ADDW@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ADDW@3:
	DD	1
	DD	$LN6@Print_ADDW@3
$LN6@Print_ADDW@3:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ADDW@3
$LN5@Print_ADDW@3:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ADDWCScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_ADDWCScalarShiftRightImmediate
_TEXT	ENDS
PUBLIC	?Print_ADDWCScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_ADDWCScalarShiftLeftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_ADDWCScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_ADDWCScalarShiftLeftImmediate

; 536  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 537  :   char tempStr[512];
; 538  :   sprintf(tempStr,"addwc r%lu, >>#-%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG5087
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 539  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_ADDW@4
	mov	DWORD PTR tv75[ebp], OFFSET $SG5088
	jmp	SHORT $LN4@Print_ADDW@4
$LN3@Print_ADDW@4:
	mov	DWORD PTR tv75[ebp], OFFSET $SG5089
$LN4@Print_ADDW@4:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG5090
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 540  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 541  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_ADDW@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_ADDW@4:
	DD	1
	DD	$LN6@Print_ADDW@4
$LN6@Print_ADDW@4:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_ADDW@4
$LN5@Print_ADDW@4:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_ADDWCScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_ADDWCScalarShiftLeftImmediate
_TEXT	ENDS
PUBLIC	?Print_SUBWCImmediate@@YAIPADAAVNuance@@_N@Z	; Print_SUBWCImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_SUBWCImmediate@@YAIPADAAVNuance@@_N@Z PROC	; Print_SUBWCImmediate

; 544  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 545  :   char tempStr[512];
; 546  :   sprintf(tempStr,"subwc #$%8.8lX, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG5097
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 547  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_SUBW
	mov	DWORD PTR tv75[ebp], OFFSET $SG5098
	jmp	SHORT $LN4@Print_SUBW
$LN3@Print_SUBW:
	mov	DWORD PTR tv75[ebp], OFFSET $SG5099
$LN4@Print_SUBW:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG5100
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 548  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 549  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_SUBW
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_SUBW:
	DD	1
	DD	$LN6@Print_SUBW
$LN6@Print_SUBW:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_SUBW
$LN5@Print_SUBW:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_SUBWCImmediate@@YAIPADAAVNuance@@_N@Z ENDP	; Print_SUBWCImmediate
_TEXT	ENDS
PUBLIC	?Print_SUBWCImmediateReverse@@YAIPADAAVNuance@@_N@Z ; Print_SUBWCImmediateReverse
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_SUBWCImmediateReverse@@YAIPADAAVNuance@@_N@Z PROC ; Print_SUBWCImmediateReverse

; 552  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 553  :   char tempStr[512];
; 554  :   sprintf(tempStr,"subwc r%lu, #$%8.8lX, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG5107
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 555  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_SUBW@2
	mov	DWORD PTR tv75[ebp], OFFSET $SG5108
	jmp	SHORT $LN4@Print_SUBW@2
$LN3@Print_SUBW@2:
	mov	DWORD PTR tv75[ebp], OFFSET $SG5109
$LN4@Print_SUBW@2:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG5110
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 556  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 557  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_SUBW@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_SUBW@2:
	DD	1
	DD	$LN6@Print_SUBW@2
$LN6@Print_SUBW@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_SUBW@2
$LN5@Print_SUBW@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_SUBWCImmediateReverse@@YAIPADAAVNuance@@_N@Z ENDP ; Print_SUBWCImmediateReverse
_TEXT	ENDS
PUBLIC	?Print_SUBWCScalar@@YAIPADAAVNuance@@_N@Z	; Print_SUBWCScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_SUBWCScalar@@YAIPADAAVNuance@@_N@Z PROC		; Print_SUBWCScalar

; 560  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 561  :   char tempStr[512];
; 562  :   sprintf(tempStr,"subwc r%lu, r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG5117
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 563  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_SUBW@3
	mov	DWORD PTR tv75[ebp], OFFSET $SG5118
	jmp	SHORT $LN4@Print_SUBW@3
$LN3@Print_SUBW@3:
	mov	DWORD PTR tv75[ebp], OFFSET $SG5119
$LN4@Print_SUBW@3:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG5120
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 564  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 565  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_SUBW@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_SUBW@3:
	DD	1
	DD	$LN6@Print_SUBW@3
$LN6@Print_SUBW@3:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_SUBW@3
$LN5@Print_SUBW@3:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_SUBWCScalar@@YAIPADAAVNuance@@_N@Z ENDP		; Print_SUBWCScalar
_TEXT	ENDS
PUBLIC	?Print_SUBWCScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ; Print_SUBWCScalarShiftRightImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_SUBWCScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_SUBWCScalarShiftRightImmediate

; 568  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 569  :   char tempStr[512];
; 570  :   sprintf(tempStr,"subwc r%lu, >>#%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG5127
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 571  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_SUBW@4
	mov	DWORD PTR tv75[ebp], OFFSET $SG5128
	jmp	SHORT $LN4@Print_SUBW@4
$LN3@Print_SUBW@4:
	mov	DWORD PTR tv75[ebp], OFFSET $SG5129
$LN4@Print_SUBW@4:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG5130
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 572  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 573  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_SUBW@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_SUBW@4:
	DD	1
	DD	$LN6@Print_SUBW@4
$LN6@Print_SUBW@4:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_SUBW@4
$LN5@Print_SUBW@4:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_SUBWCScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_SUBWCScalarShiftRightImmediate
_TEXT	ENDS
PUBLIC	?Print_SUBWCScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_SUBWCScalarShiftLeftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_SUBWCScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_SUBWCScalarShiftLeftImmediate

; 576  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 577  :   char tempStr[512];
; 578  :   sprintf(tempStr,"subwc r%lu, >>#-%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG5137
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 579  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_SUBW@5
	mov	DWORD PTR tv75[ebp], OFFSET $SG5138
	jmp	SHORT $LN4@Print_SUBW@5
$LN3@Print_SUBW@5:
	mov	DWORD PTR tv75[ebp], OFFSET $SG5139
$LN4@Print_SUBW@5:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG5140
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 580  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 581  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_SUBW@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_SUBW@5:
	DD	1
	DD	$LN6@Print_SUBW@5
$LN6@Print_SUBW@5:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_SUBW@5
$LN5@Print_SUBW@5:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_SUBWCScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_SUBWCScalarShiftLeftImmediate
_TEXT	ENDS
PUBLIC	?Print_CMPWCImmediate@@YAIPADAAVNuance@@_N@Z	; Print_CMPWCImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_CMPWCImmediate@@YAIPADAAVNuance@@_N@Z PROC	; Print_CMPWCImmediate

; 584  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 585  :   char tempStr[512];
; 586  :   sprintf(tempStr,"cmpwc #$%8.8lX, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET $SG5147
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 587  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_CMPW
	mov	DWORD PTR tv73[ebp], OFFSET $SG5148
	jmp	SHORT $LN4@Print_CMPW
$LN3@Print_CMPW:
	mov	DWORD PTR tv73[ebp], OFFSET $SG5149
$LN4@Print_CMPW:
	mov	eax, DWORD PTR tv73[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG5150
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 588  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 589  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_CMPW
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Print_CMPW:
	DD	1
	DD	$LN6@Print_CMPW
$LN6@Print_CMPW:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_CMPW
$LN5@Print_CMPW:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_CMPWCImmediate@@YAIPADAAVNuance@@_N@Z ENDP	; Print_CMPWCImmediate
_TEXT	ENDS
PUBLIC	?Print_CMPWCImmediateReverse@@YAIPADAAVNuance@@_N@Z ; Print_CMPWCImmediateReverse
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_CMPWCImmediateReverse@@YAIPADAAVNuance@@_N@Z PROC ; Print_CMPWCImmediateReverse

; 592  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 593  :   char tempStr[512];
; 594  :   sprintf(tempStr,"cmpwc r%lu, #$%8.8lX",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET $SG5157
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 595  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_CMPW@2
	mov	DWORD PTR tv73[ebp], OFFSET $SG5158
	jmp	SHORT $LN4@Print_CMPW@2
$LN3@Print_CMPW@2:
	mov	DWORD PTR tv73[ebp], OFFSET $SG5159
$LN4@Print_CMPW@2:
	mov	eax, DWORD PTR tv73[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG5160
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 596  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 597  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_CMPW@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Print_CMPW@2:
	DD	1
	DD	$LN6@Print_CMPW@2
$LN6@Print_CMPW@2:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_CMPW@2
$LN5@Print_CMPW@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_CMPWCImmediateReverse@@YAIPADAAVNuance@@_N@Z ENDP ; Print_CMPWCImmediateReverse
_TEXT	ENDS
PUBLIC	?Print_CMPWCScalar@@YAIPADAAVNuance@@_N@Z	; Print_CMPWCScalar
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_CMPWCScalar@@YAIPADAAVNuance@@_N@Z PROC		; Print_CMPWCScalar

; 600  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 601  :   char tempStr[512];
; 602  :   sprintf(tempStr,"cmpwc r%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET $SG5167
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 603  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	edx, BYTE PTR _bNewline$[ebp]
	test	edx, edx
	je	SHORT $LN3@Print_CMPW@3
	mov	DWORD PTR tv73[ebp], OFFSET $SG5168
	jmp	SHORT $LN4@Print_CMPW@3
$LN3@Print_CMPW@3:
	mov	DWORD PTR tv73[ebp], OFFSET $SG5169
$LN4@Print_CMPW@3:
	mov	eax, DWORD PTR tv73[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempStr$[ebp]
	push	ecx
	push	OFFSET $SG5170
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 604  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 605  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_CMPW@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Print_CMPW@3:
	DD	1
	DD	$LN6@Print_CMPW@3
$LN6@Print_CMPW@3:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_CMPW@3
$LN5@Print_CMPW@3:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_CMPWCScalar@@YAIPADAAVNuance@@_N@Z ENDP		; Print_CMPWCScalar
_TEXT	ENDS
PUBLIC	?Print_CMPWCScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ; Print_CMPWCScalarShiftRightImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_CMPWCScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_CMPWCScalarShiftRightImmediate

; 608  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 609  :   char tempStr[512];
; 610  :   sprintf(tempStr,"cmpwc r%lu, >>#%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG5177
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 611  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_CMPW@4
	mov	DWORD PTR tv75[ebp], OFFSET $SG5178
	jmp	SHORT $LN4@Print_CMPW@4
$LN3@Print_CMPW@4:
	mov	DWORD PTR tv75[ebp], OFFSET $SG5179
$LN4@Print_CMPW@4:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG5180
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 612  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 613  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_CMPW@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_CMPW@4:
	DD	1
	DD	$LN6@Print_CMPW@4
$LN6@Print_CMPW@4:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_CMPW@4
$LN5@Print_CMPW@4:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_CMPWCScalarShiftRightImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_CMPWCScalarShiftRightImmediate
_TEXT	ENDS
PUBLIC	?Print_CMPWCScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ; Print_CMPWCScalarShiftLeftImmediate
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -524						; size = 4
_tempStr$ = -516					; size = 512
_buffer$ = 8						; size = 4
_nuance$ = 12						; size = 4
_bNewline$ = 16						; size = 1
?Print_CMPWCScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z PROC ; Print_CMPWCScalarShiftLeftImmediate

; 616  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 617  :   char tempStr[512];
; 618  :   sprintf(tempStr,"cmpwc r%lu, >>#-%lu, r%lu",nuance.fields[FIELD_ALU_SRC1],nuance.fields[FIELD_ALU_SRC2],nuance.fields[FIELD_ALU_DEST]);

	mov	eax, DWORD PTR _nuance$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _nuance$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _nuance$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET $SG5187
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 619  :   sprintf(buffer,"%s%s",tempStr, bNewline ? "\n" : "");

	movzx	ecx, BYTE PTR _bNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Print_CMPW@5
	mov	DWORD PTR tv75[ebp], OFFSET $SG5188
	jmp	SHORT $LN4@Print_CMPW@5
$LN3@Print_CMPW@5:
	mov	DWORD PTR tv75[ebp], OFFSET $SG5189
$LN4@Print_CMPW@5:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	lea	eax, DWORD PTR _tempStr$[ebp]
	push	eax
	push	OFFSET $SG5190
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 620  :   return strlen(tempStr) + (bNewline ? 1 : 0);

	lea	edx, DWORD PTR _tempStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	movzx	ecx, BYTE PTR _bNewline$[ebp]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	eax, ecx

; 621  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Print_CMPW@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Print_CMPW@5:
	DD	1
	DD	$LN6@Print_CMPW@5
$LN6@Print_CMPW@5:
	DD	-516					; fffffdfcH
	DD	512					; 00000200H
	DD	$LN5@Print_CMPW@5
$LN5@Print_CMPW@5:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?Print_CMPWCScalarShiftLeftImmediate@@YAIPADAAVNuance@@_N@Z ENDP ; Print_CMPWCScalarShiftLeftImmediate
_TEXT	ENDS
END
