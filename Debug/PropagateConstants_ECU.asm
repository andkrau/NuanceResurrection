; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	c:\NuanceExperimental\PropagateConstants_ECU.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?ClearInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::ClearInstructionFlags
PUBLIC	?ClearAllScalarOutputDependencies@SuperBlockConstants@@QAEXXZ ; SuperBlockConstants::ClearAllScalarOutputDependencies
PUBLIC	?ClearAllScalarInputDependencies@SuperBlockConstants@@QAEXXZ ; SuperBlockConstants::ClearAllScalarInputDependencies
PUBLIC	?ClearAllMiscOutputDependencies@SuperBlockConstants@@QAEXXZ ; SuperBlockConstants::ClearAllMiscOutputDependencies
PUBLIC	?ClearAllMiscInputDependencies@SuperBlockConstants@@QAEXXZ ; SuperBlockConstants::ClearAllMiscInputDependencies
PUBLIC	?PropagateConstants_ECU_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_ECU_NOP
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\nuanceexperimental\propagateconstants_ecu.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_constants$ = 8						; size = 4
?PropagateConstants_ECU_NOP@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_ECU_NOP

; 11   : {

	push	ebp
	mov	ebp, esp

; 12   :   constants.ClearAllMiscInputDependencies();

	mov	ecx, DWORD PTR _constants$[ebp]
	call	?ClearAllMiscInputDependencies@SuperBlockConstants@@QAEXXZ ; SuperBlockConstants::ClearAllMiscInputDependencies

; 13   :   constants.ClearAllMiscOutputDependencies();

	mov	ecx, DWORD PTR _constants$[ebp]
	call	?ClearAllMiscOutputDependencies@SuperBlockConstants@@QAEXXZ ; SuperBlockConstants::ClearAllMiscOutputDependencies

; 14   :   constants.ClearAllScalarInputDependencies();

	mov	ecx, DWORD PTR _constants$[ebp]
	call	?ClearAllScalarInputDependencies@SuperBlockConstants@@QAEXXZ ; SuperBlockConstants::ClearAllScalarInputDependencies

; 15   :   constants.ClearAllScalarOutputDependencies();

	mov	ecx, DWORD PTR _constants$[ebp]
	call	?ClearAllScalarOutputDependencies@SuperBlockConstants@@QAEXXZ ; SuperBlockConstants::ClearAllScalarOutputDependencies

; 16   : 
; 17   :   constants.status.status = PROPAGATE_CONSTANTS_STATUS_ECU_NOP;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+12], 5

; 18   :   constants.ClearInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?ClearInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::ClearInstructionFlags

; 19   : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?PropagateConstants_ECU_NOP@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_ECU_NOP
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\superblockconstants.h
_TEXT	ENDS
;	COMDAT ?ClearInstructionFlags@SuperBlockConstants@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mask$ = 8						; size = 4
?ClearInstructionFlags@SuperBlockConstants@@QAEXI@Z PROC ; SuperBlockConstants::ClearInstructionFlags, COMDAT
; _this$ = ecx

; 77   :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 78   :     pCurrentInstructionEntry->flags &= (~mask);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _mask$[ebp]
	not	edx
	and	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+28], edx

; 79   :   }

	mov	esp, ebp
	pop	ebp
	ret	4
?ClearInstructionFlags@SuperBlockConstants@@QAEXI@Z ENDP ; SuperBlockConstants::ClearInstructionFlags
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ClearAllScalarOutputDependencies@SuperBlockConstants@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClearAllScalarOutputDependencies@SuperBlockConstants@@QAEXXZ PROC ; SuperBlockConstants::ClearAllScalarOutputDependencies, COMDAT
; _this$ = ecx

; 85   :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 86   :     pCurrentInstructionEntry->scalarOutputDependencies = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+40], 0

; 87   :   }

	mov	esp, ebp
	pop	ebp
	ret	0
?ClearAllScalarOutputDependencies@SuperBlockConstants@@QAEXXZ ENDP ; SuperBlockConstants::ClearAllScalarOutputDependencies
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ClearAllScalarInputDependencies@SuperBlockConstants@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClearAllScalarInputDependencies@SuperBlockConstants@@QAEXXZ PROC ; SuperBlockConstants::ClearAllScalarInputDependencies, COMDAT
; _this$ = ecx

; 89   :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 90   :     pCurrentInstructionEntry->scalarInputDependencies = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+32], 0

; 91   :   }

	mov	esp, ebp
	pop	ebp
	ret	0
?ClearAllScalarInputDependencies@SuperBlockConstants@@QAEXXZ ENDP ; SuperBlockConstants::ClearAllScalarInputDependencies
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ClearAllMiscOutputDependencies@SuperBlockConstants@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClearAllMiscOutputDependencies@SuperBlockConstants@@QAEXXZ PROC ; SuperBlockConstants::ClearAllMiscOutputDependencies, COMDAT
; _this$ = ecx

; 109  :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 110  :     pCurrentInstructionEntry->miscOutputDependencies = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+44], 0

; 111  :   }

	mov	esp, ebp
	pop	ebp
	ret	0
?ClearAllMiscOutputDependencies@SuperBlockConstants@@QAEXXZ ENDP ; SuperBlockConstants::ClearAllMiscOutputDependencies
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ClearAllMiscInputDependencies@SuperBlockConstants@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClearAllMiscInputDependencies@SuperBlockConstants@@QAEXXZ PROC ; SuperBlockConstants::ClearAllMiscInputDependencies, COMDAT
; _this$ = ecx

; 113  :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 114  :     pCurrentInstructionEntry->miscInputDependencies = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+36], 0

; 115  :   }

	mov	esp, ebp
	pop	ebp
	ret	0
?ClearAllMiscInputDependencies@SuperBlockConstants@@QAEXXZ ENDP ; SuperBlockConstants::ClearAllMiscInputDependencies
_TEXT	ENDS
PUBLIC	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags
PUBLIC	?PropagateConstants_Halt@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_Halt
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\propagateconstants_ecu.cpp
_TEXT	SEGMENT
_constants$ = 8						; size = 4
?PropagateConstants_Halt@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_Halt

; 22   : {

	push	ebp
	mov	ebp, esp

; 23   :   constants.status.status = PROPAGATE_CONSTANTS_STATUS_HALT;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+12], 6

; 24   :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 25   : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?PropagateConstants_Halt@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_Halt
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\superblockconstants.h
_TEXT	ENDS
;	COMDAT ?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mask$ = 8						; size = 4
?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z PROC	; SuperBlockConstants::SetInstructionFlags, COMDAT
; _this$ = ecx

; 81   :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 82   :     pCurrentInstructionEntry->flags |= mask;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+28]
	or	edx, DWORD PTR _mask$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+28], edx

; 83   :   }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ENDP	; SuperBlockConstants::SetInstructionFlags
_TEXT	ENDS
PUBLIC	?PropagateConstants_BRAAlways@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_BRAAlways
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\propagateconstants_ecu.cpp
_TEXT	SEGMENT
_constants$ = 8						; size = 4
?PropagateConstants_BRAAlways@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_BRAAlways

; 28   : {

	push	ebp
	mov	ebp, esp

; 29   :   constants.status.status = PROPAGATE_CONSTANTS_STATUS_BRANCH_ALWAYS_DIRECT;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+12], 7

; 30   :   constants.status.info[0] = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+16], ecx

; 31   :   //number of delay slots to execute
; 32   :   constants.status.info[1] = 2;

	mov	edx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [edx+20], 2

; 33   :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 34   : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?PropagateConstants_BRAAlways@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_BRAAlways
_TEXT	ENDS
PUBLIC	?PropagateConstants_BRAAlways_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_BRAAlways_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_constants$ = 8						; size = 4
?PropagateConstants_BRAAlways_NOP@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_BRAAlways_NOP

; 37   : {

	push	ebp
	mov	ebp, esp

; 38   :   constants.status.status = PROPAGATE_CONSTANTS_STATUS_BRANCH_ALWAYS_DIRECT;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+12], 7

; 39   :   constants.status.info[0] = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+16], ecx

; 40   :   //number of delay slots to execute
; 41   :   constants.status.info[1] = 0;

	mov	edx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [edx+20], 0

; 42   :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 43   : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?PropagateConstants_BRAAlways_NOP@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_BRAAlways_NOP
_TEXT	ENDS
PUBLIC	?PropagateConstants_BRAConditional@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_BRAConditional
EXTRN	?EvaluateBranchCondition@SuperBlockConstants@@QAE_NIPA_N@Z:PROC ; SuperBlockConstants::EvaluateBranchCondition
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_branchResult$ = -5					; size = 1
_constants$ = 8						; size = 4
?PropagateConstants_BRAConditional@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_BRAConditional

; 46   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 47   :   bool branchResult;
; 48   : 
; 49   :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 50   : 
; 51   :   if(!ALLOW_PROPAGATE_ECU)

	xor	eax, eax
	je	SHORT $LN5@PropagateC

; 52   :   {
; 53   :     return;

	jmp	SHORT $LN6@PropagateC
$LN5@PropagateC:

; 54   :   }
; 55   : 
; 56   :   if(constants.EvaluateBranchCondition(constants.nuance->fields[FIELD_ECU_CONDITION], &branchResult))

	lea	ecx, DWORD PTR _branchResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?EvaluateBranchCondition@SuperBlockConstants@@QAE_NIPA_N@Z ; SuperBlockConstants::EvaluateBranchCondition
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@PropagateC

; 57   :   {
; 58   :     if(branchResult)

	movzx	eax, BYTE PTR _branchResult$[ebp]
	test	eax, eax
	je	SHORT $LN3@PropagateC

; 59   :     {
; 60   :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_BRAAlways;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 2

; 61   :       PropagateConstants_BRAAlways(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_BRAAlways@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_BRAAlways
	add	esp, 4

; 62   :     }
; 63   :     else

	jmp	SHORT $LN2@PropagateC
$LN3@PropagateC:

; 64   :     {
; 65   :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_ECU_NOP;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 0

; 66   :       PropagateConstants_ECU_NOP(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_ECU_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_ECU_NOP
	add	esp, 4
$LN2@PropagateC:

; 67   :     }
; 68   :   }
; 69   :   else

	jmp	SHORT $LN6@PropagateC
$LN4@PropagateC:

; 70   :   {
; 71   :     constants.status.status = PROPAGATE_CONSTANTS_STATUS_BRANCH_CONDITIONAL_DIRECT;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+12], 8

; 72   :     //number of delay slots to execute
; 73   :     constants.status.info[0] = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+16], edx

; 74   :     constants.status.info[1] = 2;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+20], 2
$LN6@PropagateC:

; 75   :   }
; 76   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@PropagateC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@PropagateC:
	DD	1
	DD	$LN9@PropagateC
$LN9@PropagateC:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN8@PropagateC
$LN8@PropagateC:
	DB	98					; 00000062H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?PropagateConstants_BRAConditional@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_BRAConditional
_TEXT	ENDS
PUBLIC	?PropagateConstants_BRAConditional_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_BRAConditional_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_branchResult$ = -5					; size = 1
_constants$ = 8						; size = 4
?PropagateConstants_BRAConditional_NOP@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_BRAConditional_NOP

; 79   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 80   :   bool branchResult;
; 81   : 
; 82   :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 83   : 
; 84   :   if(!ALLOW_PROPAGATE_ECU)

	xor	eax, eax
	je	SHORT $LN5@PropagateC@2

; 85   :   {
; 86   :     return;

	jmp	SHORT $LN6@PropagateC@2
$LN5@PropagateC@2:

; 87   :   }
; 88   : 
; 89   :   if(constants.EvaluateBranchCondition(constants.nuance->fields[FIELD_ECU_CONDITION], &branchResult))

	lea	ecx, DWORD PTR _branchResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?EvaluateBranchCondition@SuperBlockConstants@@QAE_NIPA_N@Z ; SuperBlockConstants::EvaluateBranchCondition
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@PropagateC@2

; 90   :   {
; 91   :     if(branchResult)

	movzx	eax, BYTE PTR _branchResult$[ebp]
	test	eax, eax
	je	SHORT $LN3@PropagateC@2

; 92   :     {
; 93   :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_BRAAlways_NOP;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 3

; 94   :       PropagateConstants_BRAAlways_NOP(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_BRAAlways_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_BRAAlways_NOP
	add	esp, 4

; 95   :     }
; 96   :     else

	jmp	SHORT $LN2@PropagateC@2
$LN3@PropagateC@2:

; 97   :     {
; 98   :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_ECU_NOP;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 0

; 99   :       PropagateConstants_ECU_NOP(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_ECU_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_ECU_NOP
	add	esp, 4
$LN2@PropagateC@2:

; 100  :     }
; 101  :   }
; 102  :   else

	jmp	SHORT $LN6@PropagateC@2
$LN4@PropagateC@2:

; 103  :   {
; 104  :     constants.status.status = PROPAGATE_CONSTANTS_STATUS_BRANCH_CONDITIONAL_DIRECT;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+12], 8

; 105  :     //number of delay slots to execute
; 106  :     constants.status.info[0] = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+16], edx

; 107  :     constants.status.info[1] = 0;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+20], 0
$LN6@PropagateC@2:

; 108  :   }
; 109  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@PropagateC@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@PropagateC@2:
	DD	1
	DD	$LN9@PropagateC@2
$LN9@PropagateC@2:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN8@PropagateC@2
$LN8@PropagateC@2:
	DB	98					; 00000062H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?PropagateConstants_BRAConditional_NOP@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_BRAConditional_NOP
_TEXT	ENDS
PUBLIC	?ClearScalarInputDependency@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::ClearScalarInputDependency
PUBLIC	?GetScalarRegisterConstant@SuperBlockConstants@@QAEII@Z ; SuperBlockConstants::GetScalarRegisterConstant
PUBLIC	?IsScalarRegisterConstant@SuperBlockConstants@@QAE_NI@Z ; SuperBlockConstants::IsScalarRegisterConstant
PUBLIC	?PropagateConstants_JMPAlwaysIndirect@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JMPAlwaysIndirect
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_regIndex$ = -4						; size = 4
_constants$ = 8						; size = 4
?PropagateConstants_JMPAlwaysIndirect@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_JMPAlwaysIndirect

; 112  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 113  :   uint32 regIndex = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _regIndex$[ebp], edx

; 114  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 115  : 
; 116  :   if(!ALLOW_PROPAGATE_ECU)

	xor	eax, eax
	je	SHORT $LN3@PropagateC@3

; 117  :   {
; 118  :     return;

	jmp	SHORT $LN4@PropagateC@3
$LN3@PropagateC@3:

; 119  :   }
; 120  : 
; 121  :   if(constants.IsScalarRegisterConstant(regIndex))

	mov	ecx, DWORD PTR _regIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?IsScalarRegisterConstant@SuperBlockConstants@@QAE_NI@Z ; SuperBlockConstants::IsScalarRegisterConstant
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@PropagateC@3

; 122  :   {
; 123  :     constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_BRAAlways;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], 2

; 124  :     constants.nuance->fields[FIELD_ECU_ADDRESS] = constants.GetScalarRegisterConstant(regIndex);

	mov	edx, DWORD PTR _regIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?GetScalarRegisterConstant@SuperBlockConstants@@QAEII@Z ; SuperBlockConstants::GetScalarRegisterConstant
	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+8], eax

; 125  :     constants.ClearScalarInputDependency(regIndex);

	mov	eax, DWORD PTR _regIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?ClearScalarInputDependency@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::ClearScalarInputDependency

; 126  :     PropagateConstants_BRAAlways(constants);

	mov	ecx, DWORD PTR _constants$[ebp]
	push	ecx
	call	?PropagateConstants_BRAAlways@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_BRAAlways
	add	esp, 4

; 127  :   }
; 128  :   else

	jmp	SHORT $LN4@PropagateC@3
$LN2@PropagateC@3:

; 129  :   {
; 130  :     constants.status.status = PROPAGATE_CONSTANTS_STATUS_BRANCH_ALWAYS_INDIRECT;

	mov	edx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [edx+12], 9

; 131  :     //number of delay slots to execute
; 132  :     constants.status.info[0] = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+16], eax

; 133  :     constants.status.info[1] = 2;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+20], 2
$LN4@PropagateC@3:

; 134  :   }
; 135  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?PropagateConstants_JMPAlwaysIndirect@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_JMPAlwaysIndirect
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\superblockconstants.h
_TEXT	ENDS
;	COMDAT ?ClearScalarInputDependency@SuperBlockConstants@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?ClearScalarInputDependency@SuperBlockConstants@@QAEXI@Z PROC ; SuperBlockConstants::ClearScalarInputDependency, COMDAT
; _this$ = ecx

; 93   :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 94   :     pCurrentInstructionEntry->scalarInputDependencies &= ~(1UL << index);

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	eax, 1
	mov	ecx, DWORD PTR _index$[ebp]
	shl	eax, cl
	not	eax
	and	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+32], eax

; 95   :   }

	mov	esp, ebp
	pop	ebp
	ret	4
?ClearScalarInputDependency@SuperBlockConstants@@QAEXI@Z ENDP ; SuperBlockConstants::ClearScalarInputDependency
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsScalarRegisterConstant@SuperBlockConstants@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?IsScalarRegisterConstant@SuperBlockConstants@@QAE_NI@Z PROC ; SuperBlockConstants::IsScalarRegisterConstant, COMDAT
; _this$ = ecx

; 205  :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 206  :     return (scalarRegisterConstantsStatus & (1UL << index)) != 0;

	mov	eax, 1
	mov	ecx, DWORD PTR _index$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+556]
	neg	eax
	sbb	eax, eax
	neg	eax

; 207  :   }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsScalarRegisterConstant@SuperBlockConstants@@QAE_NI@Z ENDP ; SuperBlockConstants::IsScalarRegisterConstant
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetScalarRegisterConstant@SuperBlockConstants@@QAEII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?GetScalarRegisterConstant@SuperBlockConstants@@QAEII@Z PROC ; SuperBlockConstants::GetScalarRegisterConstant, COMDAT
; _this$ = ecx

; 213  :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 214  :     return scalarRegisterConstants[index];

	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+300]

; 215  :   }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetScalarRegisterConstant@SuperBlockConstants@@QAEII@Z ENDP ; SuperBlockConstants::GetScalarRegisterConstant
_TEXT	ENDS
PUBLIC	?PropagateConstants_JMPAlwaysIndirect_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JMPAlwaysIndirect_NOP
; Function compile flags: /Odtp /RTCsu
; File c:\nuanceexperimental\propagateconstants_ecu.cpp
_TEXT	SEGMENT
_regIndex$ = -4						; size = 4
_constants$ = 8						; size = 4
?PropagateConstants_JMPAlwaysIndirect_NOP@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_JMPAlwaysIndirect_NOP

; 138  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 139  :   uint32 regIndex = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _regIndex$[ebp], edx

; 140  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 141  : 
; 142  :   if(!ALLOW_PROPAGATE_ECU)

	xor	eax, eax
	je	SHORT $LN3@PropagateC@4

; 143  :   {
; 144  :     return;

	jmp	SHORT $LN4@PropagateC@4
$LN3@PropagateC@4:

; 145  :   }
; 146  : 
; 147  :   if(constants.IsScalarRegisterConstant(regIndex))

	mov	ecx, DWORD PTR _regIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?IsScalarRegisterConstant@SuperBlockConstants@@QAE_NI@Z ; SuperBlockConstants::IsScalarRegisterConstant
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@PropagateC@4

; 148  :   {
; 149  :     constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_BRAAlways_NOP;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], 3

; 150  :     constants.nuance->fields[FIELD_ECU_ADDRESS] = constants.GetScalarRegisterConstant(regIndex);

	mov	edx, DWORD PTR _regIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?GetScalarRegisterConstant@SuperBlockConstants@@QAEII@Z ; SuperBlockConstants::GetScalarRegisterConstant
	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+8], eax

; 151  :     constants.ClearScalarInputDependency(regIndex);

	mov	eax, DWORD PTR _regIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?ClearScalarInputDependency@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::ClearScalarInputDependency

; 152  :     PropagateConstants_BRAAlways_NOP(constants);

	mov	ecx, DWORD PTR _constants$[ebp]
	push	ecx
	call	?PropagateConstants_BRAAlways_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_BRAAlways_NOP
	add	esp, 4

; 153  :   }
; 154  :   else

	jmp	SHORT $LN4@PropagateC@4
$LN2@PropagateC@4:

; 155  :   {
; 156  :     constants.status.status = PROPAGATE_CONSTANTS_STATUS_BRANCH_ALWAYS_INDIRECT;

	mov	edx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [edx+12], 9

; 157  :     constants.status.info[0] = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+16], eax

; 158  :     //number of delay slots to execute
; 159  :     constants.status.info[1] = 0;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+20], 0
$LN4@PropagateC@4:

; 160  :   }
; 161  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?PropagateConstants_JMPAlwaysIndirect_NOP@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_JMPAlwaysIndirect_NOP
_TEXT	ENDS
PUBLIC	?PropagateConstants_JMPConditionalIndirect@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JMPConditionalIndirect
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_branchResult$ = -5					; size = 1
_constants$ = 8						; size = 4
?PropagateConstants_JMPConditionalIndirect@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_JMPConditionalIndirect

; 163  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 164  :   bool branchResult;
; 165  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 166  : 
; 167  :   if(!ALLOW_PROPAGATE_ECU)

	xor	eax, eax
	je	SHORT $LN5@PropagateC@5

; 168  :   {
; 169  :     return;

	jmp	SHORT $LN6@PropagateC@5
$LN5@PropagateC@5:

; 170  :   }
; 171  : 
; 172  :   if(constants.EvaluateBranchCondition(constants.nuance->fields[FIELD_ECU_CONDITION], &branchResult))

	lea	ecx, DWORD PTR _branchResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?EvaluateBranchCondition@SuperBlockConstants@@QAE_NIPA_N@Z ; SuperBlockConstants::EvaluateBranchCondition
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@PropagateC@5

; 173  :   {
; 174  :     if(branchResult)

	movzx	eax, BYTE PTR _branchResult$[ebp]
	test	eax, eax
	je	SHORT $LN3@PropagateC@5

; 175  :     {
; 176  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_JMPAlwaysIndirect;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 6

; 177  :       PropagateConstants_JMPAlwaysIndirect(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_JMPAlwaysIndirect@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JMPAlwaysIndirect
	add	esp, 4

; 178  :     }
; 179  :     else

	jmp	SHORT $LN2@PropagateC@5
$LN3@PropagateC@5:

; 180  :     {
; 181  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_ECU_NOP;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 0

; 182  :       PropagateConstants_ECU_NOP(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_ECU_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_ECU_NOP
	add	esp, 4
$LN2@PropagateC@5:

; 183  :     }
; 184  :   }
; 185  :   else

	jmp	SHORT $LN6@PropagateC@5
$LN4@PropagateC@5:

; 186  :   {
; 187  :     constants.status.status = PROPAGATE_CONSTANTS_STATUS_BRANCH_CONDITIONAL_INDIRECT;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+12], 10			; 0000000aH

; 188  :     constants.status.info[0] = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+16], edx

; 189  :     //number of delay slots to execute
; 190  :     constants.status.info[1] = 2;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+20], 2
$LN6@PropagateC@5:

; 191  :   }
; 192  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@PropagateC@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@PropagateC@5:
	DD	1
	DD	$LN9@PropagateC@5
$LN9@PropagateC@5:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN8@PropagateC@5
$LN8@PropagateC@5:
	DB	98					; 00000062H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?PropagateConstants_JMPConditionalIndirect@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_JMPConditionalIndirect
_TEXT	ENDS
PUBLIC	?PropagateConstants_JMPConditionalIndirect_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JMPConditionalIndirect_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_branchResult$ = -5					; size = 1
_constants$ = 8						; size = 4
?PropagateConstants_JMPConditionalIndirect_NOP@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_JMPConditionalIndirect_NOP

; 194  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 195  :   bool branchResult;
; 196  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 197  : 
; 198  :   if(!ALLOW_PROPAGATE_ECU)

	xor	eax, eax
	je	SHORT $LN5@PropagateC@6

; 199  :   {
; 200  :     return;

	jmp	SHORT $LN6@PropagateC@6
$LN5@PropagateC@6:

; 201  :   }
; 202  : 
; 203  :   if(constants.EvaluateBranchCondition(constants.nuance->fields[FIELD_ECU_CONDITION], &branchResult))

	lea	ecx, DWORD PTR _branchResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?EvaluateBranchCondition@SuperBlockConstants@@QAE_NIPA_N@Z ; SuperBlockConstants::EvaluateBranchCondition
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@PropagateC@6

; 204  :   {
; 205  :     if(branchResult)

	movzx	eax, BYTE PTR _branchResult$[ebp]
	test	eax, eax
	je	SHORT $LN3@PropagateC@6

; 206  :     {
; 207  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_JMPAlwaysIndirect_NOP;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 7

; 208  :       PropagateConstants_JMPAlwaysIndirect_NOP(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_JMPAlwaysIndirect_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JMPAlwaysIndirect_NOP
	add	esp, 4

; 209  :     }
; 210  :     else

	jmp	SHORT $LN2@PropagateC@6
$LN3@PropagateC@6:

; 211  :     {
; 212  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_ECU_NOP;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 0

; 213  :       PropagateConstants_ECU_NOP(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_ECU_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_ECU_NOP
	add	esp, 4
$LN2@PropagateC@6:

; 214  :     }
; 215  :   }
; 216  :   else

	jmp	SHORT $LN6@PropagateC@6
$LN4@PropagateC@6:

; 217  :   {
; 218  :     constants.status.status = PROPAGATE_CONSTANTS_STATUS_BRANCH_CONDITIONAL_INDIRECT;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+12], 10			; 0000000aH

; 219  :     constants.status.info[0] = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+16], edx

; 220  :     //number of delay slots to execute
; 221  :     constants.status.info[1] = 0;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+20], 0
$LN6@PropagateC@6:

; 222  :   }
; 223  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@PropagateC@6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@PropagateC@6:
	DD	1
	DD	$LN9@PropagateC@6
$LN9@PropagateC@6:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN8@PropagateC@6
$LN8@PropagateC@6:
	DB	98					; 00000062H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?PropagateConstants_JMPConditionalIndirect_NOP@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_JMPConditionalIndirect_NOP
_TEXT	ENDS
PUBLIC	?PropagateConstants_JSRAlways@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JSRAlways
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_constants$ = 8						; size = 4
?PropagateConstants_JSRAlways@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_JSRAlways

; 225  : {

	push	ebp
	mov	ebp, esp

; 226  :   constants.status.status = PROPAGATE_CONSTANTS_STATUS_JSR_ALWAYS_DIRECT;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+12], 11			; 0000000bH

; 227  :   constants.status.info[0] = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+16], ecx

; 228  :   //number of delay slots to execute
; 229  :   constants.status.info[1] = 2;

	mov	edx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [edx+20], 2

; 230  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 231  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?PropagateConstants_JSRAlways@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_JSRAlways
_TEXT	ENDS
PUBLIC	?PropagateConstants_JSRAlways_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JSRAlways_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_constants$ = 8						; size = 4
?PropagateConstants_JSRAlways_NOP@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_JSRAlways_NOP

; 234  : {

	push	ebp
	mov	ebp, esp

; 235  :   constants.status.status = PROPAGATE_CONSTANTS_STATUS_JSR_ALWAYS_DIRECT;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+12], 11			; 0000000bH

; 236  :   constants.status.info[0] = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+16], ecx

; 237  :   //number of delay slots to execute
; 238  :   constants.status.info[1] = 0;

	mov	edx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [edx+20], 0

; 239  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 240  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?PropagateConstants_JSRAlways_NOP@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_JSRAlways_NOP
_TEXT	ENDS
PUBLIC	?PropagateConstants_JSRConditional@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JSRConditional
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_branchResult$ = -5					; size = 1
_constants$ = 8						; size = 4
?PropagateConstants_JSRConditional@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_JSRConditional

; 242  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 243  :   bool branchResult;
; 244  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 245  : 
; 246  :   if(!ALLOW_PROPAGATE_ECU)

	xor	eax, eax
	je	SHORT $LN5@PropagateC@7

; 247  :   {
; 248  :     return;

	jmp	SHORT $LN6@PropagateC@7
$LN5@PropagateC@7:

; 249  :   }
; 250  : 
; 251  :   if(constants.EvaluateBranchCondition(constants.nuance->fields[FIELD_ECU_CONDITION], &branchResult))

	lea	ecx, DWORD PTR _branchResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?EvaluateBranchCondition@SuperBlockConstants@@QAE_NIPA_N@Z ; SuperBlockConstants::EvaluateBranchCondition
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@PropagateC@7

; 252  :   {
; 253  :     if(branchResult)

	movzx	eax, BYTE PTR _branchResult$[ebp]
	test	eax, eax
	je	SHORT $LN3@PropagateC@7

; 254  :     {
; 255  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_JSRAlways;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 10			; 0000000aH

; 256  :       PropagateConstants_JSRAlways(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_JSRAlways@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JSRAlways
	add	esp, 4

; 257  :     }
; 258  :     else

	jmp	SHORT $LN2@PropagateC@7
$LN3@PropagateC@7:

; 259  :     {
; 260  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_ECU_NOP;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 0

; 261  :       PropagateConstants_ECU_NOP(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_ECU_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_ECU_NOP
	add	esp, 4
$LN2@PropagateC@7:

; 262  :     }
; 263  :   }
; 264  :   else

	jmp	SHORT $LN6@PropagateC@7
$LN4@PropagateC@7:

; 265  :   {
; 266  :     constants.status.status = PROPAGATE_CONSTANTS_STATUS_JSR_CONDITIONAL_DIRECT;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+12], 12			; 0000000cH

; 267  :     constants.status.info[0] = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+16], edx

; 268  :     //number of delay slots to execute
; 269  :     constants.status.info[1] = 2;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+20], 2
$LN6@PropagateC@7:

; 270  :   }
; 271  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@PropagateC@7
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@PropagateC@7:
	DD	1
	DD	$LN9@PropagateC@7
$LN9@PropagateC@7:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN8@PropagateC@7
$LN8@PropagateC@7:
	DB	98					; 00000062H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?PropagateConstants_JSRConditional@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_JSRConditional
_TEXT	ENDS
PUBLIC	?PropagateConstants_JSRConditional_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JSRConditional_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_branchResult$ = -5					; size = 1
_constants$ = 8						; size = 4
?PropagateConstants_JSRConditional_NOP@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_JSRConditional_NOP

; 273  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 274  :   bool branchResult;
; 275  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 276  : 
; 277  :   if(!ALLOW_PROPAGATE_ECU)

	xor	eax, eax
	je	SHORT $LN5@PropagateC@8

; 278  :   {
; 279  :     return;

	jmp	SHORT $LN6@PropagateC@8
$LN5@PropagateC@8:

; 280  :   }
; 281  : 
; 282  :   if(constants.EvaluateBranchCondition(constants.nuance->fields[FIELD_ECU_CONDITION], &branchResult))

	lea	ecx, DWORD PTR _branchResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?EvaluateBranchCondition@SuperBlockConstants@@QAE_NIPA_N@Z ; SuperBlockConstants::EvaluateBranchCondition
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@PropagateC@8

; 283  :   {
; 284  :     if(branchResult)

	movzx	eax, BYTE PTR _branchResult$[ebp]
	test	eax, eax
	je	SHORT $LN3@PropagateC@8

; 285  :     {
; 286  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_JSRAlways_NOP;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 11			; 0000000bH

; 287  :       PropagateConstants_JSRAlways_NOP(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_JSRAlways_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JSRAlways_NOP
	add	esp, 4

; 288  :     }
; 289  :     else

	jmp	SHORT $LN2@PropagateC@8
$LN3@PropagateC@8:

; 290  :     {
; 291  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_ECU_NOP;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 0

; 292  :       PropagateConstants_ECU_NOP(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_ECU_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_ECU_NOP
	add	esp, 4
$LN2@PropagateC@8:

; 293  :     }
; 294  :   }
; 295  :   else

	jmp	SHORT $LN6@PropagateC@8
$LN4@PropagateC@8:

; 296  :   {
; 297  :     constants.status.status = PROPAGATE_CONSTANTS_STATUS_JSR_CONDITIONAL_DIRECT;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+12], 12			; 0000000cH

; 298  :     constants.status.info[0] = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+16], edx

; 299  :     //number of delay slots to execute
; 300  :     constants.status.info[1] = 0;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+20], 0
$LN6@PropagateC@8:

; 301  :   }
; 302  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@PropagateC@8
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@PropagateC@8:
	DD	1
	DD	$LN9@PropagateC@8
$LN9@PropagateC@8:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN8@PropagateC@8
$LN8@PropagateC@8:
	DB	98					; 00000062H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?PropagateConstants_JSRConditional_NOP@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_JSRConditional_NOP
_TEXT	ENDS
PUBLIC	?PropagateConstants_JSRAlwaysIndirect@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JSRAlwaysIndirect
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_regIndex$ = -4						; size = 4
_constants$ = 8						; size = 4
?PropagateConstants_JSRAlwaysIndirect@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_JSRAlwaysIndirect

; 304  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 305  :   uint32 regIndex = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _regIndex$[ebp], edx

; 306  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 307  : 
; 308  :   if(!ALLOW_PROPAGATE_ECU)

	xor	eax, eax
	je	SHORT $LN3@PropagateC@9

; 309  :   {
; 310  :     return;

	jmp	SHORT $LN4@PropagateC@9
$LN3@PropagateC@9:

; 311  :   }
; 312  : 
; 313  :   if(constants.IsScalarRegisterConstant(regIndex))

	mov	ecx, DWORD PTR _regIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?IsScalarRegisterConstant@SuperBlockConstants@@QAE_NI@Z ; SuperBlockConstants::IsScalarRegisterConstant
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@PropagateC@9

; 314  :   {
; 315  :     constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_JSRAlways;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], 10			; 0000000aH

; 316  :     constants.nuance->fields[FIELD_ECU_ADDRESS] = constants.GetScalarRegisterConstant(regIndex);

	mov	edx, DWORD PTR _regIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?GetScalarRegisterConstant@SuperBlockConstants@@QAEII@Z ; SuperBlockConstants::GetScalarRegisterConstant
	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+8], eax

; 317  :     constants.ClearScalarInputDependency(regIndex);

	mov	eax, DWORD PTR _regIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?ClearScalarInputDependency@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::ClearScalarInputDependency

; 318  :     PropagateConstants_JSRAlways(constants);

	mov	ecx, DWORD PTR _constants$[ebp]
	push	ecx
	call	?PropagateConstants_JSRAlways@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JSRAlways
	add	esp, 4

; 319  :   }
; 320  :   else

	jmp	SHORT $LN4@PropagateC@9
$LN2@PropagateC@9:

; 321  :   {
; 322  :     constants.status.status = PROPAGATE_CONSTANTS_STATUS_JSR_ALWAYS_INDIRECT;

	mov	edx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [edx+12], 13			; 0000000dH

; 323  :     constants.status.info[0] = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+16], eax

; 324  :     //number of delay slots to execute
; 325  :     constants.status.info[1] = 2;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+20], 2
$LN4@PropagateC@9:

; 326  :   }
; 327  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?PropagateConstants_JSRAlwaysIndirect@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_JSRAlwaysIndirect
_TEXT	ENDS
PUBLIC	?PropagateConstants_JSRAlwaysIndirect_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JSRAlwaysIndirect_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_regIndex$ = -4						; size = 4
_constants$ = 8						; size = 4
?PropagateConstants_JSRAlwaysIndirect_NOP@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_JSRAlwaysIndirect_NOP

; 329  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 330  :   uint32 regIndex = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _regIndex$[ebp], edx

; 331  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 332  : 
; 333  : 
; 334  :   if(!ALLOW_PROPAGATE_ECU)

	xor	eax, eax
	je	SHORT $LN3@PropagateC@10

; 335  :   {
; 336  :     return;

	jmp	SHORT $LN4@PropagateC@10
$LN3@PropagateC@10:

; 337  :   }
; 338  : 
; 339  :   if(constants.IsScalarRegisterConstant(regIndex))

	mov	ecx, DWORD PTR _regIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?IsScalarRegisterConstant@SuperBlockConstants@@QAE_NI@Z ; SuperBlockConstants::IsScalarRegisterConstant
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@PropagateC@10

; 340  :   {
; 341  :     constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_JSRAlways_NOP;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], 11			; 0000000bH

; 342  :     constants.nuance->fields[FIELD_ECU_ADDRESS] = constants.GetScalarRegisterConstant(regIndex);

	mov	edx, DWORD PTR _regIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?GetScalarRegisterConstant@SuperBlockConstants@@QAEII@Z ; SuperBlockConstants::GetScalarRegisterConstant
	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+8], eax

; 343  :     constants.ClearScalarInputDependency(regIndex);

	mov	eax, DWORD PTR _regIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?ClearScalarInputDependency@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::ClearScalarInputDependency

; 344  :     PropagateConstants_JSRAlways_NOP(constants);

	mov	ecx, DWORD PTR _constants$[ebp]
	push	ecx
	call	?PropagateConstants_JSRAlways_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JSRAlways_NOP
	add	esp, 4

; 345  :   }
; 346  :   else

	jmp	SHORT $LN4@PropagateC@10
$LN2@PropagateC@10:

; 347  :   {
; 348  :     constants.status.status = PROPAGATE_CONSTANTS_STATUS_JSR_ALWAYS_INDIRECT;

	mov	edx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [edx+12], 13			; 0000000dH

; 349  :     constants.status.info[0] = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+16], eax

; 350  :     //number of delay slots to execute
; 351  :     constants.status.info[1] = 0;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+20], 0
$LN4@PropagateC@10:

; 352  :   }
; 353  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?PropagateConstants_JSRAlwaysIndirect_NOP@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_JSRAlwaysIndirect_NOP
_TEXT	ENDS
PUBLIC	?PropagateConstants_JSRConditionalIndirect@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JSRConditionalIndirect
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_branchResult$ = -5					; size = 1
_constants$ = 8						; size = 4
?PropagateConstants_JSRConditionalIndirect@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_JSRConditionalIndirect

; 355  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 356  :   bool branchResult;
; 357  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 358  : 
; 359  : 
; 360  :   if(!ALLOW_PROPAGATE_ECU)

	xor	eax, eax
	je	SHORT $LN5@PropagateC@11

; 361  :   {
; 362  :     return;

	jmp	SHORT $LN6@PropagateC@11
$LN5@PropagateC@11:

; 363  :   }
; 364  : 
; 365  :   if(constants.EvaluateBranchCondition(constants.nuance->fields[FIELD_ECU_CONDITION], &branchResult))

	lea	ecx, DWORD PTR _branchResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?EvaluateBranchCondition@SuperBlockConstants@@QAE_NIPA_N@Z ; SuperBlockConstants::EvaluateBranchCondition
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@PropagateC@11

; 366  :   {
; 367  :     if(branchResult)

	movzx	eax, BYTE PTR _branchResult$[ebp]
	test	eax, eax
	je	SHORT $LN3@PropagateC@11

; 368  :     {
; 369  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_JSRAlwaysIndirect;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 14			; 0000000eH

; 370  :       PropagateConstants_JSRAlwaysIndirect(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_JSRAlwaysIndirect@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JSRAlwaysIndirect
	add	esp, 4

; 371  :     }
; 372  :     else

	jmp	SHORT $LN2@PropagateC@11
$LN3@PropagateC@11:

; 373  :     {
; 374  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_ECU_NOP;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 0

; 375  :       PropagateConstants_ECU_NOP(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_ECU_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_ECU_NOP
	add	esp, 4
$LN2@PropagateC@11:

; 376  :     }
; 377  :   }
; 378  :   else

	jmp	SHORT $LN6@PropagateC@11
$LN4@PropagateC@11:

; 379  :   {
; 380  :     constants.status.status = PROPAGATE_CONSTANTS_STATUS_JSR_CONDITIONAL_INDIRECT;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+12], 14			; 0000000eH

; 381  :     constants.status.info[0] = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+16], edx

; 382  :     //number of delay slots to execute
; 383  :     constants.status.info[1] = 2;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+20], 2
$LN6@PropagateC@11:

; 384  :   }
; 385  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@PropagateC@11
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@PropagateC@11:
	DD	1
	DD	$LN9@PropagateC@11
$LN9@PropagateC@11:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN8@PropagateC@11
$LN8@PropagateC@11:
	DB	98					; 00000062H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?PropagateConstants_JSRConditionalIndirect@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_JSRConditionalIndirect
_TEXT	ENDS
PUBLIC	?PropagateConstants_JSRConditionalIndirect_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JSRConditionalIndirect_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_branchResult$ = -5					; size = 1
_constants$ = 8						; size = 4
?PropagateConstants_JSRConditionalIndirect_NOP@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_JSRConditionalIndirect_NOP

; 387  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 388  :   bool branchResult;
; 389  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 390  : 
; 391  :   if(!ALLOW_PROPAGATE_ECU)

	xor	eax, eax
	je	SHORT $LN5@PropagateC@12

; 392  :   {
; 393  :     return;

	jmp	SHORT $LN6@PropagateC@12
$LN5@PropagateC@12:

; 394  :   }
; 395  : 
; 396  :   if(constants.EvaluateBranchCondition(constants.nuance->fields[FIELD_ECU_CONDITION], &branchResult))

	lea	ecx, DWORD PTR _branchResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?EvaluateBranchCondition@SuperBlockConstants@@QAE_NIPA_N@Z ; SuperBlockConstants::EvaluateBranchCondition
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@PropagateC@12

; 397  :   {
; 398  :     if(branchResult)

	movzx	eax, BYTE PTR _branchResult$[ebp]
	test	eax, eax
	je	SHORT $LN3@PropagateC@12

; 399  :     {
; 400  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_JSRAlwaysIndirect_NOP;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 15			; 0000000fH

; 401  :       PropagateConstants_JSRAlwaysIndirect_NOP(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_JSRAlwaysIndirect_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_JSRAlwaysIndirect_NOP
	add	esp, 4

; 402  :     }
; 403  :     else

	jmp	SHORT $LN2@PropagateC@12
$LN3@PropagateC@12:

; 404  :     {
; 405  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_ECU_NOP;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 0

; 406  :       PropagateConstants_ECU_NOP(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_ECU_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_ECU_NOP
	add	esp, 4
$LN2@PropagateC@12:

; 407  :     }
; 408  :   }
; 409  :   else

	jmp	SHORT $LN6@PropagateC@12
$LN4@PropagateC@12:

; 410  :   {
; 411  :     constants.status.status = PROPAGATE_CONSTANTS_STATUS_JSR_CONDITIONAL_INDIRECT;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+12], 14			; 0000000eH

; 412  :     constants.status.info[0] = constants.nuance->fields[FIELD_ECU_ADDRESS];

	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+16], edx

; 413  :     //number of delay slots to execute
; 414  :     constants.status.info[1] = 0;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+20], 0
$LN6@PropagateC@12:

; 415  :   }
; 416  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@PropagateC@12
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@PropagateC@12:
	DD	1
	DD	$LN9@PropagateC@12
$LN9@PropagateC@12:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN8@PropagateC@12
$LN8@PropagateC@12:
	DB	98					; 00000062H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?PropagateConstants_JSRConditionalIndirect_NOP@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_JSRConditionalIndirect_NOP
_TEXT	ENDS
PUBLIC	?PropagateConstants_RTSAlways@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_RTSAlways
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_constants$ = 8						; size = 4
?PropagateConstants_RTSAlways@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_RTSAlways

; 418  : {

	push	ebp
	mov	ebp, esp

; 419  :   constants.status.status = PROPAGATE_CONSTANTS_STATUS_RTS_ALWAYS;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+12], 15			; 0000000fH

; 420  :   //number of delay slots to execute
; 421  :   constants.status.info[1] = 2;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+20], 2

; 422  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 423  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?PropagateConstants_RTSAlways@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_RTSAlways
_TEXT	ENDS
PUBLIC	?PropagateConstants_RTSAlways_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_RTSAlways_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_constants$ = 8						; size = 4
?PropagateConstants_RTSAlways_NOP@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_RTSAlways_NOP

; 425  : {

	push	ebp
	mov	ebp, esp

; 426  :   constants.status.status = PROPAGATE_CONSTANTS_STATUS_RTS_ALWAYS;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+12], 15			; 0000000fH

; 427  :   //number of delay slots to execute
; 428  :   constants.status.info[1] = 0;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 429  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 430  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?PropagateConstants_RTSAlways_NOP@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_RTSAlways_NOP
_TEXT	ENDS
PUBLIC	?PropagateConstants_RTSConditional@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_RTSConditional
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_branchResult$ = -5					; size = 1
_constants$ = 8						; size = 4
?PropagateConstants_RTSConditional@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_RTSConditional

; 432  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 433  :   bool branchResult;
; 434  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 435  : 
; 436  :   if(!ALLOW_PROPAGATE_ECU)

	xor	eax, eax
	je	SHORT $LN5@PropagateC@13

; 437  :   {
; 438  :     return;

	jmp	SHORT $LN6@PropagateC@13
$LN5@PropagateC@13:

; 439  :   }
; 440  : 
; 441  :   if(constants.EvaluateBranchCondition(constants.nuance->fields[FIELD_ECU_CONDITION], &branchResult))

	lea	ecx, DWORD PTR _branchResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?EvaluateBranchCondition@SuperBlockConstants@@QAE_NIPA_N@Z ; SuperBlockConstants::EvaluateBranchCondition
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@PropagateC@13

; 442  :   {
; 443  :     if(branchResult)

	movzx	eax, BYTE PTR _branchResult$[ebp]
	test	eax, eax
	je	SHORT $LN3@PropagateC@13

; 444  :     {
; 445  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_RTSAlways;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 22			; 00000016H

; 446  :       PropagateConstants_RTSAlways(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_RTSAlways@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_RTSAlways
	add	esp, 4

; 447  :     }
; 448  :     else

	jmp	SHORT $LN2@PropagateC@13
$LN3@PropagateC@13:

; 449  :     {
; 450  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_ECU_NOP;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 0

; 451  :       PropagateConstants_ECU_NOP(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_ECU_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_ECU_NOP
	add	esp, 4
$LN2@PropagateC@13:

; 452  :     }
; 453  :   }
; 454  :   else

	jmp	SHORT $LN6@PropagateC@13
$LN4@PropagateC@13:

; 455  :   {
; 456  :     constants.status.status = PROPAGATE_CONSTANTS_STATUS_RTS_CONDITIONAL;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+12], 16			; 00000010H

; 457  :     //number of delay slots to execute
; 458  :     constants.status.info[1] = 2;

	mov	edx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [edx+20], 2
$LN6@PropagateC@13:

; 459  :   }
; 460  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@PropagateC@13
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@PropagateC@13:
	DD	1
	DD	$LN9@PropagateC@13
$LN9@PropagateC@13:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN8@PropagateC@13
$LN8@PropagateC@13:
	DB	98					; 00000062H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?PropagateConstants_RTSConditional@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_RTSConditional
_TEXT	ENDS
PUBLIC	?PropagateConstants_RTSConditional_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_RTSConditional_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_branchResult$ = -5					; size = 1
_constants$ = 8						; size = 4
?PropagateConstants_RTSConditional_NOP@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_RTSConditional_NOP

; 462  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 463  :   bool branchResult;
; 464  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 465  : 
; 466  :   if(!ALLOW_PROPAGATE_ECU)

	xor	eax, eax
	je	SHORT $LN5@PropagateC@14

; 467  :   {
; 468  :     return;

	jmp	SHORT $LN6@PropagateC@14
$LN5@PropagateC@14:

; 469  :   }
; 470  : 
; 471  :   if(constants.EvaluateBranchCondition(constants.nuance->fields[FIELD_ECU_CONDITION], &branchResult))

	lea	ecx, DWORD PTR _branchResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?EvaluateBranchCondition@SuperBlockConstants@@QAE_NIPA_N@Z ; SuperBlockConstants::EvaluateBranchCondition
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@PropagateC@14

; 472  :   {
; 473  :     if(branchResult)

	movzx	eax, BYTE PTR _branchResult$[ebp]
	test	eax, eax
	je	SHORT $LN3@PropagateC@14

; 474  :     {
; 475  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_RTSAlways_NOP;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 23			; 00000017H

; 476  :       PropagateConstants_RTSAlways_NOP(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_RTSAlways_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_RTSAlways_NOP
	add	esp, 4

; 477  :     }
; 478  :     else

	jmp	SHORT $LN2@PropagateC@14
$LN3@PropagateC@14:

; 479  :     {
; 480  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_ECU_NOP;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], 0

; 481  :       PropagateConstants_ECU_NOP(constants);

	mov	eax, DWORD PTR _constants$[ebp]
	push	eax
	call	?PropagateConstants_ECU_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_ECU_NOP
	add	esp, 4
$LN2@PropagateC@14:

; 482  :     }
; 483  :   }
; 484  :   else

	jmp	SHORT $LN6@PropagateC@14
$LN4@PropagateC@14:

; 485  :   {
; 486  :     constants.status.status = PROPAGATE_CONSTANTS_STATUS_RTS_CONDITIONAL;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+12], 16			; 00000010H

; 487  :     //number of delay slots to execute
; 488  :     constants.status.info[1] = 0;

	mov	edx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [edx+20], 0
$LN6@PropagateC@14:

; 489  :   }
; 490  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@PropagateC@14
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@PropagateC@14:
	DD	1
	DD	$LN9@PropagateC@14
$LN9@PropagateC@14:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN8@PropagateC@14
$LN8@PropagateC@14:
	DB	98					; 00000062H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?PropagateConstants_RTSConditional_NOP@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_RTSConditional_NOP
_TEXT	ENDS
PUBLIC	?PropagateConstants_RTI1Conditional@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_RTI1Conditional
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_branchResult$ = -5					; size = 1
_constants$ = 8						; size = 4
?PropagateConstants_RTI1Conditional@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_RTI1Conditional

; 492  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 493  :   bool branchResult;
; 494  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 495  : 
; 496  :   if(!ALLOW_PROPAGATE_ECU)

	xor	eax, eax
	je	SHORT $LN5@PropagateC@15

; 497  :   {
; 498  :     return;

	jmp	SHORT $LN6@PropagateC@15
$LN5@PropagateC@15:

; 499  :   }
; 500  : 
; 501  :   if(constants.EvaluateBranchCondition(constants.nuance->fields[FIELD_ECU_CONDITION], &branchResult))

	lea	ecx, DWORD PTR _branchResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?EvaluateBranchCondition@SuperBlockConstants@@QAE_NIPA_N@Z ; SuperBlockConstants::EvaluateBranchCondition
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@PropagateC@15

; 502  :   {
; 503  :     if(branchResult)

	movzx	eax, BYTE PTR _branchResult$[ebp]
	test	eax, eax
	je	SHORT $LN3@PropagateC@15

; 504  :     {
; 505  :       constants.status.status = PROPAGATE_CONSTANTS_STATUS_RTI1_ALWAYS;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+12], 17			; 00000011H

; 506  :       //number of delay slots to execute
; 507  :       constants.status.info[1] = 2;

	mov	edx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [edx+20], 2

; 508  :     }
; 509  :     else

	jmp	SHORT $LN2@PropagateC@15
$LN3@PropagateC@15:

; 510  :     {
; 511  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_ECU_NOP;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], 0

; 512  :       PropagateConstants_ECU_NOP(constants);

	mov	edx, DWORD PTR _constants$[ebp]
	push	edx
	call	?PropagateConstants_ECU_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_ECU_NOP
	add	esp, 4
$LN2@PropagateC@15:

; 513  :     }
; 514  :   }
; 515  :   else

	jmp	SHORT $LN6@PropagateC@15
$LN4@PropagateC@15:

; 516  :   {
; 517  :     constants.status.status = PROPAGATE_CONSTANTS_STATUS_RTI1_CONDITIONAL;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+12], 18			; 00000012H

; 518  :     //number of delay slots to execute
; 519  :     constants.status.info[1] = 2;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+20], 2
$LN6@PropagateC@15:

; 520  :   }
; 521  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@PropagateC@15
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@PropagateC@15:
	DD	1
	DD	$LN9@PropagateC@15
$LN9@PropagateC@15:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN8@PropagateC@15
$LN8@PropagateC@15:
	DB	98					; 00000062H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?PropagateConstants_RTI1Conditional@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_RTI1Conditional
_TEXT	ENDS
PUBLIC	?PropagateConstants_RTI1Conditional_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_RTI1Conditional_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_branchResult$ = -5					; size = 1
_constants$ = 8						; size = 4
?PropagateConstants_RTI1Conditional_NOP@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_RTI1Conditional_NOP

; 523  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 524  :   bool branchResult;
; 525  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 526  : 
; 527  :   if(!ALLOW_PROPAGATE_ECU)

	xor	eax, eax
	je	SHORT $LN5@PropagateC@16

; 528  :   {
; 529  :     return;

	jmp	SHORT $LN6@PropagateC@16
$LN5@PropagateC@16:

; 530  :   }
; 531  : 
; 532  :   if(constants.EvaluateBranchCondition(constants.nuance->fields[FIELD_ECU_CONDITION], &branchResult))

	lea	ecx, DWORD PTR _branchResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?EvaluateBranchCondition@SuperBlockConstants@@QAE_NIPA_N@Z ; SuperBlockConstants::EvaluateBranchCondition
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@PropagateC@16

; 533  :   {
; 534  :     if(branchResult)

	movzx	eax, BYTE PTR _branchResult$[ebp]
	test	eax, eax
	je	SHORT $LN3@PropagateC@16

; 535  :     {
; 536  :       constants.status.status = PROPAGATE_CONSTANTS_STATUS_RTI1_ALWAYS;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+12], 17			; 00000011H

; 537  :       //number of delay slots to execute
; 538  :       constants.status.info[1] = 0;

	mov	edx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [edx+20], 0

; 539  :     }
; 540  :     else

	jmp	SHORT $LN2@PropagateC@16
$LN3@PropagateC@16:

; 541  :     {
; 542  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_ECU_NOP;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], 0

; 543  :       PropagateConstants_ECU_NOP(constants);

	mov	edx, DWORD PTR _constants$[ebp]
	push	edx
	call	?PropagateConstants_ECU_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_ECU_NOP
	add	esp, 4
$LN2@PropagateC@16:

; 544  :     }
; 545  :   }
; 546  :   else

	jmp	SHORT $LN6@PropagateC@16
$LN4@PropagateC@16:

; 547  :   {
; 548  :     constants.status.status = PROPAGATE_CONSTANTS_STATUS_RTI1_CONDITIONAL;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+12], 18			; 00000012H

; 549  :     //number of delay slots to execute
; 550  :     constants.status.info[1] = 0;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+20], 0
$LN6@PropagateC@16:

; 551  :   }
; 552  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@PropagateC@16
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@PropagateC@16:
	DD	1
	DD	$LN9@PropagateC@16
$LN9@PropagateC@16:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN8@PropagateC@16
$LN8@PropagateC@16:
	DB	98					; 00000062H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?PropagateConstants_RTI1Conditional_NOP@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_RTI1Conditional_NOP
_TEXT	ENDS
PUBLIC	?PropagateConstants_RTI2Conditional@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_RTI2Conditional
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_branchResult$ = -5					; size = 1
_constants$ = 8						; size = 4
?PropagateConstants_RTI2Conditional@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_RTI2Conditional

; 554  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 555  :   bool branchResult;
; 556  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 557  : 
; 558  :   if(!ALLOW_PROPAGATE_ECU)

	xor	eax, eax
	je	SHORT $LN5@PropagateC@17

; 559  :   {
; 560  :     return;

	jmp	SHORT $LN6@PropagateC@17
$LN5@PropagateC@17:

; 561  :   }
; 562  : 
; 563  :   if(constants.EvaluateBranchCondition(constants.nuance->fields[FIELD_ECU_CONDITION], &branchResult))

	lea	ecx, DWORD PTR _branchResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?EvaluateBranchCondition@SuperBlockConstants@@QAE_NIPA_N@Z ; SuperBlockConstants::EvaluateBranchCondition
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@PropagateC@17

; 564  :   {
; 565  :     if(branchResult)

	movzx	eax, BYTE PTR _branchResult$[ebp]
	test	eax, eax
	je	SHORT $LN3@PropagateC@17

; 566  :     {
; 567  :       constants.status.status = PROPAGATE_CONSTANTS_STATUS_RTI2_ALWAYS;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+12], 19			; 00000013H

; 568  :       //number of delay slots to execute
; 569  :       constants.status.info[1] = 2;

	mov	edx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [edx+20], 2

; 570  :     }
; 571  :     else

	jmp	SHORT $LN2@PropagateC@17
$LN3@PropagateC@17:

; 572  :     {
; 573  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_ECU_NOP;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], 0

; 574  :       PropagateConstants_ECU_NOP(constants);

	mov	edx, DWORD PTR _constants$[ebp]
	push	edx
	call	?PropagateConstants_ECU_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_ECU_NOP
	add	esp, 4
$LN2@PropagateC@17:

; 575  :     }
; 576  :   }
; 577  :   else

	jmp	SHORT $LN6@PropagateC@17
$LN4@PropagateC@17:

; 578  :   {
; 579  :     constants.status.status = PROPAGATE_CONSTANTS_STATUS_RTI2_CONDITIONAL;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+12], 20			; 00000014H

; 580  :     //number of delay slots to execute
; 581  :     constants.status.info[1] = 2;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+20], 2
$LN6@PropagateC@17:

; 582  :   }
; 583  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@PropagateC@17
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@PropagateC@17:
	DD	1
	DD	$LN9@PropagateC@17
$LN9@PropagateC@17:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN8@PropagateC@17
$LN8@PropagateC@17:
	DB	98					; 00000062H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?PropagateConstants_RTI2Conditional@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_RTI2Conditional
_TEXT	ENDS
PUBLIC	?PropagateConstants_RTI2Conditional_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_RTI2Conditional_NOP
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_branchResult$ = -5					; size = 1
_constants$ = 8						; size = 4
?PropagateConstants_RTI2Conditional_NOP@@YAXAAVSuperBlockConstants@@@Z PROC ; PropagateConstants_RTI2Conditional_NOP

; 585  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 586  :   bool branchResult;
; 587  :   constants.SetInstructionFlags(SUPERBLOCKINFO_LOCKED);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?SetInstructionFlags@SuperBlockConstants@@QAEXI@Z ; SuperBlockConstants::SetInstructionFlags

; 588  : 
; 589  :   if(!ALLOW_PROPAGATE_ECU)

	xor	eax, eax
	je	SHORT $LN5@PropagateC@18

; 590  :   {
; 591  :     return;

	jmp	SHORT $LN6@PropagateC@18
$LN5@PropagateC@18:

; 592  :   }
; 593  : 
; 594  :   if(constants.EvaluateBranchCondition(constants.nuance->fields[FIELD_ECU_CONDITION], &branchResult))

	lea	ecx, DWORD PTR _branchResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _constants$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _constants$[ebp]
	call	?EvaluateBranchCondition@SuperBlockConstants@@QAE_NIPA_N@Z ; SuperBlockConstants::EvaluateBranchCondition
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@PropagateC@18

; 595  :   {
; 596  :     if(branchResult)

	movzx	eax, BYTE PTR _branchResult$[ebp]
	test	eax, eax
	je	SHORT $LN3@PropagateC@18

; 597  :     {
; 598  :       constants.status.status = PROPAGATE_CONSTANTS_STATUS_RTI2_ALWAYS;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+12], 19			; 00000013H

; 599  :       //number of delay slots to execute
; 600  :       constants.status.info[1] = 0;

	mov	edx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [edx+20], 0

; 601  :     }
; 602  :     else

	jmp	SHORT $LN2@PropagateC@18
$LN3@PropagateC@18:

; 603  :     {
; 604  :       constants.nuance->fields[FIELD_ECU_HANDLER] = Handler_ECU_NOP;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], 0

; 605  :       PropagateConstants_ECU_NOP(constants);

	mov	edx, DWORD PTR _constants$[ebp]
	push	edx
	call	?PropagateConstants_ECU_NOP@@YAXAAVSuperBlockConstants@@@Z ; PropagateConstants_ECU_NOP
	add	esp, 4
$LN2@PropagateC@18:

; 606  :     }
; 607  :   }
; 608  :   else

	jmp	SHORT $LN6@PropagateC@18
$LN4@PropagateC@18:

; 609  :   {
; 610  :     constants.status.status = PROPAGATE_CONSTANTS_STATUS_RTI2_CONDITIONAL;

	mov	eax, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [eax+12], 20			; 00000014H

; 611  :     //number of delay slots to execute
; 612  :     constants.status.info[1] = 0;

	mov	ecx, DWORD PTR _constants$[ebp]
	mov	DWORD PTR [ecx+20], 0
$LN6@PropagateC@18:

; 613  :   }
; 614  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@PropagateC@18
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@PropagateC@18:
	DD	1
	DD	$LN9@PropagateC@18
$LN9@PropagateC@18:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN8@PropagateC@18
$LN8@PropagateC@18:
	DB	98					; 00000062H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
?PropagateConstants_RTI2Conditional_NOP@@YAXAAVSuperBlockConstants@@@Z ENDP ; PropagateConstants_RTI2Conditional_NOP
_TEXT	ENDS
END
